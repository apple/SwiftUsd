{"kind":"article","identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes","interfaceLanguage":"swift"},"metadata":{"title":"Casting between Foreign Reference Types","modules":[{"name":"OpenUSD"}],"role":"article","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Learn about casting with Foreign Reference Types"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types","generated":true,"title":"Working with foreign reference types"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When working with Swift types, Swift provides the ","type":"text"},{"code":"as","type":"codeVoice"},{"text":", ","type":"text"},{"code":"as?","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"as!","type":"codeVoice"},{"text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"SwiftUsd provides ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","isActive":true,"overridingTitleInlineContent":[{"code":"func as<T>(_ t: T.Type) -> T?","type":"codeVoice"}],"type":"reference","overridingTitle":"func as<T>(_ t: T.Type) -> T?"},{"text":" on types that inherit from ","type":"text"},{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":", to dynamically cast from one ","type":"text"},{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":" subclass to another. Use this instead of using ","type":"text"},{"type":"codeVoice","code":"as"},{"text":", ","type":"text"},{"type":"codeVoice","code":"as?"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"as!"},{"text":" to upcast or downcast.","type":"text"}]}]}],"references":{"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"type":"topic","abstract":[{"type":"text","text":"Dynamically casts "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to the argument type."}],"url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)","title":"as(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"abstract":[{"text":"Learn about ","type":"text"},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"text":" in Swift","type":"text"}],"url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","kind":"article","type":"topic","title":"Foreign Reference Types and Smart Pointers","role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"title":"What is a Foreign Reference Type?","url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","abstract":[{"text":"Learn about foreign reference types and how to use them","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","type":"topic"},"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","url":"\/documentation\/openusd","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","role":"collection","abstract":[],"type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":[{"generated":true,"anchor":"Working-with-foreign-reference-types","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"title":"Working with foreign reference types"}],"op":"replace"}]}]}