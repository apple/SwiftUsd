{"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"metadata":{"modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article","title":"Casting between Foreign Reference Types"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"type":"text","text":"Learn about casting with Foreign Reference Types"}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"title":"Working with foreign reference types","anchor":"Working-with-foreign-reference-types"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes"},"kind":"article","primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"When working with Swift types, Swift provides the ","type":"text"},{"code":"as","type":"codeVoice"},{"text":", ","type":"text"},{"code":"as?","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"as!","type":"codeVoice"},{"text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUsd provides "},{"overridingTitle":"func as<T>(_ t: T.Type) -> T?","type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"func as<T>(_ t: T.Type) -> T?"}]},{"type":"text","text":" on types that inherit from "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":", to dynamically cast from one ","type":"text"},{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":" subclass to another. Use this instead of using ","type":"text"},{"type":"codeVoice","code":"as"},{"text":", ","type":"text"},{"type":"codeVoice","code":"as?"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"as!"},{"text":" to upcast or downcast.","type":"text"}]}],"kind":"content"}],"references":{"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"type":"topic","role":"article","abstract":[{"type":"text","text":"Learn about "},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"type":"text","text":" and "},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"type":"text","text":" in Swift"}],"title":"Foreign Reference Types and Smart Pointers","url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers","kind":"article"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"abstract":[{"type":"text","text":"Dynamically casts "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to the argument type."}],"role":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","type":"topic","title":"as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","role":"article","title":"What is a Foreign Reference Type?","abstract":[{"type":"text","text":"Learn about foreign reference types and how to use them"}],"url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","kind":"article","type":"topic"},"doc://SwiftUsd/documentation/OpenUSD":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","kind":"symbol","abstract":[],"url":"\/documentation\/openusd","role":"collection","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":[{"title":"Working with foreign reference types","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types"}],"op":"replace"}]}]}