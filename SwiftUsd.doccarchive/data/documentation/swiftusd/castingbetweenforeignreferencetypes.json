{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types","title":"Working with foreign reference types","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes"},"metadata":{"modules":[{"name":"OpenUSD"}],"title":"Casting between Foreign Reference Types","role":"article","roleHeading":"Article"},"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Learn about casting with Foreign Reference Types"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"When working with Swift types, Swift provides the "},{"code":"as","type":"codeVoice"},{"type":"text","text":", "},{"code":"as?","type":"codeVoice"},{"type":"text","text":", and "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftUsd provides "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"func as<T>(_ t: T.Type) -> T?"}],"overridingTitle":"func as<T>(_ t: T.Type) -> T?","type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","isActive":true},{"type":"text","text":" on types that inherit from "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":", to dynamically cast from one "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclass to another. Use this instead of using "},{"type":"codeVoice","code":"as"},{"type":"text","text":", "},{"type":"codeVoice","code":"as?"},{"type":"text","text":", or "},{"type":"codeVoice","code":"as!"},{"type":"text","text":" to upcast or downcast."}],"type":"paragraph"}]}],"sections":[],"references":{"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","text":"T"},{"kind":"text","text":"?"}],"title":"as(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","abstract":[{"type":"text","text":"Dynamically casts "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to the argument type."}],"role":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers","url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","abstract":[{"type":"text","text":"Learn about "},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"type":"text","text":" in Swift"}],"title":"Foreign Reference Types and Smart Pointers","kind":"article","type":"topic","role":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"type":"topic","url":"\/documentation\/openusd","title":"OpenUSD","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","abstract":[{"text":"Learn about foreign reference types and how to use them","type":"text"}],"title":"What is a Foreign Reference Type?","kind":"article","type":"topic","role":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"replace","value":[{"title":"Working with foreign reference types","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types"}]}]}]}