{"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"metadata":{"roleHeading":"Article","role":"article","title":"Changes to OpenUSD","modules":[{"name":"OpenUSD"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]}],"abstract":[{"text":"Learn about the changes this Swift Package makes to OpenUSD","type":"text"}],"sections":[],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode."}],"type":"paragraph"},{"type":"heading","text":"Changes to OpenUSD before building","level":3,"anchor":"Changes-to-OpenUSD-before-building"},{"inlineContent":[{"text":"These changes are contained in ","type":"text"},{"code":"SwiftUsd\/openusd-patch.patch","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Usd-specific changes to OpenUSD before building","level":4,"anchor":"Usd-specific-changes-to-OpenUSD-before-building"},{"inlineContent":[{"type":"text","text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Cherry pick 4cf5fee816332f98af626f44a5cd852e06093e08 to avoid increasing memory footprint when using UsdImagingGLEngine on macOS:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdx\/taskControllerSceneIndex.cpp"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"heading","text":"Swift-specific changes to OpenUSD before building","level":4,"anchor":"Swift-specific-changes-to-OpenUSD-before-building"},{"inlineContent":[{"type":"text","text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Header modularization fixes:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/arch\/fileSystem.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/vt\/dictionary.h"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/usd\/sdf\/predicateProgram.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/exec\/vdf\/parallelExecutorEngineBase.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/pullBasedExecutorEngine.h"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support importing "},{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":" subclasses as reference types in Swift:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/CMakeLists.txt"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refBase.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refPtr.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Added: ","type":"text"},{"code":"pxr\/base\/tf\/retainReleaseHelper.h","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support MaterialX in Swift Package:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/usd\/usdMtlx\/utils.cpp","type":"codeVoice"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Support using ","type":"text"},{"code":"pxr::TfNotice::Register","type":"codeVoice"},{"text":" from Swift:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"rdar:\/\/148534260","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refPtr.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/weakPtrFacade.h","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/iterator.h"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","type":"reference","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"text","text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/exec\/vdf\/poolChainIndex.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/dependencySchema.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/mergingSceneIndex.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/imaging\/hd\/schema.h","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"rdar:\/\/150456875","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"This issue is worked around by moving the definition of a type from a source file into a header file, and by making a private header public"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/exec\/CMakeLists.txt"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/exec\/vdf\/sparseInputTraverser.cpp","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/sparseInputTraverser.h"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h","type":"codeVoice"}]}]}]}]}]},{"type":"heading","text":"Changes to OpenUSD while making a Swift Package","level":3,"anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package"},{"inlineContent":[{"type":"text","text":"These changes are applied by "},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"type":"text","text":", after "},{"type":"codeVoice","code":"build_usd.py"},{"type":"text","text":" has finished compiling OpenUSD. (This list is non-exhaustive, see "},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"type":"text","text":" for full details)"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping dylibs into frameworks:"},{"type":"text","text":"\n"},{"type":"text","text":"All required dylibs are found using "},{"type":"codeVoice","code":"otool"},{"type":"text","text":", then each dylib is converted to a framework bundle. This involves:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modifying ","type":"text"},{"code":"plugInfo.json","type":"codeVoice"},{"text":" files","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Uppercasing Usd plugin "},{"type":"codeVoice","code":"resources"},{"type":"text","text":" directories to "},{"type":"codeVoice","code":"Resources"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fixing the dylib’s load commands","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Code-signing the framework"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Making a Swift Package:"},{"type":"text","text":"\n"},{"type":"text","text":"This includes:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Copying headers from "},{"type":"codeVoice","code":"USD_BUILD_DIRECTORY\/include"},{"type":"text","text":" into the Swift Package"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD","type":"text"}]}]}]}]}]},{"level":3,"type":"heading","anchor":"Improving-OpenUSD-ergonomics-in-Swift","text":"Improving OpenUSD ergonomics in Swift"},{"level":4,"type":"heading","anchor":"Automatic-improvements","text":"Automatic improvements"},{"inlineContent":[{"text":"Some ergonomic improvements are done automatically using ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","isActive":true},{"text":" for code generation:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr::TfRefBase","type":"codeVoice"},{"text":" subclasses like ","type":"text"},{"code":"pxr::UsdStage","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::SdfLayer","type":"codeVoice"},{"text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"operator bool()"},{"text":" is mapped to ","type":"text"},{"type":"codeVoice","code":"Bool.init(_:)"},{"text":" for smart pointers, Usd schemas, and other Usd types","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Many Usd types are conformed to standard library protocols:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Comparable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"inlineContent":[{"code":"Hashable","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Sendable"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unscoped enums are wrapped to work around "},{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unscoped enums have support for implicit member expressions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Overlay.GetPrim(_:T)"},{"type":"text","text":" is provided to workaround "},{"type":"codeVoice","code":"T.GetPrim()"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","isActive":true},{"type":"text","text":", for all "},{"type":"codeVoice","code":"T: UsdSchemaBase"}]}]}]},{"level":4,"type":"heading","anchor":"Manual-improvements","text":"Manual improvements"},{"inlineContent":[{"type":"text","text":"Other ergonomic improvements are done by hand:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Support for implicit member expressions for all token types  (e.g. ","type":"text"},{"code":"UsdGeomTokensType","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Conformances of a few types to ","type":"text"},{"code":"ExpressibleByFOOLiteral","type":"codeVoice"},{"text":" protocols","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping of methods on "},{"type":"codeVoice","code":"pxr::UsdReferences"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::UsdPayloads"},{"type":"text","text":" to have nonmutating Swift versions, despite having non-const C++ versions"}]}]},{"content":[{"inlineContent":[{"text":"Conformances of a few Usd types to ","type":"text"},{"type":"codeVoice","code":"Sequence"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of some "},{"type":"codeVoice","code":"std::vector"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Typedefs to work around ","type":"text"},{"identifier":"rdar:\/\/121886233","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"text":"Support for iterating over ","type":"text"},{"type":"codeVoice","code":"pxr::UsdPrimRange"},{"text":" while calling ","type":"text"},{"type":"codeVoice","code":"IsPostVisit()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PruneChildren()"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of many "},{"type":"codeVoice","code":"pxr::VtArray"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"ExpressibleByArrayLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"inlineContent":[{"overridingTitle":"Overlay.withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"reference","isActive":true,"overridingTitleInlineContent":[{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}]},{"text":" to wrap ","type":"text"},{"code":"pxr::UsdEditContext","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","isActive":true,"overridingTitleInlineContent":[{"code":"Overlay.withTfErrorMark(_:)","type":"codeVoice"}],"overridingTitle":"Overlay.withTfErrorMark(_:)","type":"reference"},{"text":" to wrap ","type":"text"},{"code":"pxr::TfErrorMark","type":"codeVoice"}],"type":"paragraph"}]}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"Technical details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"anchor":"Technical-details","generated":true}],"references":{"rdar://148534260":{"identifier":"rdar:\/\/148534260","type":"link","title":"rdar:\/\/148534260: API notes should support annotating C++ operators","titleInlineContent":[{"text":"rdar:\/\/148534260: API notes should support annotating C++ operators","type":"text"}],"url":"rdar:\/\/148534260"},"https://github.com/swiftlang/swift/issues/83117":{"type":"link","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117"},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","type":"topic","title":"Detecting OpenUSD feature flags","role":"article","abstract":[{"text":"Learn how to detect OpenUSD feature flags","type":"text"}],"url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","abstract":[{"type":"text","text":"Performs work with a "},{"type":"codeVoice","code":"pxr::TfErrorMark"},{"type":"text","text":" in scope"}],"title":"withTfErrorMark(_:)","role":"symbol","url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withTfErrorMark","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:@N@Overlay","text":"Overlay","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper","text":"TfErrorMarkWrapper","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T","kind":"typeIdentifier"}]},"doc://SwiftUsd/documentation/OpenUSD":{"type":"topic","url":"\/documentation\/openusd","title":"OpenUSD","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"},"https://github.com/apple/SwiftUsd-ast-answerer":{"identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"link","title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","titleInlineContent":[{"text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"text"}],"url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},"https://github.com/swiftlang/swift/issues/83116":{"type":"link","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"role":"article","url":"\/documentation\/swiftusd\/buildinglocally","title":"Building locally","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","type":"topic","kind":"article","abstract":[{"type":"text","text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries"}]},"rdar://150456875":{"identifier":"rdar:\/\/150456875","type":"link","title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","titleInlineContent":[{"text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","type":"text"}],"url":"rdar:\/\/150456875"},"https://github.com/swiftlang/swift/issues/62127":{"type":"link","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUsdEditContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UsdStage","preciseIdentifier":"c:@N@pxr@S@UsdStage","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UsdEditTarget","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","kind":"typeIdentifier"}],"kind":"symbol","title":"withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","role":"symbol"},"https://github.com/swiftlang/swift/pull/81709":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709"},"rdar://121886233":{"type":"link","identifier":"rdar:\/\/121886233","title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","titleInlineContent":[{"text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","type":"text"}],"url":"rdar:\/\/121886233"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":[{"generated":true,"title":"Technical details","anchor":"Technical-details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"]}],"op":"replace"}]}]}