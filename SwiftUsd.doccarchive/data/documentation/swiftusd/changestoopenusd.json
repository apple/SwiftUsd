{"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Learn about the changes this Swift Package makes to OpenUSD","type":"text"}],"seeAlsoSections":[{"title":"Technical details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"generated":true,"anchor":"Technical-details"}],"metadata":{"modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article","title":"Changes to OpenUSD"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]}],"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode.","type":"text"}]},{"text":"Changes to OpenUSD before building","type":"heading","level":3,"anchor":"Changes-to-OpenUSD-before-building"},{"type":"paragraph","inlineContent":[{"text":"These changes are contained in ","type":"text"},{"code":"SwiftUsd\/openusd-patch.patch","type":"codeVoice"},{"text":":","type":"text"}]},{"text":"Usd-specific changes to OpenUSD before building","type":"heading","level":4,"anchor":"Usd-specific-changes-to-OpenUSD-before-building"},{"type":"paragraph","inlineContent":[{"text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Upgrade Embree version to 4.4.0 from https:\/\/github.com\/PixarAnimationStudios\/OpenUSD\/pull\/3635","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"build_scripts\/build_usd.py","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"cmake\/modules\/FindEmbree.cmake","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/plugin\/hdEmbree\/context.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/plugin\/hdEmbree\/mesh.h"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/plugin\/hdEmbree\/meshSamplers.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/plugin\/hdEmbree\/pch.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/plugin\/hdEmbree\/renderDelegate.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/plugin\/hdEmbree\/renderer.cpp"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/plugin\/hdEmbree\/renderer.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/plugin\/hdEmbree\/renderParam.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/plugin\/hdEmbree\/testEnv\/testHdEmbree.cpp","type":"codeVoice"}]}]}]}]}],"type":"unorderedList"},{"text":"Swift-specific changes to OpenUSD before building","type":"heading","level":4,"anchor":"Swift-specific-changes-to-OpenUSD-before-building"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Header modularization fixes:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/arch\/fileSystem.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/vt\/dictionary.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/sdf\/predicateProgram.h"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Support importing ","type":"text"},{"code":"pxr::TfRefBase","type":"codeVoice"},{"text":" subclasses as reference types in Swift:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/CMakeLists.txt"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/refBase.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/refPtr.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added: "},{"code":"pxr\/base\/tf\/retainReleaseHelper.h","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support MaterialX in Swift Package:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/usd\/usdMtlx\/utils.cpp","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support using "},{"type":"codeVoice","code":"pxr::TfNotice::Register"},{"type":"text","text":" from Swift:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"rdar:\/\/148534260","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/weakPtrFacade.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/iterator.h"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"text","text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/imaging\/hd\/dependencySchema.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/schema.h"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"rdar:\/\/150456875"},{"text":" ","type":"text"},{"text":"This issue is worked around by moving the definition of a type from a source file into a header file","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h"}]}]}]}]}],"type":"unorderedList"},{"text":"Changes to OpenUSD while making a Swift Package","type":"heading","level":3,"anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package"},{"type":"paragraph","inlineContent":[{"text":"These changes are applied by ","type":"text"},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"text":", after ","type":"text"},{"type":"codeVoice","code":"build_usd.py"},{"text":" has finished compiling OpenUSD. (This list is non-exhaustive, see ","type":"text"},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"text":" for full details)","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Wrapping dylibs into frameworks:"},{"type":"text","text":"\n"},{"type":"text","text":"All required dylibs are found using "},{"type":"codeVoice","code":"otool"},{"type":"text","text":", then each dylib is converted to a framework bundle. This involves:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modifying "},{"code":"plugInfo.json","type":"codeVoice"},{"type":"text","text":" files"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Uppercasing Usd plugin "},{"type":"codeVoice","code":"resources"},{"type":"text","text":" directories to "},{"type":"codeVoice","code":"Resources"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Fixing the dylib’s load commands","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Code-signing the framework","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Making a Swift Package:"},{"type":"text","text":"\n"},{"type":"text","text":"This includes:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Copying headers from "},{"type":"codeVoice","code":"USD_BUILD_DIRECTORY\/include"},{"type":"text","text":" into the Swift Package"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"Improving OpenUSD ergonomics in Swift","type":"heading","level":3,"anchor":"Improving-OpenUSD-ergonomics-in-Swift"},{"text":"Automatic improvements","type":"heading","level":4,"anchor":"Automatic-improvements"},{"type":"paragraph","inlineContent":[{"text":"Some ergonomic improvements are done automatically using ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},{"text":" for code generation:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":" subclasses like "},{"code":"pxr::UsdStage","type":"codeVoice"},{"type":"text","text":" and "},{"code":"pxr::SdfLayer","type":"codeVoice"},{"type":"text","text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"operator bool()"},{"type":"text","text":" is mapped to "},{"type":"codeVoice","code":"Bool.init(_:)"},{"type":"text","text":" for smart pointers, Usd schemas, and other Usd types"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Many Usd types are conformed to standard library protocols:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Comparable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Hashable","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Sendable","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Unscoped enums are wrapped to work around ","type":"text"},{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"text":"Unscoped enums have support for implicit member expressions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Overlay.GetPrim(_:T)"},{"text":" is provided to workaround ","type":"text"},{"type":"codeVoice","code":"T.GetPrim()"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","isActive":true,"type":"reference"},{"text":", for all ","type":"text"},{"type":"codeVoice","code":"T: UsdSchemaBase"}]}]}],"type":"unorderedList"},{"text":"Manual improvements","type":"heading","level":4,"anchor":"Manual-improvements"},{"type":"paragraph","inlineContent":[{"text":"Other ergonomic improvements are done by hand:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Support for implicit member expressions for all token types  (e.g. ","type":"text"},{"code":"UsdGeomTokensType","type":"codeVoice"},{"text":")","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Conformances of a few types to ","type":"text"},{"code":"ExpressibleByFOOLiteral","type":"codeVoice"},{"text":" protocols","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Wrapping of methods on ","type":"text"},{"code":"pxr::UsdReferences","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::UsdPayloads","type":"codeVoice"},{"text":" to have nonmutating Swift versions, despite having non-const C++ versions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of a few Usd types to ","type":"text"},{"code":"Sequence","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Conformances of some "},{"code":"std::vector","type":"codeVoice"},{"type":"text","text":" specializations to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"CustomStringConvertible","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Typedefs to work around ","type":"text"},{"type":"reference","identifier":"rdar:\/\/121886233","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Support for iterating over ","type":"text"},{"type":"codeVoice","code":"pxr::UsdPrimRange"},{"text":" while calling ","type":"text"},{"type":"codeVoice","code":"IsPostVisit()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PruneChildren()"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of many "},{"type":"codeVoice","code":"pxr::VtArray"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"ExpressibleByArrayLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","overridingTitle":"Overlay.withUsdEditContext(_:_:_:)","type":"reference","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.withUsdEditContext(_:_:_:)"}],"isActive":true},{"type":"text","text":" to wrap "},{"type":"codeVoice","code":"pxr::UsdEditContext"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"overridingTitle":"Overlay.withTfErrorMark(_:)","type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","overridingTitleInlineContent":[{"code":"Overlay.withTfErrorMark(_:)","type":"codeVoice"}]},{"text":" to wrap ","type":"text"},{"code":"pxr::TfErrorMark","type":"codeVoice"}]}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD"},"references":{"https://github.com/swiftlang/swift/issues/83116":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","type":"text"}],"type":"link"},"rdar://148534260":{"url":"rdar:\/\/148534260","identifier":"rdar:\/\/148534260","title":"rdar:\/\/148534260: API notes should support annotating C++ operators","titleInlineContent":[{"text":"rdar:\/\/148534260: API notes should support annotating C++ operators","type":"text"}],"type":"link"},"https://github.com/swiftlang/swift/issues/83117":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","type":"text"}],"type":"link"},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"abstract":[{"type":"text","text":"Learn how to detect OpenUSD feature flags"}],"kind":"article","title":"Detecting OpenUSD feature flags","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"role":"article","abstract":[{"type":"text","text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries"}],"type":"topic","title":"Building locally","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","kind":"article","url":"\/documentation\/swiftusd\/buildinglocally"},"https://github.com/apple/SwiftUsd-ast-answerer":{"url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","titleInlineContent":[{"text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"text"}],"type":"link"},"https://github.com/swiftlang/swift/pull/81709":{"url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","type":"text"}],"type":"link"},"rdar://150456875":{"url":"rdar:\/\/150456875","identifier":"rdar:\/\/150456875","title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","titleInlineContent":[{"text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","type":"text"}],"type":"link"},"doc://SwiftUsd/documentation/OpenUSD":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","kind":"symbol","abstract":[],"url":"\/documentation\/openusd","role":"collection","type":"topic"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUsdEditContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@UsdStage","text":"UsdStage","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","text":"UsdEditTarget","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_5__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_5__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"kind":"symbol","title":"withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"topic","role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)","title":"withTfErrorMark(_:)","abstract":[{"type":"text","text":"Performs work with a "},{"code":"pxr::TfErrorMark","type":"codeVoice"},{"type":"text","text":" in scope"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withTfErrorMark","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"borrowing","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@Overlay","text":"Overlay"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper","text":"TfErrorMarkWrapper"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T"}]},"rdar://121886233":{"url":"rdar:\/\/121886233","identifier":"rdar:\/\/121886233","title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","titleInlineContent":[{"text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","type":"text"}],"type":"link"},"https://github.com/swiftlang/swift/issues/62127":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","type":"text"}],"type":"link"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"replace","value":[{"title":"Technical details","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"anchor":"Technical-details"}]}]}]}