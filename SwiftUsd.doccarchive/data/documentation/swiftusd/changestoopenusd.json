{"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode.","type":"text"}],"type":"paragraph"},{"text":"Changes to OpenUSD before building","type":"heading","level":3,"anchor":"Changes-to-OpenUSD-before-building"},{"inlineContent":[{"text":"These changes are contained in ","type":"text"},{"code":"SwiftUsd\/openusd-patch.patch","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"text":"Usd-specific changes to OpenUSD before building","type":"heading","level":4,"anchor":"Usd-specific-changes-to-OpenUSD-before-building"},{"inlineContent":[{"type":"text","text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"None","type":"text"}],"type":"paragraph"}]}]},{"text":"Swift-specific changes to OpenUSD before building","type":"heading","level":4,"anchor":"Swift-specific-changes-to-OpenUSD-before-building"},{"inlineContent":[{"text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Header modularization fixes:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/arch\/fileSystem.h"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/vt\/dictionary.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/sdf\/predicateProgram.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/parallelExecutorEngineBase.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/pullBasedExecutorEngine.h","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support importing "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclasses as reference types in Swift:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/CMakeLists.txt"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refBase.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added: "},{"type":"codeVoice","code":"pxr\/base\/tf\/retainReleaseHelper.h"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Support MaterialX in Swift Package:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/usd\/usdMtlx\/utils.cpp","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Support using "},{"code":"pxr::TfNotice::Register","type":"codeVoice"},{"type":"text","text":" from Swift:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"rdar:\/\/148534260","isActive":true},{"text":" ","type":"text"},{"text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/weakPtrFacade.h","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"reference"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/iterator.h"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","isActive":true},{"text":"","type":"text"},{"text":"\n","type":"text"},{"text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/poolChainIndex.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/dependencySchema.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/mergingSceneIndex.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/schema.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"rdar:\/\/150456875"},{"type":"text","text":" "},{"type":"text","text":"This issue is worked around by moving the definition of a type from a source file into a header file, and by making a private header public"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/exec\/exec\/CMakeLists.txt","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/exec\/vdf\/sparseInputTraverser.cpp","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/sparseInputTraverser.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h"}]}]}]}]}]},{"text":"Changes to OpenUSD while making a Swift Package","type":"heading","level":3,"anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These changes are applied by "},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"type":"text","text":", after "},{"type":"codeVoice","code":"build_usd.py"},{"type":"text","text":" has finished compiling OpenUSD. (This list is non-exhaustive, see "},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"type":"text","text":" for full details)"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Wrapping dylibs into frameworks:"},{"type":"text","text":"\n"},{"type":"text","text":"All required dylibs are found using "},{"type":"codeVoice","code":"otool"},{"type":"text","text":", then each dylib is converted to a framework bundle. This involves:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modifying "},{"code":"plugInfo.json","type":"codeVoice"},{"type":"text","text":" files"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Uppercasing Usd plugin ","type":"text"},{"code":"resources","type":"codeVoice"},{"text":" directories to ","type":"text"},{"code":"Resources","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fixing the dylib’s load commands"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Code-signing the framework"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Making a Swift Package:"},{"type":"text","text":"\n"},{"type":"text","text":"This includes:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Copying headers from ","type":"text"},{"code":"USD_BUILD_DIRECTORY\/include","type":"codeVoice"},{"text":" into the Swift Package","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD","type":"text"}]}]}]}]}],"type":"unorderedList"},{"anchor":"Improving-OpenUSD-ergonomics-in-Swift","text":"Improving OpenUSD ergonomics in Swift","type":"heading","level":3},{"anchor":"Automatic-improvements","text":"Automatic improvements","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some ergonomic improvements are done automatically using "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},{"type":"text","text":" for code generation:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":" subclasses like ","type":"text"},{"type":"codeVoice","code":"pxr::UsdStage"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pxr::SdfLayer"},{"text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"operator bool()","type":"codeVoice"},{"text":" is mapped to ","type":"text"},{"code":"Bool.init(_:)","type":"codeVoice"},{"text":" for smart pointers, Usd schemas, and other Usd types","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Many Usd types are conformed to standard library protocols:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Comparable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Hashable","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"Sendable","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Unscoped enums are wrapped to work around ","type":"text"},{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Unscoped enums have support for implicit member expressions","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"Overlay.GetPrim(_:T)","type":"codeVoice"},{"type":"text","text":" is provided to workaround "},{"code":"T.GetPrim()","type":"codeVoice"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","type":"reference","isActive":true},{"type":"text","text":", for all "},{"code":"T: UsdSchemaBase","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Manual-improvements","text":"Manual improvements","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"text":"Other ergonomic improvements are done by hand:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Support for implicit member expressions for all token types  (e.g. ","type":"text"},{"type":"codeVoice","code":"UsdGeomTokensType"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of a few types to "},{"type":"codeVoice","code":"ExpressibleByFOOLiteral"},{"type":"text","text":" protocols"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping of methods on "},{"type":"codeVoice","code":"pxr::UsdReferences"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::UsdPayloads"},{"type":"text","text":" to have nonmutating Swift versions, despite having non-const C++ versions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of a few Usd types to ","type":"text"},{"code":"Sequence","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Conformances of some "},{"type":"codeVoice","code":"std::vector"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"CustomStringConvertible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Typedefs to work around "},{"isActive":true,"type":"reference","identifier":"rdar:\/\/121886233"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Support for iterating over ","type":"text"},{"code":"pxr::UsdPrimRange","type":"codeVoice"},{"text":" while calling ","type":"text"},{"code":"IsPostVisit()","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"PruneChildren()","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of many "},{"type":"codeVoice","code":"pxr::VtArray"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"ExpressibleByArrayLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","overridingTitleInlineContent":[{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}],"isActive":true,"type":"reference","overridingTitle":"Overlay.withUsdEditContext(_:_:_:)"},{"text":" to wrap ","type":"text"},{"code":"pxr::UsdEditContext","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"overridingTitle":"Overlay.withTfErrorMark(_:)","overridingTitleInlineContent":[{"code":"Overlay.withTfErrorMark(_:)","type":"codeVoice"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","type":"reference"},{"text":" to wrap ","type":"text"},{"code":"pxr::TfErrorMark","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"kind":"article","metadata":{"roleHeading":"Article","role":"article","title":"Changes to OpenUSD","modules":[{"name":"OpenUSD"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Learn about the changes this Swift Package makes to OpenUSD","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"title":"Technical details","anchor":"Technical-details","generated":true}],"references":{"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTfErrorMark"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">(("},{"kind":"keyword","text":"borrowing"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Overlay","preciseIdentifier":"c:@N@Overlay"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"TfErrorMarkWrapper","preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Performs work with a "},{"type":"codeVoice","code":"pxr::TfErrorMark"},{"type":"text","text":" in scope"}],"title":"withTfErrorMark(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)"},"rdar://121886233":{"identifier":"rdar:\/\/121886233","titleInlineContent":[{"type":"text","text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax"}],"url":"rdar:\/\/121886233","type":"link","title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax"},"rdar://150456875":{"identifier":"rdar:\/\/150456875","titleInlineContent":[{"text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","type":"text"}],"url":"rdar:\/\/150456875","type":"link","title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"kind":"article","title":"Building locally","url":"\/documentation\/swiftusd\/buildinglocally","type":"topic","abstract":[{"text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","role":"article"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","role":"symbol","abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUsdEditContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdStage","text":"UsdStage"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","text":"UsdEditTarget"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"},{"kind":"text","text":")) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"}],"title":"withUsdEditContext(_:_:_:)"},"https://github.com/swiftlang/swift/issues/62127":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported"},"https://github.com/swiftlang/swift/issues/83116":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly"},"https://github.com/swiftlang/swift/pull/81709":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance"}],"url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance"},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"abstract":[{"type":"text","text":"Learn how to detect OpenUSD feature flags"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","kind":"article","type":"topic","url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags","title":"Detecting OpenUSD feature flags","role":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","url":"\/documentation\/openusd","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","role":"collection","abstract":[],"type":"topic"},"rdar://148534260":{"identifier":"rdar:\/\/148534260","titleInlineContent":[{"text":"rdar:\/\/148534260: API notes should support annotating C++ operators","type":"text"}],"url":"rdar:\/\/148534260","type":"link","title":"rdar:\/\/148534260: API notes should support annotating C++ operators"},"https://github.com/apple/SwiftUsd-ast-answerer":{"identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"}],"url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"link","title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},"https://github.com/swiftlang/swift/issues/83117":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","type":"text"}],"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"anchor":"Technical-details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"title":"Technical details","generated":true}]}],"traits":[{"interfaceLanguage":"occ"}]}]}