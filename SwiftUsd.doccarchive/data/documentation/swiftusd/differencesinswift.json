{"sections":[],"kind":"article","abstract":[{"text":"Learn how the OpenUSD API is different in Swift","type":"text"}],"seeAlsoSections":[{"anchor":"Essentials","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"],"title":"Essentials"}],"metadata":{"modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article","title":"Differences in Swift"},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"When using OpenUSD in Swift, there are some key differences and potential pitfalls you should know about."}],"type":"paragraph"},{"anchor":"UsdStage","text":"UsdStage","type":"heading","level":3},{"inlineContent":[{"text":"In Swift, ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":" is imported as a reference (class) type, meaning that you can hold a ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":" directly in a Swift class, struct, enum, or local variable. Swift automatically inserts retain and release calls as needed when the stage is used, and can interoperate with C++ code that uses Pixar smart pointers for reference counting.","type":"text"}],"type":"paragraph"},{"anchor":"Acquiring-a-stage","text":"Acquiring a stage","type":"heading","level":4},{"inlineContent":[{"text":"When acquiring a ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":", use ","type":"text"},{"isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","type":"reference","overridingTitle":"Overlay.Dereference(_:)"},{"text":" to dereference the ","type":"text"},{"type":"codeVoice","code":"TfRefPtr<UsdStage>"},{"text":" returned by C++.","type":"text"}],"type":"paragraph"},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))"],"type":"codeListing","syntax":"swift"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"text":"The autogenerated ","type":"text"},{"code":"pointee","type":"codeVoice"},{"text":" property on ","type":"text"},{"code":"TfRefPtr<UsdStage>","type":"codeVoice"},{"text":" is not safe. Always use ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","isActive":true,"overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"type":"reference"},{"text":" instead.","type":"text"}]}],"type":"aside","name":"Warning"},{"code":["let stage: pxr.UsdStage = pxr.UsdStage.CreateInMemory(.LoadAll).pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"],"type":"codeListing","syntax":"swift"},{"anchor":"Passing-a-stage","text":"Passing a stage","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"When passing a "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":" to the OpenUSD API, wrap it via "},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g","type":"reference","isActive":true,"overridingTitle":"Overlay.TfWeakPtr(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.TfWeakPtr(_:)"}]},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let stage = Overlay.Dereference(pxr.UsdStage.CreateNew(\"\/tmp\/mystage.usda\", .LoadAll))","let xform = pxr.UsdGeomXform.Define(Overlay.TfWeakPtr(stage), \"\/hello\")"],"type":"codeListing","syntax":"swift"},{"anchor":"Calling-methods-on-a-stage","text":"Calling methods on a stage","type":"heading","level":4},{"inlineContent":[{"text":"When calling methods on a ","type":"text"},{"code":"UsdStage","type":"codeVoice"},{"text":", use the stage directly:","type":"text"}],"type":"paragraph"},{"code":["let stage = Overlay.Dereference(pxr.UsdStage.Open(\"\/tmp\/mystage.usda\", .LoadAll))","let root = stage.GetPseudoRoot()"],"type":"codeListing","syntax":"swift"},{"anchor":"SdfLayer","text":"SdfLayer","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"In Swift, "},{"code":"SdfLayer","type":"codeVoice"},{"type":"text","text":" is imported as a reference (class) type, just like "},{"code":"UsdStage","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"Acquiring-a-layer","text":"Acquiring a layer","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"When acquiring a "},{"type":"codeVoice","code":"SdfLayer"},{"type":"text","text":", use "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","isActive":true,"overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}]},{"type":"text","text":" to dereference the "},{"type":"codeVoice","code":"TfWeakPtr<SdfLayer>"},{"type":"text","text":" returned by C++."}],"type":"paragraph"},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = Overlay.Dereference(stage.GetRootLayer())"],"type":"codeListing","syntax":"swift"},{"style":"warning","content":[{"inlineContent":[{"text":"The autogenerated ","type":"text"},{"type":"codeVoice","code":"pointee"},{"text":" property on ","type":"text"},{"type":"codeVoice","code":"TfWeakPtr<SdfLayer>"},{"text":" is not safe. Always use ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"type":"reference","isActive":true},{"text":" instead.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Warning"},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = stage.GetRootLayer().pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"],"type":"codeListing","syntax":"swift"},{"anchor":"Calling-methods-on-a-layer","text":"Calling methods on a layer","type":"heading","level":4},{"inlineContent":[{"text":"When calling methods on a ","type":"text"},{"code":"SdfLayer","type":"codeVoice"},{"text":", use the layer directly:","type":"text"}],"type":"paragraph"},{"code":["let layer = Overlay.Dereference(stage.GetRootLayer())","let dirty = layer.IsDirty()"],"type":"codeListing","syntax":"swift"},{"anchor":"Converting-types-to-boolean-values","text":"Converting types to boolean values","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"In C++, many OpenUSD types have an "},{"code":"operator bool() const","type":"codeVoice"},{"type":"text","text":" method. In Swift, this has been mapped to an initializer on "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":". See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity"},{"type":"text","text":" for more information."}],"type":"paragraph"},{"code":["let hasSessionLayer = Bool(stage.GetSessionLayer())","","let imageable = pxr.UsdGeomImageable(prim)","if Bool(imageable) { ... }","","let attribute = stage.GetAttributeAtPath(\"\/foo\/bar.baz\")","if Bool(attribute) { ... }"],"type":"codeListing","syntax":"swift"},{"anchor":"Wrapped-types-for-unavailable-types","text":"Wrapped types for unavailable types","type":"heading","level":3},{"inlineContent":[{"text":"Some OpenUSD types are move-only in C++, which means they can’t be imported into Swift.","type":"text"},{"text":"\n","type":"text"},{"text":"In some cases, a Swift wrapper type is provided in this Swift Package. For example, ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper","isActive":true,"type":"reference"},{"text":". See ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes","isActive":true,"type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"},{"anchor":"UsdPrimRange-and-for-loops","text":"UsdPrimRange and for loops","type":"heading","level":3},{"inlineContent":[{"type":"codeVoice","code":"UsdPrimRange"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", enabling the use of for-loops and "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" methods like "},{"type":"codeVoice","code":"filter"},{"type":"text","text":", "},{"type":"codeVoice","code":"map"},{"type":"text","text":", and "},{"type":"codeVoice","code":"reduce"}],"type":"paragraph"},{"code":["for prim in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()) {","    print(prim)","}","","let abstractPrims: [pxr.UsdPrim] = stage.Traverse().filter { $0.IsAbstract() }"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"To access the "},{"type":"codeVoice","code":"iterator"},{"type":"text","text":" of "},{"type":"codeVoice","code":"UsdPrimRange"},{"type":"text","text":" in a for-loop, use "},{"type":"codeVoice","code":"UsdPrimRange.withIterator()"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["for (iter, prim) in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()).withIterator() {","    let path = String(prim.GetPath().GetAsString())","    print(path, iter.IsPostVisit())","    if path == \"\/Hello\" {","        iter.PruneChildren()","    }","}"],"type":"codeListing","syntax":"swift"},{"anchor":"TfNotice","text":"TfNotice","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Swift code can register for "},{"code":"TfNotice","type":"codeVoice"},{"type":"text","text":" callbacks by using "},{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.TfNotice.Register"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-olq9","overridingTitle":"pxr.TfNotice.Register"},{"type":"text","text":". Instead of creating a C++ class or struct that inherits from "},{"code":"pxr::TfWeakBase","type":"codeVoice"},{"type":"text","text":", call "},{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"code":"pxr.TfNotice.Register","type":"codeVoice"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-olq9","overridingTitle":"pxr.TfNotice.Register"},{"type":"text","text":" and pass a closure:"}],"type":"paragraph"},{"code":["func registerWithRevoking(stage: pxr.UsdStage) {","    let key = pxr.TfNotice.Register(stage, pxr.UsdNotice.StageContentsChanged.self) { _ in","        print(\"Stage contents changed\")","    }","","    stage.SetStartTimeCode(5) \/\/ prints \"Stage contents changed\"","    stage.SetEndTimeCode(7) \/\/ prints \"Stage contents changed\"","    pxr.TfNotice.Revoke(key)","    stage.SetTimeCodesPerSecond(60) \/\/ no print","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"For more information, see "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"anchor":"GfMatrix4d-static-factory-methods","text":"GfMatrix4d static factory methods","type":"heading","level":3},{"inlineContent":[{"text":"In C++, ","type":"text"},{"code":"pxr::GfMatrix4d().SetTranslate()","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::GfMatrix4d().SetRotate()","type":"codeVoice"},{"text":" are valid expressions, but mutated method chaining on function return values is not supported in Swift.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","type":"reference","overridingTitle":"pxr.GfMatrix4d.MakeTranslate()","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.GfMatrix4d.MakeTranslate()"}]},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)","type":"reference","overridingTitle":"pxr.GfMatrix4d.MakeRotate()","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.GfMatrix4d.MakeRotate()"}]},{"text":" to increase the ergonomics of ","type":"text"},{"code":"GfMatrix4d","type":"codeVoice"},{"text":" in Swift.","type":"text"}],"type":"paragraph"},{"code":["override open func cameraTransformBeforeZupCorrection(stage: pxr.UsdStage) -> pxr.GfMatrix4d {","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.XAxis(), tilt * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.YAxis(), pan * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeTranslate(position)","}"],"type":"codeListing","syntax":"swift"},{"anchor":"GetPrim","text":"GetPrim()","type":"heading","level":3},{"inlineContent":[{"text":"In Swift, calling the ","type":"text"},{"type":"codeVoice","code":"GetPrim()"},{"text":" method on a ","type":"text"},{"type":"codeVoice","code":"UsdSchemaBase"},{"text":" subclass (e.g. ","type":"text"},{"type":"codeVoice","code":"UsdGeomSphere"},{"text":") causes a compiler crash.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"type":"codeVoice","code":"Overlay.GetPrim<T>(_:T) -> pxr.UsdPrim"},{"text":", substituting ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" for each subclass of ","type":"text"},{"type":"codeVoice","code":"UsdSchemaBase"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let planePrim = pxr.UsdGeomMesh.Get(Overlay.TfWeakPtr(stage), planePath(anchor: anchor))","Overlay.GetPrim(planePrim).SetActive(true)"],"type":"codeListing","syntax":"swift"},{"anchor":"Implicit-member-expressions","text":"Implicit member expressions","type":"heading","level":3},{"inlineContent":[{"code":"SdfValueTypeNames","type":"codeVoice"},{"text":" and tokens types like ","type":"text"},{"code":"UsdGeomTokensType","type":"codeVoice"},{"text":" support implicit member expressions.","type":"text"}],"type":"paragraph"},{"code":["var pbrShader = pxr.UsdShadeShader.Define(Overlay.TfWeakPtr(stage), \"\/TexModel\/boardMat\/PBRShader\")","pbrShader.CreateInput(\"roughness\", pxr.SdfValueTypeName.Float) \/\/ Without implicit member expressions","pbrShader.CreateInput(\"metallic\", .Float) \/\/ With implicit member expressions"],"type":"codeListing","syntax":"swift"},{"code":["let xform1 = stage.DefinePrim(\"\/hello\", pxr.TfToken.UsdGeomTokens.Xform) \/\/ Without implicit member expressions","let xform2 = stage.DefinePrim(\"\/hello\/world\", .UsdGeomTokens.Xform) \/\/ With implicit member expressions"],"type":"codeListing","syntax":"swift"},{"anchor":"Nested-enums","text":"Nested enums","type":"heading","level":3},{"inlineContent":[{"text":"C++ unscoped enums nested in a namespace are not currently imported into Swift.","type":"text"},{"text":" ","type":"text"},{"text":"This Swift Package provides workarounds for all public enums, replacing the ","type":"text"},{"type":"codeVoice","code":"pxr"},{"text":" root namespace with ","type":"text"},{"type":"codeVoice","code":"Overlay"},{"text":". For example, instead of ","type":"text"},{"type":"codeVoice","code":"pxr.UsdStage.LoadAll"},{"text":", use ","type":"text"},{"type":"codeVoice","code":"Overlay.UsdStage.LoadAll"},{"text":".","type":"text"},{"text":"\n","type":"text"},{"text":"See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums"},{"text":" for more information.","type":"text"}],"type":"paragraph"},{"anchor":"Closure-based-API-for-UsdEditContext","text":"Closure-based API for UsdEditContext","type":"heading","level":3},{"inlineContent":[{"type":"codeVoice","code":"UsdEditContext"},{"type":"text","text":" is a non-movable type in C++ and cannot currently be imported into Swift. Instead, use "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.withUsdEditContext()"}],"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","overridingTitle":"Overlay.withUsdEditContext()","isActive":true},{"type":"text","text":" for RAII-like patterns in Swift. See "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","isActive":true},{"type":"text","text":" for more details."}],"type":"paragraph"},{"code":["let target = stage.GetEditTargetForLocalLayer(stage.GetSessionLayer())","Overlay.withUsdEditContext(stage, target) {","    let refSphere2 = stage.GetPrimAtPath(\"\/refSphere2\")","    refSphere2.SetActive(false)","}"],"type":"codeListing","syntax":"swift"},{"code":["\/\/ Add a UsdVariantSet with variant \"red\"","let rootPrim = stage.GetPrimAtPath(\"\/hello\")","let colorAttr = rootPrim.GetAttribute(.UsdGeomTokens.primvarsDisplayColor)","var vsets = rootPrim.GetVariantSets()","var vset = vsets.AddVariantSet(\"shadingVariant\", .UsdListPositionBackOfPrependList)","vset.AddVariant(\"red\", .UsdListPositionBackOfPrependList)","","\/\/ Author a color in the \"red\" variant","vset.SetVariantSelection(\"red\")","Overlay.withUsdEditContext(vset.GetVariantEditContext(pxr.SdfLayerHandle())) {","    let colorValue: pxr.VtVec3fArray = [pxr.GfVec3f(1, 0, 0)]","    colorAttr.Set(colorValue, pxr.UsdTimeCode.Default())","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DifferencesInSwift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/TfNotice/Register(_:_:)-olq9":{"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-olq9","abstract":[{"type":"text","text":"Register a listener as being interested in a TfNotice, regardless of sender."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Notice"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:So021pxrInternal_v0_25_5__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","text":"Notice"},{"kind":"text","text":".Type, ("},{"kind":"typeIdentifier","preciseIdentifier":"s:So021pxrInternal_v0_25_5__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","text":"Notice"},{"kind":"text","text":") -> ()) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@TfNotice","text":"TfNotice"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@TfNotice@S@SwiftKey","text":"SwiftKey"}],"kind":"symbol","title":"Register(_:_:)","url":"\/documentation\/openusd\/c++\/pxr\/tfnotice\/register(_:_:)-olq9"},"doc://SwiftUsd/documentation/SwiftUsd/GettingStarted":{"abstract":[{"text":"Adding SwiftUsd to your project or package","type":"text"}],"title":"Getting Started with OpenUSD","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","type":"topic","url":"\/documentation\/swiftusd\/gettingstarted","kind":"article","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/WorkingWithTfNotice":{"role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice","kind":"article","type":"topic","title":"Working with TfNotice","url":"\/documentation\/swiftusd\/workingwithtfnotice","abstract":[{"text":"Learn how to use the TfNotice notification subsystem in Swift","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/WrappedTypes":{"abstract":[],"url":"\/documentation\/swiftusd\/wrappedtypes","role":"collectionGroup","title":"Wrapped types","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes","type":"topic","kind":"article"},"doc://SwiftUsd/documentation/SwiftUsd/CurrentLimitations":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations","title":"Current Limitations","type":"topic","kind":"article","role":"article","url":"\/documentation\/swiftusd\/currentlimitations","abstract":[{"type":"text","text":"Learn about the current limitations of OpenUSD in Swift"}]},"doc://SwiftUsd/documentation/SwiftUsd/CheckingForValidity":{"abstract":[{"type":"text","text":"Checking for "},{"type":"codeVoice","code":"IsValid()"},{"type":"text","text":" and null pointers in Swift"}],"kind":"article","role":"article","title":"Checking for validity","type":"topic","url":"\/documentation\/swiftusd\/checkingforvalidity","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-67vpz":{"url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-67vpz","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp"},{"text":".","kind":"text"},{"text":"_TfRefBaseType","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE17_TfRefPtrProtocolP01_dE8BaseTypeQa"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Dereferences a "},{"type":"codeVoice","code":"pxr::TfRefPtr<T>"},{"type":"text","text":". Crashes if the pointer is null"}],"title":"Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz"},"doc://SwiftUsd/documentation/SwiftUsd/Capabilities":{"role":"article","abstract":[{"type":"text","text":"Learn about the current capabilities of OpenUSD in Swift"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","title":"Capabilities","url":"\/documentation\/swiftusd\/capabilities","type":"topic","kind":"article"},"doc://SwiftUsd/documentation/SwiftUsd/UsingEditContexts":{"role":"collectionGroup","kind":"article","type":"topic","title":"Using edit contexts","abstract":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"pxr.UsdEditContext"},{"type":"text","text":" in Swift"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","url":"\/documentation\/swiftusd\/usingeditcontexts"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-3edgv":{"url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-3edgv","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp"},{"text":".","kind":"text"},{"text":"_TfWeakBaseType","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfWeakPtrProtocolP01_dE8BaseTypeQa"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Dereferences a "},{"type":"codeVoice","code":"pxr::TfWeakPtr<T>"},{"type":"text","text":". Crashes if the pointer is null"}],"title":"Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv"},"doc://SwiftUsd/documentation/OpenUSD":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","kind":"symbol","abstract":[],"url":"\/documentation\/openusd","role":"collection","type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/WrappedEnums":{"title":"Wrapped enums","type":"topic","kind":"article","role":"article","abstract":[],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums","url":"\/documentation\/swiftusd\/wrappedenums"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeTranslate(_:)":{"title":"MakeTranslate(_:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeTranslate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@GfVec3d","text":"GfVec3d"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d","text":"GfMatrix4d"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","role":"symbol","url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/maketranslate(_:)","abstract":[{"type":"text","text":"Wrapper for "},{"type":"codeVoice","code":"pxr.GfMatrix().SetTranslate(v)"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUsdEditContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@UsdStage","text":"UsdStage","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","text":"UsdEditTarget","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_5__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_5__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"kind":"symbol","title":"withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"topic","role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/Overlay/UsdPrimTypeInfoWrapper":{"type":"topic","title":"struct UsdPrimTypeInfoWrapper","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"UsdPrimTypeInfoWrapper"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper","url":"\/documentation\/openusd\/overlay\/usdprimtypeinfowrapper"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/TfWeakPtr(_:)-8de9g":{"url":"\/documentation\/openusd\/c++\/overlay\/tfweakptr(_:)-8de9g","title":"TfWeakPtr(_:)","abstract":[{"text":"Wraps the argument in a ","type":"text"},{"type":"codeVoice","code":"pxr::TfWeakPtr<T>"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"TfWeakPtr"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_TfWeakPtrType","preciseIdentifier":"s:So7OverlayO7OpenUSDE19_TfWeakBaseProtocolP01_dE7PtrTypeQa"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeRotate(_:)":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/makerotate(_:)","abstract":[{"text":"Wrapper for ","type":"text"},{"type":"codeVoice","code":"pxr.GfMatrix().SetRotate(r)"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MakeRotate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"GfRotation","preciseIdentifier":"c:@N@pxr@S@GfRotation","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"GfMatrix4d","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d","kind":"typeIdentifier"}],"title":"MakeRotate(_:)"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"anchor":"Essentials","title":"Essentials","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"]}]},{"op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/title","value":"UsdPrimTypeInfoWrapper"},{"op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/fragments","value":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/navigatorTitle","value":[{"kind":"identifier","text":"UsdPrimTypeInfoWrapper"}]}]}]}