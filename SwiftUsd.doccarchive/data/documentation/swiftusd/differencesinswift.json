{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DifferencesInSwift"},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"seeAlsoSections":[{"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"],"generated":true}],"metadata":{"roleHeading":"Article","modules":[{"name":"OpenUSD"}],"role":"article","title":"Differences in Swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","abstract":[{"type":"text","text":"Learn how the OpenUSD API is different in Swift"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When using OpenUSD in Swift, there are some key differences and potential pitfalls you should know about.","type":"text"}]},{"type":"heading","text":"UsdStage","anchor":"UsdStage","level":3},{"type":"paragraph","inlineContent":[{"text":"In Swift, ","type":"text"},{"code":"UsdStage","type":"codeVoice"},{"text":" is imported as a reference (class) type, meaning that you can hold a ","type":"text"},{"code":"UsdStage","type":"codeVoice"},{"text":" directly in a Swift class, struct, enum, or local variable. Swift automatically inserts retain and release calls as needed when the stage is used, and can interoperate with C++ code that uses Pixar smart pointers for reference counting.","type":"text"}]},{"type":"heading","text":"Acquiring a stage","anchor":"Acquiring-a-stage","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"When acquiring a "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":", use "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"isActive":true},{"type":"text","text":" to dereference the "},{"type":"codeVoice","code":"TfRefPtr<UsdStage>"},{"type":"text","text":" returned by C++."}]},{"type":"codeListing","code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))"],"syntax":"swift"},{"type":"aside","style":"warning","content":[{"inlineContent":[{"type":"text","text":"The autogenerated "},{"type":"codeVoice","code":"pointee"},{"type":"text","text":" property on "},{"type":"codeVoice","code":"TfRefPtr<UsdStage>"},{"type":"text","text":" is not safe. Always use "},{"isActive":true,"overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"code":"Overlay.Dereference(_:)","type":"codeVoice"}],"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz"},{"type":"text","text":" instead."}],"type":"paragraph"}],"name":"Warning"},{"type":"codeListing","code":["let stage: pxr.UsdStage = pxr.UsdStage.CreateInMemory(.LoadAll).pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"],"syntax":"swift"},{"type":"heading","text":"Passing a stage","anchor":"Passing-a-stage","level":4},{"type":"paragraph","inlineContent":[{"text":"When passing a ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":" to the OpenUSD API, wrap it via ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g","type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.TfWeakPtr(_:)"}],"overridingTitle":"Overlay.TfWeakPtr(_:)"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let stage = Overlay.Dereference(pxr.UsdStage.CreateNew(\"\/tmp\/mystage.usda\", .LoadAll))","let xform = pxr.UsdGeomXform.Define(Overlay.TfWeakPtr(stage), \"\/hello\")"],"syntax":"swift"},{"type":"heading","text":"Calling methods on a stage","anchor":"Calling-methods-on-a-stage","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"When calling methods on a "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":", use the stage directly:"}]},{"code":["let stage = Overlay.Dereference(pxr.UsdStage.Open(\"\/tmp\/mystage.usda\", .LoadAll))","let root = stage.GetPseudoRoot()"],"syntax":"swift","type":"codeListing"},{"text":"SdfLayer","level":3,"anchor":"SdfLayer","type":"heading"},{"inlineContent":[{"text":"In Swift, ","type":"text"},{"code":"SdfLayer","type":"codeVoice"},{"type":"text","text":" is imported as a reference (class) type, just like "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":"."}],"type":"paragraph"},{"level":4,"type":"heading","text":"Acquiring a layer","anchor":"Acquiring-a-layer"},{"inlineContent":[{"text":"When acquiring a ","type":"text"},{"code":"SdfLayer","type":"codeVoice"},{"text":", use ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"code":"Overlay.Dereference(_:)","type":"codeVoice"}],"isActive":true,"type":"reference"},{"text":" to dereference the ","type":"text"},{"code":"TfWeakPtr<SdfLayer>","type":"codeVoice"},{"text":" returned by C++.","type":"text"}],"type":"paragraph"},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = Overlay.Dereference(stage.GetRootLayer())"],"syntax":"swift","type":"codeListing"},{"name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The autogenerated ","type":"text"},{"code":"pointee","type":"codeVoice"},{"text":" property on ","type":"text"},{"code":"TfWeakPtr<SdfLayer>","type":"codeVoice"},{"text":" is not safe. Always use ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"overridingTitle":"Overlay.Dereference(_:)","type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","isActive":true},{"text":" instead.","type":"text"}]}],"type":"aside","style":"warning"},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = stage.GetRootLayer().pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"],"syntax":"swift","type":"codeListing"},{"level":4,"type":"heading","text":"Calling methods on a layer","anchor":"Calling-methods-on-a-layer"},{"inlineContent":[{"type":"text","text":"When calling methods on a "},{"code":"SdfLayer","type":"codeVoice"},{"type":"text","text":", use the layer directly:"}],"type":"paragraph"},{"code":["let layer = Overlay.Dereference(stage.GetRootLayer())","let dirty = layer.IsDirty()"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Converting types to boolean values","anchor":"Converting-types-to-boolean-values"},{"inlineContent":[{"text":"In C++, many OpenUSD types have an ","type":"text"},{"type":"codeVoice","code":"operator bool() const"},{"text":" method. In Swift, this has been mapped to an initializer on ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":". See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity","type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"},{"code":["let hasSessionLayer = Bool(stage.GetSessionLayer())","","let imageable = pxr.UsdGeomImageable(prim)","if Bool(imageable) { ... }","","let attribute = stage.GetAttributeAtPath(\"\/foo\/bar.baz\")","if Bool(attribute) { ... }"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Wrapped types for unavailable types","anchor":"Wrapped-types-for-unavailable-types"},{"inlineContent":[{"type":"text","text":"Some OpenUSD types are move-only in C++, which means they can’t be imported into Swift."},{"type":"text","text":"\n"},{"type":"text","text":"In some cases, a Swift wrapper type is provided in this Swift Package. For example, "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper"},{"type":"text","text":". See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes"},{"type":"text","text":" for more information."}],"type":"paragraph"},{"level":3,"type":"heading","text":"UsdPrimRange and for loops","anchor":"UsdPrimRange-and-for-loops"},{"inlineContent":[{"type":"codeVoice","code":"UsdPrimRange"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":", enabling the use of for-loops and ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":" methods like ","type":"text"},{"type":"codeVoice","code":"filter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"map"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"reduce"}],"type":"paragraph"},{"code":["for prim in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()) {","    print(prim)","}","","let abstractPrims: [pxr.UsdPrim] = stage.Traverse().filter { $0.IsAbstract() }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"To access the "},{"type":"codeVoice","code":"iterator"},{"type":"text","text":" of "},{"type":"codeVoice","code":"UsdPrimRange"},{"type":"text","text":" in a for-loop, use "},{"type":"codeVoice","code":"UsdPrimRange.withIterator()"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["for (iter, prim) in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()).withIterator() {","    let path = String(prim.GetPath().GetAsString())","    print(path, iter.IsPostVisit())","    if path == \"\/Hello\" {","        iter.PruneChildren()","    }","}"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"TfNotice","anchor":"TfNotice"},{"inlineContent":[{"text":"Swift code can register for ","type":"text"},{"code":"TfNotice","type":"codeVoice"},{"text":" callbacks by using ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.TfNotice.Register"}],"isActive":true,"type":"reference","overridingTitle":"pxr.TfNotice.Register","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13"},{"text":". Instead of creating a C++ class or struct that inherits from ","type":"text"},{"code":"pxr::TfWeakBase","type":"codeVoice"},{"text":", call ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.TfNotice.Register"}],"isActive":true,"type":"reference","overridingTitle":"pxr.TfNotice.Register","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13"},{"text":" and pass a closure:","type":"text"}],"type":"paragraph"},{"code":["func registerWithRevoking(stage: pxr.UsdStage) {","    let key = pxr.TfNotice.Register(stage, pxr.UsdNotice.StageContentsChanged.self) { _ in","        print(\"Stage contents changed\")","    }","","    stage.SetStartTimeCode(5) \/\/ prints \"Stage contents changed\"","    stage.SetEndTimeCode(7) \/\/ prints \"Stage contents changed\"","    pxr.TfNotice.Revoke(key)","    stage.SetTimeCodesPerSecond(60) \/\/ no print","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"For more information, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":3,"type":"heading","text":"GfMatrix4d static factory methods","anchor":"GfMatrix4d-static-factory-methods"},{"inlineContent":[{"text":"In C++, ","type":"text"},{"type":"codeVoice","code":"pxr::GfMatrix4d().SetTranslate()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pxr::GfMatrix4d().SetRotate()"},{"text":" are valid expressions, but mutated method chaining on function return values is not supported in Swift.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"overridingTitle":"pxr.GfMatrix4d.MakeTranslate()","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","type":"reference","overridingTitleInlineContent":[{"code":"pxr.GfMatrix4d.MakeTranslate()","type":"codeVoice"}],"isActive":true},{"text":" and ","type":"text"},{"overridingTitle":"pxr.GfMatrix4d.MakeRotate()","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)","type":"reference","overridingTitleInlineContent":[{"code":"pxr.GfMatrix4d.MakeRotate()","type":"codeVoice"}],"isActive":true},{"text":" to increase the ergonomics of ","type":"text"},{"type":"codeVoice","code":"GfMatrix4d"},{"text":" in Swift.","type":"text"}],"type":"paragraph"},{"code":["override open func cameraTransformBeforeZupCorrection(stage: pxr.UsdStage) -> pxr.GfMatrix4d {","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.XAxis(), tilt * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.YAxis(), pan * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeTranslate(position)","}"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"GetPrim()","anchor":"GetPrim"},{"inlineContent":[{"text":"In Swift, calling the ","type":"text"},{"code":"GetPrim()","type":"codeVoice"},{"text":" method on a ","type":"text"},{"code":"UsdSchemaBase","type":"codeVoice"},{"text":" subclass (e.g. ","type":"text"},{"code":"UsdGeomSphere","type":"codeVoice"},{"text":") causes a compiler crash.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"code":"Overlay.GetPrim<T>(_:T) -> pxr.UsdPrim","type":"codeVoice"},{"text":", substituting ","type":"text"},{"code":"T","type":"codeVoice"},{"text":" for each subclass of ","type":"text"},{"code":"UsdSchemaBase","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let planePrim = pxr.UsdGeomMesh.Get(Overlay.TfWeakPtr(stage), planePath(anchor: anchor))","Overlay.GetPrim(planePrim).SetActive(true)"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Implicit member expressions","anchor":"Implicit-member-expressions"},{"inlineContent":[{"type":"codeVoice","code":"SdfValueTypeNames"},{"text":" and tokens types like ","type":"text"},{"type":"codeVoice","code":"UsdGeomTokensType"},{"text":" support implicit member expressions.","type":"text"}],"type":"paragraph"},{"code":["var pbrShader = pxr.UsdShadeShader.Define(Overlay.TfWeakPtr(stage), \"\/TexModel\/boardMat\/PBRShader\")","pbrShader.CreateInput(\"roughness\", pxr.SdfValueTypeName.Float) \/\/ Without implicit member expressions","pbrShader.CreateInput(\"metallic\", .Float) \/\/ With implicit member expressions"],"syntax":"swift","type":"codeListing"},{"code":["let xform1 = stage.DefinePrim(\"\/hello\", pxr.TfToken.UsdGeomTokens.Xform) \/\/ Without implicit member expressions","let xform2 = stage.DefinePrim(\"\/hello\/world\", .UsdGeomTokens.Xform) \/\/ With implicit member expressions"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Nested enums","anchor":"Nested-enums"},{"inlineContent":[{"type":"text","text":"C++ unscoped enums nested in a namespace are not currently imported into Swift."},{"type":"text","text":" "},{"type":"text","text":"This Swift Package provides workarounds for all public enums, replacing the "},{"type":"codeVoice","code":"pxr"},{"type":"text","text":" root namespace with "},{"type":"codeVoice","code":"Overlay"},{"type":"text","text":". For example, instead of "},{"type":"codeVoice","code":"pxr.UsdStage.LoadAll"},{"type":"text","text":", use "},{"type":"codeVoice","code":"Overlay.UsdStage.LoadAll"},{"type":"text","text":"."},{"type":"text","text":"\n"},{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Closure-based API for UsdEditContext","anchor":"Closure-based-API-for-UsdEditContext"},{"inlineContent":[{"type":"codeVoice","code":"UsdEditContext"},{"type":"text","text":" is a non-movable type in C++ and cannot currently be imported into Swift. Instead, use "},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"reference","isActive":true,"overridingTitleInlineContent":[{"code":"Overlay.withUsdEditContext()","type":"codeVoice"}],"overridingTitle":"Overlay.withUsdEditContext()"},{"type":"text","text":" for RAII-like patterns in Swift. See "},{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","type":"reference","isActive":true},{"type":"text","text":" for more details."}],"type":"paragraph"},{"code":["let target = stage.GetEditTargetForLocalLayer(stage.GetSessionLayer())","Overlay.withUsdEditContext(stage, target) {","    let refSphere2 = stage.GetPrimAtPath(\"\/refSphere2\")","    refSphere2.SetActive(false)","}"],"syntax":"swift","type":"codeListing"},{"code":["\/\/ Add a UsdVariantSet with variant \"red\"","let rootPrim = stage.GetPrimAtPath(\"\/hello\")","let colorAttr = rootPrim.GetAttribute(.UsdGeomTokens.primvarsDisplayColor)","var vsets = rootPrim.GetVariantSets()","var vset = vsets.AddVariantSet(\"shadingVariant\", .UsdListPositionBackOfPrependList)","vset.AddVariant(\"red\", .UsdListPositionBackOfPrependList)","","\/\/ Author a color in the \"red\" variant","vset.SetVariantSelection(\"red\")","Overlay.withUsdEditContext(vset.GetVariantEditContext(pxr.SdfLayerHandle())) {","    let colorValue: pxr.VtVec3fArray = [pxr.GfVec3f(1, 0, 0)]","    colorAttr.Set(colorValue, pxr.UsdTimeCode.Default())","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"references":{"doc://SwiftUsd/documentation/OpenUSD":{"type":"topic","url":"\/documentation\/openusd","title":"OpenUSD","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"},"doc://SwiftUsd/documentation/SwiftUsd/UsingEditContexts":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","role":"collectionGroup","abstract":[{"type":"text","text":"Using "},{"code":"pxr.UsdEditContext","type":"codeVoice"},{"type":"text","text":" in Swift"}],"kind":"article","url":"\/documentation\/swiftusd\/usingeditcontexts","title":"Using edit contexts","type":"topic"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeRotate(_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/makerotate(_:)","title":"MakeRotate(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeRotate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfRotation","preciseIdentifier":"c:@N@pxr@S@GfRotation"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfMatrix4d","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)","abstract":[{"type":"text","text":"Wrapper for "},{"code":"pxr.GfMatrix().SetRotate(r)","type":"codeVoice"}],"type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/Capabilities":{"type":"topic","role":"article","url":"\/documentation\/swiftusd\/capabilities","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","abstract":[{"text":"Learn about the current capabilities of OpenUSD in Swift","type":"text"}],"title":"Capabilities"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeTranslate(_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/maketranslate(_:)","abstract":[{"type":"text","text":"Wrapper for "},{"type":"codeVoice","code":"pxr.GfMatrix().SetTranslate(v)"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeTranslate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfVec3d","preciseIdentifier":"c:@N@pxr@S@GfVec3d"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfMatrix4d","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d"}],"type":"topic","role":"symbol","title":"MakeTranslate(_:)","kind":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/WrappedEnums":{"role":"article","abstract":[],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums","type":"topic","title":"Wrapped enums","kind":"article","url":"\/documentation\/swiftusd\/wrappedenums"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-3edgv":{"abstract":[{"text":"Dereferences a ","type":"text"},{"code":"pxr::TfWeakPtr<T>","type":"codeVoice"},{"text":". Crashes if the pointer is null","type":"text"}],"title":"Dereference(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-3edgv","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfWeakPtrProtocolP01_dE8BaseTypeQa","text":"_TfWeakBaseType","kind":"typeIdentifier"}]},"doc://SwiftUsd/documentation/SwiftUsd/WrappedTypes":{"url":"\/documentation\/swiftusd\/wrappedtypes","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes","kind":"article","title":"Wrapped types","abstract":[],"role":"collectionGroup","type":"topic"},"doc://SwiftUsd/documentation/OpenUSD/Overlay/UsdPrimTypeInfoWrapper":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"title":"struct UsdPrimTypeInfoWrapper","navigatorTitle":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper","abstract":[],"url":"\/documentation\/openusd\/overlay\/usdprimtypeinfowrapper"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUsdEditContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UsdStage","preciseIdentifier":"c:@N@pxr@S@UsdStage","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UsdEditTarget","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","kind":"typeIdentifier"}],"kind":"symbol","title":"withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-67vpz":{"title":"Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","role":"symbol","kind":"symbol","url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-67vpz","type":"topic","abstract":[{"text":"Dereferences a ","type":"text"},{"code":"pxr::TfRefPtr<T>","type":"codeVoice"},{"text":". Crashes if the pointer is null","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE17_TfRefPtrProtocolP01_dE8BaseTypeQa","text":"_TfRefBaseType","kind":"typeIdentifier"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/TfNotice/Register(_:_:)-99j13":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Register"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Notice"},{"kind":"text","text":">("},{"preciseIdentifier":"s:So021pxrInternal_v0_25_8__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","kind":"typeIdentifier","text":"Notice"},{"kind":"text","text":".Type, ("},{"preciseIdentifier":"s:So021pxrInternal_v0_25_8__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","kind":"typeIdentifier","text":"Notice"},{"kind":"text","text":") -> ()) -> "},{"preciseIdentifier":"s:7OpenUSD3pxra","kind":"typeIdentifier","text":"pxr"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@N@pxr@S@TfNotice","kind":"typeIdentifier","text":"TfNotice"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@N@pxr@S@TfNotice@S@SwiftKey","kind":"typeIdentifier","text":"SwiftKey"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13","title":"Register(_:_:)","url":"\/documentation\/openusd\/c++\/pxr\/tfnotice\/register(_:_:)-99j13","abstract":[{"type":"text","text":"Register a listener as being interested in a TfNotice, regardless of sender."}],"kind":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/CheckingForValidity":{"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity","abstract":[{"type":"text","text":"Checking for "},{"type":"codeVoice","code":"IsValid()"},{"type":"text","text":" and null pointers in Swift"}],"role":"article","url":"\/documentation\/swiftusd\/checkingforvalidity","kind":"article","title":"Checking for validity"},"doc://SwiftUsd/documentation/SwiftUsd/WorkingWithTfNotice":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice","url":"\/documentation\/swiftusd\/workingwithtfnotice","abstract":[{"text":"Learn how to use the TfNotice notification subsystem in Swift","type":"text"}],"title":"Working with TfNotice","kind":"article","type":"topic","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/CurrentLimitations":{"type":"topic","role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations","url":"\/documentation\/swiftusd\/currentlimitations","kind":"article","abstract":[{"text":"Learn about the current limitations of OpenUSD in Swift","type":"text"}],"title":"Current Limitations"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/TfWeakPtr(_:)-8de9g":{"title":"TfWeakPtr(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TfWeakPtr","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"_TfWeakPtrType","preciseIdentifier":"s:So7OverlayO7OpenUSDE19_TfWeakBaseProtocolP01_dE7PtrTypeQa","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g","kind":"symbol","abstract":[{"type":"text","text":"Wraps the argument in a "},{"type":"codeVoice","code":"pxr::TfWeakPtr<T>"}],"url":"\/documentation\/openusd\/c++\/overlay\/tfweakptr(_:)-8de9g","role":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/GettingStarted":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","kind":"article","abstract":[{"type":"text","text":"Adding SwiftUsd to your project or package"}],"url":"\/documentation\/swiftusd\/gettingstarted","type":"topic","title":"Getting Started with OpenUSD","role":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"anchor":"Essentials","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"],"generated":true,"title":"Essentials"}],"op":"replace","path":"\/seeAlsoSections"},{"value":"UsdPrimTypeInfoWrapper","op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/title"},{"value":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/fragments"},{"value":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/navigatorTitle"}]}]}