{"metadata":{"role":"article","title":"Differences in Swift","modules":[{"name":"OpenUSD"}],"roleHeading":"Article"},"seeAlsoSections":[{"title":"Essentials","anchor":"Essentials","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DifferencesInSwift","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/differencesinswift"]}],"kind":"article","abstract":[{"type":"text","text":"Learn how the OpenUSD API is different in Swift"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using OpenUSD in Swift, there are some key differences and potential pitfalls you should know about."}]},{"type":"heading","level":3,"text":"UsdStage","anchor":"UsdStage"},{"type":"paragraph","inlineContent":[{"text":"In Swift, ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":" is imported as a reference (class) type, meaning that you can hold a ","type":"text"},{"type":"codeVoice","code":"UsdStage"},{"text":" directly in a Swift class, struct, enum, or local variable. Swift automatically inserts retain and release calls as needed when the stage is used, and can interoperate with C++ code that uses Pixar smart pointers for reference counting.","type":"text"}]},{"type":"heading","level":4,"text":"Acquiring a stage","anchor":"Acquiring-a-stage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When acquiring a "},{"code":"UsdStage","type":"codeVoice"},{"type":"text","text":", use "},{"overridingTitle":"Overlay.Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","isActive":true,"type":"reference","overridingTitleInlineContent":[{"code":"Overlay.Dereference(_:)","type":"codeVoice"}]},{"type":"text","text":" to dereference the "},{"code":"TfRefPtr<UsdStage>","type":"codeVoice"},{"type":"text","text":" returned by C++."}]},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))"],"type":"codeListing","syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The autogenerated "},{"code":"pointee","type":"codeVoice"},{"type":"text","text":" property on "},{"code":"TfRefPtr<UsdStage>","type":"codeVoice"},{"type":"text","text":" is not safe. Always use "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"overridingTitle":"Overlay.Dereference(_:)","type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","isActive":true},{"type":"text","text":" instead."}]}],"type":"aside","name":"Warning","style":"warning"},{"code":["let stage: pxr.UsdStage = pxr.UsdStage.CreateInMemory(.LoadAll).pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":4,"text":"Passing a stage","anchor":"Passing-a-stage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When passing a "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":" to the OpenUSD API, wrap it via "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g","overridingTitleInlineContent":[{"code":"Overlay.TfWeakPtr(_:)","type":"codeVoice"}],"overridingTitle":"Overlay.TfWeakPtr(_:)"},{"type":"text","text":"."}]},{"code":["let stage = Overlay.Dereference(pxr.UsdStage.CreateNew(\"\/tmp\/mystage.usda\", .LoadAll))","let xform = pxr.UsdGeomXform.Define(Overlay.TfWeakPtr(stage), \"\/hello\")"],"type":"codeListing","syntax":"swift"},{"level":4,"text":"Calling methods on a stage","anchor":"Calling-methods-on-a-stage","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When calling methods on a ","type":"text"},{"code":"UsdStage","type":"codeVoice"},{"text":", use the stage directly:","type":"text"}]},{"code":["let stage = Overlay.Dereference(pxr.UsdStage.Open(\"\/tmp\/mystage.usda\", .LoadAll))","let root = stage.GetPseudoRoot()"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"SdfLayer","anchor":"SdfLayer","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Swift, "},{"type":"codeVoice","code":"SdfLayer"},{"type":"text","text":" is imported as a reference (class) type, just like "},{"type":"codeVoice","code":"UsdStage"},{"type":"text","text":"."}]},{"level":4,"text":"Acquiring a layer","anchor":"Acquiring-a-layer","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When acquiring a "},{"type":"codeVoice","code":"SdfLayer"},{"type":"text","text":", use "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.Dereference(_:)"}],"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","overridingTitle":"Overlay.Dereference(_:)"},{"type":"text","text":" to dereference the "},{"type":"codeVoice","code":"TfWeakPtr<SdfLayer>"},{"type":"text","text":" returned by C++."}]},{"code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = Overlay.Dereference(stage.GetRootLayer())"],"type":"codeListing","syntax":"swift"},{"name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The autogenerated ","type":"text"},{"type":"codeVoice","code":"pointee"},{"text":" property on ","type":"text"},{"type":"codeVoice","code":"TfWeakPtr<SdfLayer>"},{"text":" is not safe. Always use ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","isActive":true,"overridingTitle":"Overlay.Dereference(_:)","overridingTitleInlineContent":[{"code":"Overlay.Dereference(_:)","type":"codeVoice"}]},{"text":" instead.","type":"text"}]}],"type":"aside","style":"warning"},{"type":"codeListing","syntax":"swift","code":["let stage: pxr.UsdStage = Overlay.Dereference(pxr.UsdStage.CreateInMemory(.LoadAll))","let layer: pxr.SdfLayer = stage.GetRootLayer().pointee \/\/ ❌ unsafe! Use Overlay.Dereference(...) instead"]},{"type":"heading","anchor":"Calling-methods-on-a-layer","level":4,"text":"Calling methods on a layer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When calling methods on a "},{"type":"codeVoice","code":"SdfLayer"},{"type":"text","text":", use the layer directly:"}]},{"type":"codeListing","syntax":"swift","code":["let layer = Overlay.Dereference(stage.GetRootLayer())","let dirty = layer.IsDirty()"]},{"type":"heading","anchor":"Converting-types-to-boolean-values","level":3,"text":"Converting types to boolean values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In C++, many OpenUSD types have an "},{"type":"codeVoice","code":"operator bool() const"},{"type":"text","text":" method. In Swift, this has been mapped to an initializer on "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":". See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity"},{"type":"text","text":" for more information."}]},{"type":"codeListing","syntax":"swift","code":["let hasSessionLayer = Bool(stage.GetSessionLayer())","","let imageable = pxr.UsdGeomImageable(prim)","if Bool(imageable) { ... }","","let attribute = stage.GetAttributeAtPath(\"\/foo\/bar.baz\")","if Bool(attribute) { ... }"]},{"type":"heading","anchor":"Wrapped-types-for-unavailable-types","level":3,"text":"Wrapped types for unavailable types"},{"type":"paragraph","inlineContent":[{"text":"Some OpenUSD types are move-only in C++, which means they can’t be imported into Swift.","type":"text"},{"text":"\n","type":"text"},{"text":"In some cases, a Swift wrapper type is provided in this Swift Package. For example, ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper","type":"reference"},{"text":". See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes","type":"reference"},{"text":" for more information.","type":"text"}]},{"type":"heading","anchor":"UsdPrimRange-and-for-loops","level":3,"text":"UsdPrimRange and for loops"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UsdPrimRange"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":", enabling the use of for-loops and ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":" methods like ","type":"text"},{"type":"codeVoice","code":"filter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"map"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"reduce"}]},{"type":"codeListing","syntax":"swift","code":["for prim in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()) {","    print(prim)","}","","let abstractPrims: [pxr.UsdPrim] = stage.Traverse().filter { $0.IsAbstract() }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To access the "},{"type":"codeVoice","code":"iterator"},{"type":"text","text":" of "},{"type":"codeVoice","code":"UsdPrimRange"},{"type":"text","text":" in a for-loop, use "},{"type":"codeVoice","code":"UsdPrimRange.withIterator()"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["for (iter, prim) in pxr.UsdPrim.PreAndPostVisit(stage.GetPseudoRoot()).withIterator() {","    let path = String(prim.GetPath().GetAsString())","    print(path, iter.IsPostVisit())","    if path == \"\/Hello\" {","        iter.PruneChildren()","    }","}"]},{"type":"heading","anchor":"TfNotice","level":3,"text":"TfNotice"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift code can register for "},{"code":"TfNotice","type":"codeVoice"},{"type":"text","text":" callbacks by using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13","overridingTitle":"pxr.TfNotice.Register","overridingTitleInlineContent":[{"code":"pxr.TfNotice.Register","type":"codeVoice"}]},{"type":"text","text":". Instead of creating a C++ class or struct that inherits from "},{"code":"pxr::TfWeakBase","type":"codeVoice"},{"type":"text","text":", call "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13","overridingTitle":"pxr.TfNotice.Register","overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.TfNotice.Register"}]},{"type":"text","text":" and pass a closure:"}]},{"type":"codeListing","syntax":"swift","code":["func registerWithRevoking(stage: pxr.UsdStage) {","    let key = pxr.TfNotice.Register(stage, pxr.UsdNotice.StageContentsChanged.self) { _ in","        print(\"Stage contents changed\")","    }","","    stage.SetStartTimeCode(5) \/\/ prints \"Stage contents changed\"","    stage.SetEndTimeCode(7) \/\/ prints \"Stage contents changed\"","    pxr.TfNotice.Revoke(key)","    stage.SetTimeCodesPerSecond(60) \/\/ no print","}"]},{"type":"paragraph","inlineContent":[{"text":"For more information, see ","type":"text"},{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"heading","anchor":"GfMatrix4d-static-factory-methods","level":3,"text":"GfMatrix4d static factory methods"},{"type":"paragraph","inlineContent":[{"text":"In C++, ","type":"text"},{"code":"pxr::GfMatrix4d().SetTranslate()","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::GfMatrix4d().SetRotate()","type":"codeVoice"},{"text":" are valid expressions, but mutated method chaining on function return values is not supported in Swift.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"overridingTitleInlineContent":[{"code":"pxr.GfMatrix4d.MakeTranslate()","type":"codeVoice"}],"overridingTitle":"pxr.GfMatrix4d.MakeTranslate()","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","type":"reference"},{"text":" and ","type":"text"},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"pxr.GfMatrix4d.MakeRotate()"}],"overridingTitle":"pxr.GfMatrix4d.MakeRotate()","isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)","type":"reference"},{"text":" to increase the ergonomics of ","type":"text"},{"code":"GfMatrix4d","type":"codeVoice"},{"text":" in Swift.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["override open func cameraTransformBeforeZupCorrection(stage: pxr.UsdStage) -> pxr.GfMatrix4d {","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.XAxis(), tilt * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeRotate(pxr.GfRotation(.YAxis(), pan * 180 \/ .pi)) *","    pxr.GfMatrix4d.MakeTranslate(position)","}"]},{"type":"heading","anchor":"GetPrim","level":3,"text":"GetPrim()"},{"type":"paragraph","inlineContent":[{"text":"In Swift, calling the ","type":"text"},{"type":"codeVoice","code":"GetPrim()"},{"text":" method on a ","type":"text"},{"type":"codeVoice","code":"UsdSchemaBase"},{"text":" subclass (e.g. ","type":"text"},{"type":"codeVoice","code":"UsdGeomSphere"},{"text":") causes a compiler crash.","type":"text"},{"text":"\n","type":"text"},{"text":"This Swift Package provides ","type":"text"},{"type":"codeVoice","code":"Overlay.GetPrim<T>(_:T) -> pxr.UsdPrim"},{"text":", substituting ","type":"text"},{"type":"codeVoice","code":"T"},{"text":" for each subclass of ","type":"text"},{"type":"codeVoice","code":"UsdSchemaBase"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let planePrim = pxr.UsdGeomMesh.Get(Overlay.TfWeakPtr(stage), planePath(anchor: anchor))","Overlay.GetPrim(planePrim).SetActive(true)"]},{"type":"heading","anchor":"Implicit-member-expressions","level":3,"text":"Implicit member expressions"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SdfValueTypeNames"},{"type":"text","text":" and tokens types like "},{"type":"codeVoice","code":"UsdGeomTokensType"},{"type":"text","text":" support implicit member expressions."}]},{"type":"codeListing","syntax":"swift","code":["var pbrShader = pxr.UsdShadeShader.Define(Overlay.TfWeakPtr(stage), \"\/TexModel\/boardMat\/PBRShader\")","pbrShader.CreateInput(\"roughness\", pxr.SdfValueTypeName.Float) \/\/ Without implicit member expressions","pbrShader.CreateInput(\"metallic\", .Float) \/\/ With implicit member expressions"]},{"type":"codeListing","syntax":"swift","code":["let xform1 = stage.DefinePrim(\"\/hello\", pxr.TfToken.UsdGeomTokens.Xform) \/\/ Without implicit member expressions","let xform2 = stage.DefinePrim(\"\/hello\/world\", .UsdGeomTokens.Xform) \/\/ With implicit member expressions"]},{"type":"heading","anchor":"Nested-enums","level":3,"text":"Nested enums"},{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ unscoped enums nested in a namespace are not currently imported into Swift."},{"type":"text","text":" "},{"type":"text","text":"This Swift Package provides workarounds for all public enums, replacing the "},{"code":"pxr","type":"codeVoice"},{"type":"text","text":" root namespace with "},{"code":"Overlay","type":"codeVoice"},{"type":"text","text":". For example, instead of "},{"code":"pxr.UsdStage.LoadAll","type":"codeVoice"},{"type":"text","text":", use "},{"code":"Overlay.UsdStage.LoadAll","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":"\n"},{"type":"text","text":"See "},{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums","type":"reference","isActive":true},{"type":"text","text":" for more information."}]},{"type":"heading","anchor":"Closure-based-API-for-UsdEditContext","level":3,"text":"Closure-based API for UsdEditContext"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UsdEditContext"},{"type":"text","text":" is a non-movable type in C++ and cannot currently be imported into Swift. Instead, use "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.withUsdEditContext()"}],"type":"reference","overridingTitle":"Overlay.withUsdEditContext()","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","isActive":true},{"type":"text","text":" for RAII-like patterns in Swift. See "},{"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","isActive":true},{"type":"text","text":" for more details."}]},{"type":"codeListing","syntax":"swift","code":["let target = stage.GetEditTargetForLocalLayer(stage.GetSessionLayer())","Overlay.withUsdEditContext(stage, target) {","    let refSphere2 = stage.GetPrimAtPath(\"\/refSphere2\")","    refSphere2.SetActive(false)","}"]},{"type":"codeListing","syntax":"swift","code":["\/\/ Add a UsdVariantSet with variant \"red\"","let rootPrim = stage.GetPrimAtPath(\"\/hello\")","let colorAttr = rootPrim.GetAttribute(.UsdGeomTokens.primvarsDisplayColor)","var vsets = rootPrim.GetVariantSets()","var vset = vsets.AddVariantSet(\"shadingVariant\", .UsdListPositionBackOfPrependList)","vset.AddVariant(\"red\", .UsdListPositionBackOfPrependList)","","\/\/ Author a color in the \"red\" variant","vset.SetVariantSelection(\"red\")","Overlay.withUsdEditContext(vset.GetVariantEditContext(pxr.SdfLayerHandle())) {","    let colorValue: pxr.VtVec3fArray = [pxr.GfVec3f(1, 0, 0)]","    colorAttr.Set(colorValue, pxr.UsdTimeCode.Default())","}"]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"references":{"doc://SwiftUsd/documentation/SwiftUsd/WorkingWithTfNotice":{"abstract":[{"text":"Learn how to use the TfNotice notification subsystem in Swift","type":"text"}],"url":"\/documentation\/swiftusd\/workingwithtfnotice","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WorkingWithTfNotice","kind":"article","title":"Working with TfNotice","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/WrappedEnums":{"abstract":[],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedEnums","url":"\/documentation\/swiftusd\/wrappedenums","type":"topic","kind":"article","title":"Wrapped enums","role":"article"},"doc://SwiftUsd/documentation/OpenUSD/Overlay/UsdPrimTypeInfoWrapper":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/Overlay\/UsdPrimTypeInfoWrapper","title":"struct UsdPrimTypeInfoWrapper","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UsdPrimTypeInfoWrapper"}],"url":"\/documentation\/openusd\/overlay\/usdprimtypeinfowrapper","navigatorTitle":[{"kind":"identifier","text":"UsdPrimTypeInfoWrapper"}],"role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-3edgv":{"kind":"symbol","abstract":[{"text":"Dereferences a ","type":"text"},{"code":"pxr::TfWeakPtr<T>","type":"codeVoice"},{"text":". Crashes if the pointer is null","type":"text"}],"role":"symbol","type":"topic","title":"Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-3edgv","url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-3edgv","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey15_TfWeakBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"_TfWeakBaseType","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfWeakPtrProtocolP01_dE8BaseTypeQa","kind":"typeIdentifier"}]},"doc://SwiftUsd/documentation/SwiftUsd/WrappedTypes":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WrappedTypes","type":"topic","title":"Wrapped types","url":"\/documentation\/swiftusd\/wrappedtypes","abstract":[],"kind":"article","role":"collectionGroup"},"doc://SwiftUsd/documentation/SwiftUsd/Capabilities":{"title":"Capabilities","url":"\/documentation\/swiftusd\/capabilities","abstract":[{"text":"Learn about the current capabilities of OpenUSD in Swift","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/CurrentLimitations":{"abstract":[{"text":"Learn about the current limitations of OpenUSD in Swift","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations","kind":"article","url":"\/documentation\/swiftusd\/currentlimitations","type":"topic","title":"Current Limitations","role":"article"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeTranslate(_:)":{"url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/maketranslate(_:)","type":"topic","title":"MakeTranslate(_:)","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeTranslate(_:)","abstract":[{"type":"text","text":"Wrapper for "},{"type":"codeVoice","code":"pxr.GfMatrix().SetTranslate(v)"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeTranslate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfVec3d","preciseIdentifier":"c:@N@pxr@S@GfVec3d"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"GfMatrix4d","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d"}],"role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","role":"symbol","abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUsdEditContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdStage","text":"UsdStage"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","text":"UsdEditTarget"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"},{"kind":"text","text":")) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"}],"title":"withUsdEditContext(_:_:_:)"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/TfWeakPtr(_:)-8de9g":{"url":"\/documentation\/openusd\/c++\/overlay\/tfweakptr(_:)-8de9g","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/TfWeakPtr(_:)-8de9g","abstract":[{"type":"text","text":"Wraps the argument in a "},{"code":"pxr::TfWeakPtr<T>","type":"codeVoice"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"TfWeakPtr"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE9TfWeakPtry01_deF4TypeQzxSgAbCE01_dE12BaseProtocolRzlFZ1TL_xmfp"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_TfWeakPtrType","preciseIdentifier":"s:So7OverlayO7OpenUSDE19_TfWeakBaseProtocolP01_dE7PtrTypeQa"}],"type":"topic","title":"TfWeakPtr(_:)","role":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/Dereference(_:)-67vpz":{"kind":"symbol","abstract":[{"text":"Dereferences a ","type":"text"},{"code":"pxr::TfRefPtr<T>","type":"codeVoice"},{"text":". Crashes if the pointer is null","type":"text"}],"role":"symbol","type":"topic","title":"Dereference(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/Dereference(_:)-67vpz","url":"\/documentation\/openusd\/c++\/overlay\/dereference(_:)-67vpz","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Dereference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE11Dereferencey14_TfRefBaseTypeQzxAbCE01_eF11PtrProtocolRzlFZ1TL_xmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"_TfRefBaseType","preciseIdentifier":"s:So7OverlayO7OpenUSDE17_TfRefPtrProtocolP01_dE8BaseTypeQa","kind":"typeIdentifier"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/TfNotice/Register(_:_:)-99j13":{"abstract":[{"type":"text","text":"Register a listener as being interested in a TfNotice, regardless of sender."}],"url":"\/documentation\/openusd\/c++\/pxr\/tfnotice\/register(_:_:)-99j13","title":"Register(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Register","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Notice","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:So021pxrInternal_v0_25_8__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","text":"Notice","kind":"typeIdentifier"},{"text":".Type, (","kind":"text"},{"preciseIdentifier":"s:So021pxrInternal_v0_25_8__A10Reserved__O8TfNoticeV7OpenUSDE8RegisteryAD8SwiftKeyVxm_yxYbctSo0J3UsdOAEE0eF8ProtocolRzlFZ0F0L_xmfp","text":"Notice","kind":"typeIdentifier"},{"text":") -> ()) -> ","kind":"text"},{"preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@TfNotice","text":"TfNotice","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@pxr@S@TfNotice@S@SwiftKey","text":"SwiftKey","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/TfNotice\/Register(_:_:)-99j13","role":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/UsingEditContexts":{"type":"topic","url":"\/documentation\/swiftusd\/usingeditcontexts","title":"Using edit contexts","role":"collectionGroup","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UsingEditContexts","abstract":[{"type":"text","text":"Using "},{"code":"pxr.UsdEditContext","type":"codeVoice"},{"type":"text","text":" in Swift"}],"kind":"article"},"doc://SwiftUsd/documentation/OpenUSD/C++/pxr/GfMatrix4d/MakeRotate(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeRotate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@GfRotation","text":"GfRotation"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@GfMatrix4d","text":"GfMatrix4d"}],"abstract":[{"type":"text","text":"Wrapper for "},{"type":"codeVoice","code":"pxr.GfMatrix().SetRotate(r)"}],"url":"\/documentation\/openusd\/c++\/pxr\/gfmatrix4d\/makerotate(_:)","kind":"symbol","title":"MakeRotate(_:)","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/pxr\/GfMatrix4d\/MakeRotate(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/GettingStarted":{"abstract":[{"text":"Adding SwiftUsd to your project or package","type":"text"}],"url":"\/documentation\/swiftusd\/gettingstarted","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","kind":"article","title":"Getting Started with OpenUSD","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/CheckingForValidity":{"abstract":[{"text":"Checking for ","type":"text"},{"code":"IsValid()","type":"codeVoice"},{"text":" and null pointers in Swift","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheckingForValidity","kind":"article","type":"topic","url":"\/documentation\/swiftusd\/checkingforvalidity","title":"Checking for validity","role":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","url":"\/documentation\/openusd","kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","role":"collection","abstract":[],"type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"value":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/GettingStarted","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Capabilities","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CurrentLimitations"],"title":"Essentials","generated":true,"anchor":"Essentials"}],"path":"\/seeAlsoSections","op":"replace"},{"value":"UsdPrimTypeInfoWrapper","path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/title","op":"replace"},{"value":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/fragments","op":"replace"},{"value":[{"text":"UsdPrimTypeInfoWrapper","kind":"identifier"}],"path":"\/references\/doc:~1~1SwiftUsd~1documentation~1OpenUSD~1Overlay~1UsdPrimTypeInfoWrapper\/navigatorTitle","op":"replace"}]}]}