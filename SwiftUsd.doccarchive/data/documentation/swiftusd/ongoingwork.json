{"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic."}]},{"type":"heading","level":3,"anchor":"Ease-of-set-up","text":"Ease of set up"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Include visionOS, tvOS, simulators in XCFrameworks","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Small-items","text":"Small items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add missing ","type":"text"},{"code":"SWIFT_NONMUTATING","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdInherits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdPrim.RemoveProperty","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomPrimvar"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomBboxCache"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Simplify "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" conformances, replacing with "},{"type":"codeVoice","code":"CxxSequence"},{"type":"text","text":" where possible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"code":"pxr::TfStaticData","type":"codeVoice"},{"text":"?","type":"text"}]}]}]},{"type":"heading","level":3,"anchor":"Medium-items","text":"Medium items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Paper over ","type":"text"},{"type":"codeVoice","code":"pxr::UsdSchemaBase::GetPrim()"},{"text":" by renaming the method and extending each subclass to have a definition of it.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate adding "},{"type":"codeVoice","code":"requires cplusplus"},{"type":"text","text":" in the modulemap, which may or may not improve code completion"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Why wasn’t the typedef "},{"type":"codeVoice","code":"pxr::SdfLayer::FileFormatArguments"},{"type":"text","text":" found by ast-answerer?"}]}]},{"content":[{"inlineContent":[{"text":"Add an unavailable Swift struct ","type":"text"},{"code":"pxr.UsdEditContext","type":"codeVoice"},{"text":" that redirects to ","type":"text"},{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"code":"extension pxr.TfToken: ExpressibleByStringLiteral","type":"codeVoice"},{"text":" be removed?","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ doesn’t support that even though Python does"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":"-constructed tokens be immortal instead?"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for casting between UsdSchemaBase subclasses"}]}]},{"content":[{"inlineContent":[{"text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@DebugDescription"},{"type":"text","text":" for Usd types"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate papering over Overlay enum wrapping by extern consting the values in "},{"type":"codeVoice","code":"PXR_NS"},{"type":"text","text":" with a different name, then "},{"type":"codeVoice","code":"swift_name"},{"type":"text","text":"ing them to what users expect?"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. ","type":"text"},{"code":"pxr::UsdGeomPrimvar::operator UsdAttribute()","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate automatically wrapping missing math operators"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatically generate "},{"type":"codeVoice","code":"Bool(_:)"},{"type":"text","text":" initializers for C++ types with a suitable "},{"type":"codeVoice","code":"operator bool() const"},{"type":"text","text":"-like operator"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for TfNotice in Swift on Linux"}]}]}]},{"type":"heading","level":3,"anchor":"Big-items","text":"Big items"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Remove ","type":"text"},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"text":" completely from Swift using API notes in Swift 6.1","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should propagate to computed properties and function bodies in views","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for custom file format plugins implemented in Swift"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Requires supporting static initialization in Swift via ","type":"text"},{"type":"codeVoice","code":"@_section"},{"text":". Could probably be wrapped in a macro","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"type":"strikethrough","inlineContent":[{"type":"text","text":"Investigate if SwiftUsd works on Linux"}]}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Experimental Linux support added in SwiftUsd 2.0.1"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift function body macros for validity warning"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift DSL for inline stage building"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should support usda -> DSL conversion"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Find a better solution for making ","type":"text"},{"type":"codeVoice","code":"pxr::Foo"},{"text":" work nicely in Swift","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds"}],"type":"paragraph"}]}]}],"kind":"content"}],"kind":"article","variants":[{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork"},"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"anchor":"About-this-repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"generated":true,"title":"About this repo"}],"metadata":{"roleHeading":"Article","title":"Ongoing Work","role":"article","modules":[{"name":"OpenUSD"}]},"abstract":[{"text":"In-progress and future tasks for improving OpenUSD in Swift","type":"text"}],"references":{"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","abstract":[],"role":"collection","type":"topic","url":"\/documentation\/openusd","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","kind":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"title":"Upgrade Checklist","role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","url":"\/documentation\/swiftusd\/upgradechecklist","type":"topic","abstract":[{"type":"text","text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version"}]},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"title":"Miscellaneous","role":"article","kind":"article","url":"\/documentation\/swiftusd\/miscellaneous","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous","type":"topic","abstract":[{"text":"Miscellaneous details about this repo","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"title":"Release Checklist","role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","url":"\/documentation\/swiftusd\/releasechecklist","type":"topic","abstract":[{"text":"Checklist for releasing new versions of SwiftUsd","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"title":"Cheat sheet","role":"article","kind":"article","url":"\/documentation\/swiftusd\/cheatsheet","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","type":"topic","abstract":[{"text":"Tips for advanced users modifying this repo","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"title":"Change Log","role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","url":"\/documentation\/swiftusd\/changelog","type":"topic","abstract":[{"type":"text","text":"Changes to SwiftUsd"}]}},"variantOverrides":[{"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"add","value":null,"path":"\/topicSections"},{"op":"replace","value":[{"title":"About this repo","generated":true,"anchor":"About-this-repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}],"path":"\/seeAlsoSections"}],"traits":[{"interfaceLanguage":"occ"}]}]}