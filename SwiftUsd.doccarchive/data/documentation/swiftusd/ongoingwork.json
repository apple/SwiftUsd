{"kind":"article","seeAlsoSections":[{"anchor":"About-this-repo","title":"About this repo","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}],"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article","title":"Ongoing Work"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic."}]},{"level":3,"type":"heading","anchor":"Ease-of-set-up","text":"Ease of set up"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Include visionOS, tvOS, simulators in XCFrameworks","type":"text"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","anchor":"Small-items","text":"Small items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Add missing ","type":"text"},{"code":"SWIFT_NONMUTATING","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"pxr.UsdInherits","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdPrim.RemoveProperty"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdGeomPrimvar","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"pxr.UsdGeomBboxCache","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Simplify ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" conformances, replacing with ","type":"text"},{"code":"CxxSequence","type":"codeVoice"},{"text":" where possible","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"type":"codeVoice","code":"pxr::TfStaticData"},{"text":"?","type":"text"}]}]}]},{"level":3,"type":"heading","anchor":"Medium-items","text":"Medium items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Paper over ","type":"text"},{"type":"codeVoice","code":"pxr::UsdSchemaBase::GetPrim()"},{"text":" by renaming the method and extending each subclass to have a definition of it.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate adding ","type":"text"},{"type":"codeVoice","code":"requires cplusplus"},{"text":" in the modulemap, which may or may not improve code completion","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Why wasn’t the typedef "},{"type":"codeVoice","code":"pxr::SdfLayer::FileFormatArguments"},{"type":"text","text":" found by ast-answerer?"}]}]},{"content":[{"inlineContent":[{"text":"Add an unavailable Swift struct ","type":"text"},{"type":"codeVoice","code":"pxr.UsdEditContext"},{"text":" that redirects to ","type":"text"},{"type":"codeVoice","code":"Overlay.withUsdEditContext(_:_:_:)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Should ","type":"text"},{"code":"extension pxr.TfToken: ExpressibleByStringLiteral","type":"codeVoice"},{"text":" be removed?","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"C++ doesn’t support that even though Python does"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should "},{"code":"ExpressibleByStringLiteral","type":"codeVoice"},{"type":"text","text":"-constructed tokens be immortal instead?"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for casting between UsdSchemaBase subclasses"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift"}]}]},{"content":[{"inlineContent":[{"text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@DebugDescription"},{"type":"text","text":" for Usd types"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate papering over Overlay enum wrapping by extern consting the values in ","type":"text"},{"code":"PXR_NS","type":"codeVoice"},{"text":" with a different name, then ","type":"text"},{"code":"swift_name","type":"codeVoice"},{"text":"ing them to what users expect?","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. ","type":"text"},{"code":"pxr::UsdGeomPrimvar::operator UsdAttribute()","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate automatically wrapping missing math operators"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Automatically generate "},{"code":"Bool(_:)","type":"codeVoice"},{"type":"text","text":" initializers for C++ types with a suitable "},{"code":"operator bool() const","type":"codeVoice"},{"type":"text","text":"-like operator"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for TfNotice in Swift on Linux"}]}]}]},{"level":3,"type":"heading","anchor":"Big-items","text":"Big items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Remove ","type":"text"},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"text":" completely from Swift using API notes in Swift 6.1","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should propagate to computed properties and function bodies in views"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for custom file format plugins implemented in Swift"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires supporting static initialization in Swift via "},{"type":"codeVoice","code":"@_section"},{"type":"text","text":". Could probably be wrapped in a macro"}]}]}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Investigate if SwiftUsd works on Linux"}],"type":"strikethrough"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Experimental Linux support added in SwiftUsd 2.0.1"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift function body macros for validity warning"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add Swift DSL for inline stage building"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should support usda -> DSL conversion","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Find a better solution for making "},{"code":"pxr::Foo","type":"codeVoice"},{"type":"text","text":" work nicely in Swift"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds"}]}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"In-progress and future tasks for improving OpenUSD in Swift"}],"sections":[],"references":{"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"kind":"article","role":"article","title":"Upgrade Checklist","url":"\/documentation\/swiftusd\/upgradechecklist","abstract":[{"type":"text","text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist"},"doc://SwiftUsd/documentation/OpenUSD":{"type":"topic","url":"\/documentation\/openusd","title":"OpenUSD","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"kind":"article","role":"article","title":"Miscellaneous","url":"\/documentation\/swiftusd\/miscellaneous","abstract":[{"type":"text","text":"Miscellaneous details about this repo"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"kind":"article","role":"article","title":"Change Log","url":"\/documentation\/swiftusd\/changelog","abstract":[{"type":"text","text":"Changes to SwiftUsd"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog"},"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"kind":"article","role":"article","url":"\/documentation\/swiftusd\/cheatsheet","title":"Cheat sheet","abstract":[{"type":"text","text":"Tips for advanced users modifying this repo"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet"},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"kind":"article","role":"article","title":"Release Checklist","url":"\/documentation\/swiftusd\/releasechecklist","abstract":[{"type":"text","text":"Checklist for releasing new versions of SwiftUsd"}],"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":[{"title":"About this repo","generated":true,"anchor":"About-this-repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}],"op":"replace"}]}]}