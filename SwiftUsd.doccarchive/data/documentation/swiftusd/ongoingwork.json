{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork"},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic."}]},{"text":"Ease of set up","level":3,"type":"heading","anchor":"Ease-of-set-up"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Include visionOS, tvOS, simulators in XCFrameworks"}]}]}]},{"text":"Small items","level":3,"type":"heading","anchor":"Small-items"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Add missing ","type":"text"},{"type":"codeVoice","code":"SWIFT_NONMUTATING"},{"text":":","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdInherits"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdPrim.RemoveProperty","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomPrimvar"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomBboxCache"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Simplify ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" conformances, replacing with ","type":"text"},{"type":"codeVoice","code":"CxxSequence"},{"text":" where possible","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"type":"codeVoice","code":"pxr::TfStaticData"},{"text":"?","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strikethrough","inlineContent":[{"text":"Investigate using relative paths for MaterialX to make changes to ","type":"text"},{"code":"pxr\/usd\/usdMtlx\/utils.cpp","type":"codeVoice"},{"text":" less invasive","type":"text"}]}]}]}]},{"text":"Medium items","level":3,"type":"heading","anchor":"Medium-items"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Paper over ","type":"text"},{"code":"pxr::UsdSchemaBase::GetPrim()","type":"codeVoice"},{"text":" by renaming the method and extending each subclass to have a definition of it.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate adding "},{"type":"codeVoice","code":"requires cplusplus"},{"type":"text","text":" in the modulemap, which may or may not improve code completion"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Why wasn’t the typedef ","type":"text"},{"code":"pxr::SdfLayer::FileFormatArguments","type":"codeVoice"},{"text":" found by ast-answerer?","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add an unavailable Swift struct "},{"type":"codeVoice","code":"pxr.UsdEditContext"},{"type":"text","text":" that redirects to "},{"type":"codeVoice","code":"Overlay.withUsdEditContext(_:_:_:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"code":"extension pxr.TfToken: ExpressibleByStringLiteral","type":"codeVoice"},{"text":" be removed?","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ doesn’t support that even though Python does"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":"-constructed tokens be immortal instead?"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for casting between UsdSchemaBase subclasses"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"code":"CustomDebugStringConvertible","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"@DebugDescription","type":"codeVoice"},{"text":" for Usd types","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate papering over Overlay enum wrapping by extern consting the values in ","type":"text"},{"code":"PXR_NS","type":"codeVoice"},{"text":" with a different name, then ","type":"text"},{"code":"swift_name","type":"codeVoice"},{"text":"ing them to what users expect?","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. ","type":"text"},{"code":"pxr::UsdGeomPrimvar::operator UsdAttribute()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate automatically wrapping missing math operators"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatically generate "},{"type":"codeVoice","code":"Bool(_:)"},{"type":"text","text":" initializers for C++ types with a suitable "},{"type":"codeVoice","code":"operator bool() const"},{"type":"text","text":"-like operator"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for TfNotice in Swift on Linux"}],"type":"paragraph"}]}]},{"text":"Big items","level":3,"type":"heading","anchor":"Big-items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Remove ","type":"text"},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"text":" completely from Swift using API notes in Swift 6.1","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should propagate to computed properties and function bodies in views"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for custom file format plugins implemented in Swift"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires supporting static initialization in Swift via "},{"code":"@_section","type":"codeVoice"},{"type":"text","text":". Could probably be wrapped in a macro"}]}]}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Investigate if SwiftUsd works on Linux","type":"text"}],"type":"strikethrough"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Experimental Linux support added in SwiftUsd 2.0.1"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add Swift function body macros for validity warning"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift DSL for inline stage building"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Should support usda -> DSL conversion"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Find a better solution for making ","type":"text"},{"type":"codeVoice","code":"pxr::Foo"},{"text":" work nicely in Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds"}],"type":"paragraph"}]}]}]}],"kind":"article","metadata":{"roleHeading":"Article","title":"Ongoing Work","modules":[{"name":"OpenUSD"}],"role":"article"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"In-progress and future tasks for improving OpenUSD in Swift"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"generated":true,"anchor":"About-this-repo","title":"About this repo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/ongoingwork"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/ongoingwork"]}],"references":{"doc://SwiftUsd/documentation/OpenUSD":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","kind":"symbol","abstract":[],"url":"\/documentation\/openusd","role":"collection","type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"url":"\/documentation\/swiftusd\/changelog","type":"topic","title":"Change Log","kind":"article","role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","abstract":[{"text":"Changes to SwiftUsd","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","kind":"article","role":"article","url":"\/documentation\/swiftusd\/cheatsheet","abstract":[{"text":"Tips for advanced users modifying this repo","type":"text"}],"type":"topic","title":"Cheat sheet"},"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"abstract":[{"type":"text","text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version"}],"kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","url":"\/documentation\/swiftusd\/upgradechecklist","title":"Upgrade Checklist","type":"topic","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"url":"\/documentation\/swiftusd\/releasechecklist","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","role":"article","title":"Release Checklist","kind":"article","abstract":[{"type":"text","text":"Checklist for releasing new versions of SwiftUsd"}],"type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"type":"topic","url":"\/documentation\/swiftusd\/miscellaneous","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous","title":"Miscellaneous","role":"article","abstract":[{"type":"text","text":"Miscellaneous details about this repo"}],"kind":"article"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"anchor":"About-this-repo","title":"About this repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"generated":true}],"op":"replace","path":"\/seeAlsoSections"}],"traits":[{"interfaceLanguage":"occ"}]}]}