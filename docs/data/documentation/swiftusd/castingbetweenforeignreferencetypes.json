{"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes"},"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"anchor":"Working-with-foreign-reference-types","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"title":"Working with foreign reference types"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"When working with Swift types, Swift provides the "},{"code":"as","type":"codeVoice"},{"type":"text","text":", "},{"code":"as?","type":"codeVoice"},{"type":"text","text":", and "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftUsd provides "},{"overridingTitle":"func as<T>(_ t: T.Type) -> T?","isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"func as<T>(_ t: T.Type) -> T?"}]},{"type":"text","text":" on types that inherit from "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":", to dynamically cast from one "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclass to another. Use this instead of using "},{"type":"codeVoice","code":"as"},{"type":"text","text":", "},{"type":"codeVoice","code":"as?"},{"type":"text","text":", or "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" to upcast or downcast."}],"type":"paragraph"}]}],"abstract":[{"text":"Learn about casting with Foreign Reference Types","type":"text"}],"metadata":{"modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article","title":"Casting between Foreign Reference Types"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"]}],"sections":[],"references":{"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"type":"topic","role":"article","url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","title":"Foreign Reference Types and Smart Pointers","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers","abstract":[{"type":"text","text":"Learn about "},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"type":"text","text":" in Swift"}],"kind":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"role":"collection","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","type":"topic","abstract":[],"title":"OpenUSD","url":"\/documentation\/openusd","kind":"symbol"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Dynamically casts "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to the argument type."}],"url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)","kind":"symbol","title":"as(_:)","role":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","title":"What is a Foreign Reference Type?","abstract":[{"type":"text","text":"Learn about foreign reference types and how to use them"}],"role":"article","kind":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"title":"Working with foreign reference types","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types","generated":true}],"op":"replace","path":"\/seeAlsoSections"}]}]}