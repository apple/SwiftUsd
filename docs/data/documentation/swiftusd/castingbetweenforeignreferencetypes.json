{"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes","interfaceLanguage":"swift"},"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Learn about casting with Foreign Reference Types"}],"metadata":{"title":"Casting between Foreign Reference Types","role":"article","modules":[{"name":"OpenUSD"}],"roleHeading":"Article"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When working with Swift types, Swift provides the "},{"code":"as","type":"codeVoice"},{"type":"text","text":", "},{"code":"as?","type":"codeVoice"},{"type":"text","text":", and "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types."}]},{"inlineContent":[{"type":"text","text":"SwiftUsd provides "},{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","overridingTitle":"func as<T>(_ t: T.Type) -> T?","overridingTitleInlineContent":[{"type":"codeVoice","code":"func as<T>(_ t: T.Type) -> T?"}],"type":"reference","isActive":true},{"type":"text","text":" on types that inherit from "},{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":", to dynamically cast from one "},{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":" subclass to another. Use this instead of using "},{"code":"as","type":"codeVoice"},{"type":"text","text":", "},{"code":"as?","type":"codeVoice"},{"type":"text","text":", or "},{"code":"as!","type":"codeVoice"},{"text":" to upcast or downcast.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"occ"}]}],"seeAlsoSections":[{"generated":true,"anchor":"Working-with-foreign-reference-types","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"title":"Working with foreign reference types"}],"references":{"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Dynamically casts "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to the argument type."}],"role":"symbol","kind":"symbol","title":"as(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"title":"Foreign Reference Types and Smart Pointers","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers","abstract":[{"text":"Learn about ","type":"text"},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"text":" in Swift","type":"text"}],"url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","kind":"article","type":"topic","role":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"kind":"symbol","title":"OpenUSD","url":"\/documentation\/openusd","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","role":"collection","type":"topic","abstract":[]},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"title":"What is a Foreign Reference Type?","role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","abstract":[{"type":"text","text":"Learn about foreign reference types and how to use them"}],"kind":"article","url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","type":"topic"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"title":"Working with foreign reference types","anchor":"Working-with-foreign-reference-types","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"generated":true}],"op":"replace","path":"\/seeAlsoSections"}]}]}