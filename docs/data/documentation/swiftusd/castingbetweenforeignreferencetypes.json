{"metadata":{"title":"Casting between Foreign Reference Types","modules":[{"name":"OpenUSD"}],"roleHeading":"Article","role":"article"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CastingBetweenForeignReferenceTypes"},"variants":[{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/castingbetweenforeignreferencetypes"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","abstract":[{"text":"Learn about casting with Foreign Reference Types","type":"text"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"],"anchor":"Working-with-foreign-reference-types","title":"Working with foreign reference types"}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"When working with Swift types, Swift provides the ","type":"text"},{"type":"codeVoice","code":"as"},{"text":", ","type":"text"},{"type":"codeVoice","code":"as?"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"as!"},{"text":" operators to coerce types, conditionally cast types, and unconditionally cast types, respectively. However, due to compiler bugs and limitations, these operators do not work with C++ foreign reference types.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftUsd provides "},{"overridingTitle":"func as<T>(_ t: T.Type) -> T?","type":"reference","overridingTitleInlineContent":[{"type":"codeVoice","code":"func as<T>(_ t: T.Type) -> T?"}],"isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)"},{"type":"text","text":" on types that inherit from "},{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":", to dynamically cast from one "},{"code":"pxr::TfRefBase","type":"codeVoice"},{"type":"text","text":" subclass to another. Use this instead of using "},{"code":"as","type":"codeVoice"},{"type":"text","text":", "},{"code":"as?","type":"codeVoice"},{"type":"text","text":", or "},{"code":"as!","type":"codeVoice"},{"type":"text","text":" to upcast or downcast."}],"type":"paragraph"}]}],"references":{"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","abstract":[],"url":"\/documentation\/openusd","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/_TfRefBaseProtocol/as(_:)":{"role":"symbol","title":"as(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/_TfRefBaseProtocol\/as(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18_TfRefBaseProtocolPACE2asyqd__Sgqd__mAbCEADRd__9_SelfTypeQyd__Rsd__lF1TL_qd__mfp"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/_tfrefbaseprotocol\/as(_:)","kind":"symbol","abstract":[{"text":"Dynamically casts ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to the argument type.","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/ForeignReferenceTypesAndSmartPointers":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers","kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn about "},{"code":"pxr::TfRefPtr","type":"codeVoice"},{"type":"text","text":" and "},{"code":"pxr::TfWeakPtr","type":"codeVoice"},{"type":"text","text":" in Swift"}],"url":"\/documentation\/swiftusd\/foreignreferencetypesandsmartpointers","title":"Foreign Reference Types and Smart Pointers","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/WhatIsAForeignReferenceType":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","role":"article","url":"\/documentation\/swiftusd\/whatisaforeignreferencetype","kind":"article","abstract":[{"text":"Learn about foreign reference types and how to use them","type":"text"}],"type":"topic","title":"What is a Foreign Reference Type?"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","path":"\/seeAlsoSections","value":[{"title":"Working with foreign reference types","generated":true,"anchor":"Working-with-foreign-reference-types","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/WhatIsAForeignReferenceType","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ForeignReferenceTypesAndSmartPointers"]}]}]}]}