{"metadata":{"roleHeading":"Article","role":"article","title":"Changes to OpenUSD","modules":[{"name":"OpenUSD"}]},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"abstract":[{"type":"text","text":"Learn about the changes this Swift Package makes to OpenUSD"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"generated":true,"title":"Technical details","anchor":"Technical-details"}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode."}]},{"anchor":"Changes-to-OpenUSD-before-building","level":3,"type":"heading","text":"Changes to OpenUSD before building"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These changes are contained in "},{"type":"codeVoice","code":"SwiftUsd\/openusd-patch.patch"},{"type":"text","text":":"}]},{"anchor":"Usd-specific-changes-to-OpenUSD-before-building","level":4,"type":"heading","text":"Usd-specific changes to OpenUSD before building"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD"}]},{"items":[{"content":[{"inlineContent":[{"text":"Cherry pick 4cf5fee816332f98af626f44a5cd852e06093e08 to avoid increasing memory footprint when using UsdImagingGLEngine on macOS:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hdx\/taskControllerSceneIndex.cpp","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"anchor":"Swift-specific-changes-to-OpenUSD-before-building","level":4,"type":"heading","text":"Swift-specific changes to OpenUSD before building"},{"type":"paragraph","inlineContent":[{"text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Header modularization fixes:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/arch\/fileSystem.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/vt\/dictionary.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/sdf\/predicateProgram.h"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/parallelExecutorEngineBase.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/exec\/vdf\/pullBasedExecutorEngine.h"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Support importing ","type":"text"},{"code":"pxr::TfRefBase","type":"codeVoice"},{"text":" subclasses as reference types in Swift:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/CMakeLists.txt","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refBase.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Added: "},{"type":"codeVoice","code":"pxr\/base\/tf\/retainReleaseHelper.h"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Support MaterialX in Swift Package:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/usdMtlx\/utils.cpp"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Support using ","type":"text"},{"code":"pxr::TfNotice::Register","type":"codeVoice"},{"text":" from Swift:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/notice.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"rdar:\/\/148534260","isActive":true},{"type":"text","text":" "},{"type":"text","text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refPtr.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/weakPtrFacade.h","type":"codeVoice"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/iterator.h"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"text","text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/poolChainIndex.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/hd\/dependencySchema.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/mergingSceneIndex.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/schema.h","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"identifier":"rdar:\/\/150456875","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"This issue is worked around by moving the definition of a type from a source file into a header file, and by making a private header public","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/exec\/CMakeLists.txt","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/sparseInputTraverser.cpp"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/sparseInputTraverser.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h"}]}]}]}]}],"type":"unorderedList"},{"anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package","level":3,"type":"heading","text":"Changes to OpenUSD while making a Swift Package"},{"inlineContent":[{"text":"These changes are applied by ","type":"text"},{"code":"SwiftUsd\/scripts\/make-swift-package","type":"codeVoice"},{"text":", after ","type":"text"},{"code":"build_usd.py","type":"codeVoice"},{"text":" has finished compiling OpenUSD. (This list is non-exhaustive, see ","type":"text"},{"code":"SwiftUsd\/scripts\/make-swift-package","type":"codeVoice"},{"text":" for full details)","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Wrapping dylibs into frameworks:"},{"type":"text","text":"\n"},{"type":"text","text":"All required dylibs are found using "},{"type":"codeVoice","code":"otool"},{"type":"text","text":", then each dylib is converted to a framework bundle. This involves:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modifying "},{"type":"codeVoice","code":"plugInfo.json"},{"type":"text","text":" files"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Uppercasing Usd plugin ","type":"text"},{"type":"codeVoice","code":"resources"},{"text":" directories to ","type":"text"},{"type":"codeVoice","code":"Resources"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fixing the dylib’s load commands","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Code-signing the framework","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Making a Swift Package:","type":"text"},{"text":"\n","type":"text"},{"text":"This includes:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Copying headers from ","type":"text"},{"code":"USD_BUILD_DIRECTORY\/include","type":"codeVoice"},{"text":" into the Swift Package","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"anchor":"Improving-OpenUSD-ergonomics-in-Swift","level":3,"text":"Improving OpenUSD ergonomics in Swift","type":"heading"},{"anchor":"Automatic-improvements","level":4,"text":"Automatic improvements","type":"heading"},{"inlineContent":[{"type":"text","text":"Some ergonomic improvements are done automatically using "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},{"type":"text","text":" for code generation:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclasses like "},{"type":"codeVoice","code":"pxr::UsdStage"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::SdfLayer"},{"type":"text","text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"operator bool()","type":"codeVoice"},{"text":" is mapped to ","type":"text"},{"code":"Bool.init(_:)","type":"codeVoice"},{"text":" for smart pointers, Usd schemas, and other Usd types","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Many Usd types are conformed to standard library protocols:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"Comparable","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"CustomStringConvertible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Hashable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Sendable","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Unscoped enums are wrapped to work around "},{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Unscoped enums have support for implicit member expressions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Overlay.GetPrim(_:T)"},{"type":"text","text":" is provided to workaround "},{"type":"codeVoice","code":"T.GetPrim()"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709"},{"type":"text","text":", for all "},{"type":"codeVoice","code":"T: UsdSchemaBase"}]}]}],"type":"unorderedList"},{"anchor":"Manual-improvements","level":4,"text":"Manual improvements","type":"heading"},{"inlineContent":[{"text":"Other ergonomic improvements are done by hand:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support for implicit member expressions for all token types  (e.g. "},{"type":"codeVoice","code":"UsdGeomTokensType"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of a few types to "},{"type":"codeVoice","code":"ExpressibleByFOOLiteral"},{"type":"text","text":" protocols"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value"}]}]},{"content":[{"inlineContent":[{"text":"Wrapping of methods on ","type":"text"},{"code":"pxr::UsdReferences","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"pxr::UsdPayloads","type":"codeVoice"},{"text":" to have nonmutating Swift versions, despite having non-const C++ versions","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of a few Usd types to ","type":"text"},{"code":"Sequence","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Conformances of some "},{"type":"codeVoice","code":"std::vector"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"CustomStringConvertible"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Typedefs to work around ","type":"text"},{"isActive":true,"type":"reference","identifier":"rdar:\/\/121886233"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Support for iterating over ","type":"text"},{"type":"codeVoice","code":"pxr::UsdPrimRange"},{"text":" while calling ","type":"text"},{"type":"codeVoice","code":"IsPostVisit()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"PruneChildren()"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of many "},{"type":"codeVoice","code":"pxr::VtArray"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"ExpressibleByArrayLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"overridingTitle":"Overlay.withUsdEditContext(_:_:_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"reference","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.withUsdEditContext(_:_:_:)"}],"isActive":true},{"text":" to wrap ","type":"text"},{"type":"codeVoice","code":"pxr::UsdEditContext"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","isActive":true,"type":"reference","overridingTitleInlineContent":[{"code":"Overlay.withTfErrorMark(_:)","type":"codeVoice"}],"overridingTitle":"Overlay.withTfErrorMark(_:)"},{"text":" to wrap ","type":"text"},{"type":"codeVoice","code":"pxr::TfErrorMark"}]}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]}],"references":{"https://github.com/swiftlang/swift/issues/83117":{"type":"link","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail"}]},"doc://SwiftUsd/documentation/OpenUSD":{"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","type":"topic","url":"\/documentation\/openusd","abstract":[],"role":"collection"},"rdar://121886233":{"type":"link","url":"rdar:\/\/121886233","title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","identifier":"rdar:\/\/121886233","titleInlineContent":[{"type":"text","text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax"}]},"https://github.com/swiftlang/swift/issues/83116":{"type":"link","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly"}]},"https://github.com/swiftlang/swift/pull/81709":{"type":"link","url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance"}]},"rdar://150456875":{"type":"link","url":"rdar:\/\/150456875","title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","identifier":"rdar:\/\/150456875","titleInlineContent":[{"type":"text","text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)"}]},"rdar://148534260":{"type":"link","url":"rdar:\/\/148534260","title":"rdar:\/\/148534260: API notes should support annotating C++ operators","identifier":"rdar:\/\/148534260","titleInlineContent":[{"type":"text","text":"rdar:\/\/148534260: API notes should support annotating C++ operators"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"topic","abstract":[{"type":"text","text":"Performs an edit using the edit target."}],"url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUsdEditContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UsdStage","preciseIdentifier":"c:@N@pxr@S@UsdStage"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"pxr","preciseIdentifier":"s:7OpenUSD3pxra"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UsdEditTarget","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp"},{"kind":"text","text":")) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp"}],"title":"withUsdEditContext(_:_:_:)","role":"symbol"},"https://github.com/apple/SwiftUsd-ast-answerer":{"type":"link","url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"}]},"https://github.com/swiftlang/swift/issues/62127":{"type":"link","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported"}]},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"kind":"article","url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags","title":"Detecting OpenUSD feature flags","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","abstract":[{"type":"text","text":"Learn how to detect OpenUSD feature flags"}],"type":"topic","role":"article"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"kind":"article","role":"article","title":"Building locally","url":"\/documentation\/swiftusd\/buildinglocally","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","type":"topic","abstract":[{"text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries","type":"text"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"type":"topic","title":"withTfErrorMark(_:)","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","kind":"symbol","url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)","abstract":[{"type":"text","text":"Performs work with a "},{"code":"pxr::TfErrorMark","type":"codeVoice"},{"type":"text","text":" in scope"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withTfErrorMark","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:@N@Overlay","text":"Overlay","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper","text":"TfErrorMarkWrapper","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp","text":"E","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp","text":"T","kind":"typeIdentifier"}]}},"variantOverrides":[{"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"value":[{"generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"title":"Technical details","anchor":"Technical-details"}],"path":"\/seeAlsoSections","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}