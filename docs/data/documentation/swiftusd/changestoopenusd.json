{"metadata":{"title":"Changes to OpenUSD","roleHeading":"Article","role":"article","modules":[{"name":"OpenUSD"}]},"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/changestoopenusd"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD"},"kind":"article","seeAlsoSections":[{"title":"Technical details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"generated":true,"anchor":"Technical-details"}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode."}],"type":"paragraph"},{"text":"Changes to OpenUSD before building","anchor":"Changes-to-OpenUSD-before-building","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"These changes are contained in "},{"type":"codeVoice","code":"SwiftUsd\/openusd-patch.patch"},{"type":"text","text":":"}],"type":"paragraph"},{"text":"Usd-specific changes to OpenUSD before building","anchor":"Usd-specific-changes-to-OpenUSD-before-building","type":"heading","level":4},{"inlineContent":[{"text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"None"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Swift-specific changes to OpenUSD before building","anchor":"Swift-specific-changes-to-OpenUSD-before-building","type":"heading","level":4},{"inlineContent":[{"text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Header modularization fixes:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/arch\/fileSystem.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/vt\/dictionary.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/sdf\/predicateProgram.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/parallelExecutorEngineBase.h","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/vdf\/pullBasedExecutorEngine.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support importing "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclasses as reference types in Swift:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/CMakeLists.txt","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refBase.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Added: "},{"type":"codeVoice","code":"pxr\/base\/tf\/retainReleaseHelper.h"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Support MaterialX in Swift Package:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/usdMtlx\/utils.cpp"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support using "},{"code":"pxr::TfNotice::Register","type":"codeVoice"},{"type":"text","text":" from Swift:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"rdar:\/\/148534260"},{"text":" ","type":"text"},{"text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/weakPtrFacade.h","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"reference"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/iterator.h"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"text","text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/poolChainIndex.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hd\/dependencySchema.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/mergingSceneIndex.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/hd\/schema.h"}]}]}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"rdar:\/\/150456875"},{"text":" ","type":"text"},{"text":"This issue is worked around by moving the definition of a type from a source file into a header file, and by making a private header public","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/exec\/exec\/CMakeLists.txt","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/exec\/vdf\/sparseInputTraverser.cpp"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/exec\/vdf\/sparseInputTraverser.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h"}]}]}]}]}],"type":"unorderedList"},{"text":"Changes to OpenUSD while making a Swift Package","anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"These changes are applied by "},{"code":"SwiftUsd\/scripts\/make-swift-package","type":"codeVoice"},{"type":"text","text":", after "},{"code":"build_usd.py","type":"codeVoice"},{"type":"text","text":" has finished compiling OpenUSD. (This list is non-exhaustive, see "},{"code":"SwiftUsd\/scripts\/make-swift-package","type":"codeVoice"},{"type":"text","text":" for full details)"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping dylibs into frameworks:"},{"type":"text","text":"\n"},{"type":"text","text":"All required dylibs are found using "},{"type":"codeVoice","code":"otool"},{"type":"text","text":", then each dylib is converted to a framework bundle. This involves:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Modifying ","type":"text"},{"code":"plugInfo.json","type":"codeVoice"},{"text":" files","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Uppercasing Usd plugin ","type":"text"},{"code":"resources","type":"codeVoice"},{"text":" directories to ","type":"text"},{"code":"Resources","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fixing the dylib’s load commands","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Code-signing the framework","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Making a Swift Package:"},{"type":"text","text":"\n"},{"type":"text","text":"This includes:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Copying headers from ","type":"text"},{"code":"USD_BUILD_DIRECTORY\/include","type":"codeVoice"},{"text":" into the Swift Package","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"},{"text":"Improving OpenUSD ergonomics in Swift","anchor":"Improving-OpenUSD-ergonomics-in-Swift","type":"heading","level":3},{"text":"Automatic improvements","anchor":"Automatic-improvements","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"Some ergonomic improvements are done automatically using "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},{"type":"text","text":" for code generation:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclasses like "},{"type":"codeVoice","code":"pxr::UsdStage"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::SdfLayer"},{"type":"text","text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"operator bool()"},{"type":"text","text":" is mapped to "},{"type":"codeVoice","code":"Bool.init(_:)"},{"type":"text","text":" for smart pointers, Usd schemas, and other Usd types"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Many Usd types are conformed to standard library protocols:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"Comparable","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Equatable","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":"Hashable","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"Sendable","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unscoped enums are wrapped to work around "},{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Unscoped enums have support for implicit member expressions","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Overlay.GetPrim(_:T)"},{"text":" is provided to workaround ","type":"text"},{"type":"codeVoice","code":"T.GetPrim()"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709"},{"text":", for all ","type":"text"},{"type":"codeVoice","code":"T: UsdSchemaBase"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Manual improvements","anchor":"Manual-improvements","type":"heading","level":4},{"inlineContent":[{"type":"text","text":"Other ergonomic improvements are done by hand:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Support for implicit member expressions for all token types  (e.g. "},{"code":"UsdGeomTokensType","type":"codeVoice"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Conformances of a few types to "},{"type":"codeVoice","code":"ExpressibleByFOOLiteral"},{"type":"text","text":" protocols"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping of methods on "},{"type":"codeVoice","code":"pxr::UsdReferences"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::UsdPayloads"},{"type":"text","text":" to have nonmutating Swift versions, despite having non-const C++ versions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Conformances of a few Usd types to "},{"type":"codeVoice","code":"Sequence"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of some "},{"code":"std::vector","type":"codeVoice"},{"type":"text","text":" specializations to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Typedefs to work around ","type":"text"},{"identifier":"rdar:\/\/121886233","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support for iterating over "},{"type":"codeVoice","code":"pxr::UsdPrimRange"},{"type":"text","text":" while calling "},{"type":"codeVoice","code":"IsPostVisit()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"PruneChildren()"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of many ","type":"text"},{"code":"pxr::VtArray","type":"codeVoice"},{"text":" specializations to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ExpressibleByArrayLiteral","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","isActive":true,"type":"reference","overridingTitle":"Overlay.withUsdEditContext(_:_:_:)","overridingTitleInlineContent":[{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}]},{"type":"text","text":" to wrap "},{"type":"codeVoice","code":"pxr::UsdEditContext"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"Overlay.withTfErrorMark(_:)"}],"overridingTitle":"Overlay.withTfErrorMark(_:)","type":"reference","isActive":true},{"text":" to wrap ","type":"text"},{"code":"pxr::TfErrorMark","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"text":"Learn about the changes this Swift Package makes to OpenUSD","type":"text"}],"references":{"rdar://150456875":{"url":"rdar:\/\/150456875","title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","titleInlineContent":[{"text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","type":"text"}],"identifier":"rdar:\/\/150456875","type":"link"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","url":"\/documentation\/swiftusd\/buildinglocally","title":"Building locally","type":"topic","abstract":[{"type":"text","text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries"}]},"rdar://148534260":{"identifier":"rdar:\/\/148534260","titleInlineContent":[{"text":"rdar:\/\/148534260: API notes should support annotating C++ operators","type":"text"}],"type":"link","title":"rdar:\/\/148534260: API notes should support annotating C++ operators","url":"rdar:\/\/148534260"},"doc://SwiftUsd/documentation/OpenUSD":{"kind":"symbol","title":"OpenUSD","url":"\/documentation\/openusd","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","role":"collection","type":"topic","abstract":[]},"https://github.com/apple/SwiftUsd-ast-answerer":{"url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","titleInlineContent":[{"text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"text"}],"identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","type":"link"},"https://github.com/swiftlang/swift/issues/62127":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","type":"text"}],"type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127"},"https://github.com/swiftlang/swift/issues/83117":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","type":"text"}],"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"link"},"rdar://121886233":{"identifier":"rdar:\/\/121886233","titleInlineContent":[{"text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","type":"text"}],"type":"link","title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","url":"rdar:\/\/121886233"},"https://github.com/swiftlang/swift/pull/81709":{"url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","type":"text"}],"identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","type":"link"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUsdEditContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdStage","text":"UsdStage"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra","text":"pxr"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget","text":"UsdEditTarget"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"},{"kind":"text","text":")) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp","text":"T"}],"url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","abstract":[{"type":"text","text":"Performs an edit using the edit target."}],"type":"topic","title":"withUsdEditContext(_:_:_:)"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withTfErrorMark","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"borrowing","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Overlay","kind":"typeIdentifier","preciseIdentifier":"c:@N@Overlay"},{"text":".","kind":"text"},{"text":"TfErrorMarkWrapper","kind":"typeIdentifier","preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"E","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Performs work with a "},{"type":"codeVoice","code":"pxr::TfErrorMark"},{"type":"text","text":" in scope"}],"title":"withTfErrorMark(_:)"},"https://github.com/swiftlang/swift/issues/83116":{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","type":"text"}],"type":"link","title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116"},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","abstract":[{"type":"text","text":"Learn how to detect OpenUSD feature flags"}],"title":"Detecting OpenUSD feature flags","type":"topic","role":"article"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":[{"anchor":"Technical-details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"title":"Technical details","generated":true}],"op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}