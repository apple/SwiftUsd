{"abstract":[{"type":"text","text":"Learn about the changes this Swift Package makes to OpenUSD"}],"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangesToOpenUSD","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftusd\/changestoopenusd"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/changestoopenusd"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"metadata":{"title":"Changes to OpenUSD","roleHeading":"Article","role":"article","modules":[{"name":"OpenUSD"}]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"title":"Technical details","generated":true,"anchor":"Technical-details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This repo makes changes to OpenUSD to support Swift-Cxx interop and make Usd easier to use in Xcode."}],"type":"paragraph"},{"text":"Changes to OpenUSD before building","level":3,"anchor":"Changes-to-OpenUSD-before-building","type":"heading"},{"inlineContent":[{"text":"These changes are contained in ","type":"text"},{"code":"SwiftUsd\/openusd-patch.patch","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"text":"Usd-specific changes to OpenUSD before building","level":4,"anchor":"Usd-specific-changes-to-OpenUSD-before-building","type":"heading"},{"inlineContent":[{"text":"These changes fix bugs or add features to Usd that aren’t part of vanilla OpenUSD","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"None"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Swift-specific changes to OpenUSD before building","level":4,"anchor":"Swift-specific-changes-to-OpenUSD-before-building","type":"heading"},{"inlineContent":[{"type":"text","text":"These changes work around Swift-specific issues in vanilla OpenUSD, add Swift-specific features, and work around issues in the Swift compiler."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Header modularization fixes:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/arch\/fileSystem.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/vt\/dictionary.h","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/usd\/sdf\/predicateProgram.h"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/parallelExecutorEngineBase.h"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/vdf\/pullBasedExecutorEngine.h"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support importing "},{"type":"codeVoice","code":"pxr::TfRefBase"},{"type":"text","text":" subclasses as reference types in Swift:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/CMakeLists.txt"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refBase.h"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/base\/tf\/refPtr.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Added: ","type":"text"},{"code":"pxr\/base\/tf\/retainReleaseHelper.h","type":"codeVoice"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Support MaterialX in Swift Package:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/usd\/usdMtlx\/utils.cpp","type":"codeVoice"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Support using "},{"type":"codeVoice","code":"pxr::TfNotice::Register"},{"type":"text","text":" from Swift:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/notice.h"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"rdar:\/\/148534260","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"Annotations of C++ operators have to go in header files until they’re supported in API Notes"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/base\/tf\/refPtr.h"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"type":"codeVoice","code":"pxr\/base\/tf\/weakPtrFacade.h"}]}]}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"reference","isActive":true}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"code":"pxr\/base\/tf\/iterator.h","type":"codeVoice"}]}]}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","type":"reference","isActive":true},{"text":"","type":"text"},{"text":"\n","type":"text"},{"text":"This issue can be worked around by making sure that the default arguments to methods in class templates are valid expressions for all specialization of that template, even if a particular specialization does not use some methods.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/dependencySchema.h","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Modified: ","type":"text"},{"code":"pxr\/imaging\/hd\/schema.h","type":"codeVoice"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"rdar:\/\/150456875"},{"type":"text","text":" "},{"type":"text","text":"This issue is worked around by moving the definition of a type from a source file into a header file, and by making a private header publig"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/exec\/exec\/CMakeLists.txt"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.cpp"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modified: "},{"type":"codeVoice","code":"pxr\/imaging\/hdsi\/debuggingSceneIndex.h"}]}]}]}]}],"type":"unorderedList"},{"text":"Changes to OpenUSD while making a Swift Package","level":3,"anchor":"Changes-to-OpenUSD-while-making-a-Swift-Package","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"These changes are applied by ","type":"text"},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"text":", after ","type":"text"},{"type":"codeVoice","code":"build_usd.py"},{"text":" has finished compiling OpenUSD. (This list is non-exhaustive, see ","type":"text"},{"type":"codeVoice","code":"SwiftUsd\/scripts\/make-swift-package"},{"text":" for full details)","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Wrapping dylibs into frameworks:","type":"text"},{"text":"\n","type":"text"},{"text":"All required dylibs are found using ","type":"text"},{"type":"codeVoice","code":"otool"},{"text":", then each dylib is converted to a framework bundle. This involves:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Modifying ","type":"text"},{"code":"plugInfo.json","type":"codeVoice"},{"text":" files","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Uppercasing Usd plugin ","type":"text"},{"type":"codeVoice","code":"resources"},{"text":" directories to ","type":"text"},{"type":"codeVoice","code":"Resources"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Copying Usd plugins, Hydra plugins, and MaterialX libraries","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fixing the dylib’s load commands"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Code-signing the framework"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Combining versions of the same framework compiled for different platforms into a single multi-platform XCFramework","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Making a Swift Package:"},{"type":"text","text":"\n"},{"type":"text","text":"This includes:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Copying headers from "},{"code":"USD_BUILD_DIRECTORY\/include","type":"codeVoice"},{"type":"text","text":" into the Swift Package"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Writing out a modulemap file and copying an API Notes file into the public headers directory","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Other Swift-Package specific manipulation that doesn’t modify OpenUSD","type":"text"}]}]}]}]}]},{"anchor":"Improving-OpenUSD-ergonomics-in-Swift","type":"heading","text":"Improving OpenUSD ergonomics in Swift","level":3},{"anchor":"Automatic-improvements","type":"heading","text":"Automatic improvements","level":4},{"type":"paragraph","inlineContent":[{"text":"Some ergonomic improvements are done automatically using ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},{"text":" for code generation:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr::TfRefBase"},{"text":" subclasses like ","type":"text"},{"type":"codeVoice","code":"pxr::UsdStage"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"pxr::SdfLayer"},{"text":" are imported as reference types, along with functions to convert to\/from Usd smart pointers to raw pointers","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"operator bool()","type":"codeVoice"},{"text":" is mapped to ","type":"text"},{"code":"Bool.init(_:)","type":"codeVoice"},{"text":" for smart pointers, Usd schemas, and other Usd types","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Many Usd types are conformed to standard library protocols:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Comparable"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"CustomStringConvertible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Hashable","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Sendable"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Unscoped enums are wrapped to work around ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Unscoped enums have support for implicit member expressions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Overlay.GetPrim(_:T)"},{"type":"text","text":" is provided to workaround "},{"type":"codeVoice","code":"T.GetPrim()"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709"},{"type":"text","text":", for all "},{"type":"codeVoice","code":"T: UsdSchemaBase"}]}]}]},{"anchor":"Manual-improvements","type":"heading","text":"Manual improvements","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"Other ergonomic improvements are done by hand:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Support for implicit member expressions for all token types  (e.g. ","type":"text"},{"code":"UsdGeomTokensType","type":"codeVoice"},{"text":")","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of a few types to "},{"type":"codeVoice","code":"ExpressibleByFOOLiteral"},{"type":"text","text":" protocols"}]}]},{"content":[{"inlineContent":[{"text":"Wrapping of various behavior\/types that can’t be implemented\/imported into Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Wrapping of various methods on Usd types that return const-ref values to return the result by copied value","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping of methods on "},{"type":"codeVoice","code":"pxr::UsdReferences"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::UsdPayloads"},{"type":"text","text":" to have nonmutating Swift versions, despite having non-const C++ versions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of a few Usd types to ","type":"text"},{"type":"codeVoice","code":"Sequence"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Conformances of some ","type":"text"},{"code":"std::vector","type":"codeVoice"},{"text":" specializations to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"CustomStringConvertible","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Typedefs to work around ","type":"text"},{"isActive":true,"identifier":"rdar:\/\/121886233","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Support for iterating over "},{"code":"pxr::UsdPrimRange","type":"codeVoice"},{"type":"text","text":" while calling "},{"code":"IsPostVisit()","type":"codeVoice"},{"type":"text","text":" and "},{"code":"PruneChildren()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Conformances of many "},{"type":"codeVoice","code":"pxr::VtArray"},{"type":"text","text":" specializations to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", "},{"type":"codeVoice","code":"ExpressibleByArrayLiteral"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"CustomStringConvertible"}]}]},{"content":[{"inlineContent":[{"overridingTitle":"Overlay.withUsdEditContext(_:_:_:)","overridingTitleInlineContent":[{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}],"isActive":true,"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","type":"reference"},{"text":" to wrap ","type":"text"},{"code":"pxr::UsdEditContext","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","overridingTitle":"Overlay.withTfErrorMark(_:)","overridingTitleInlineContent":[{"code":"Overlay.withTfErrorMark(_:)","type":"codeVoice"}]},{"type":"text","text":" to wrap "},{"type":"codeVoice","code":"pxr::TfErrorMark"}],"type":"paragraph"}]}]}]}],"kind":"article","references":{"rdar://121886233":{"url":"rdar:\/\/121886233","type":"link","titleInlineContent":[{"text":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","type":"text"}],"title":"rdar:\/\/121886233: Support specializing class templates with concrete types using <> syntax","identifier":"rdar:\/\/121886233"},"https://github.com/apple/SwiftUsd-ast-answerer":{"type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"}],"title":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","url":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer","identifier":"https:\/\/github.com\/apple\/SwiftUsd-ast-answerer"},"doc://SwiftUsd/documentation/SwiftUsd/BuildingLocally":{"type":"topic","role":"article","url":"\/documentation\/swiftusd\/buildinglocally","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally","title":"Building locally","kind":"article","abstract":[{"type":"text","text":"Learn how to use SwiftUsd with local\/existing OpenUSD binaries"}]},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withTfErrorMark(_:)":{"abstract":[{"text":"Performs work with a ","type":"text"},{"type":"codeVoice","code":"pxr::TfErrorMark"},{"text":" in scope","type":"text"}],"title":"withTfErrorMark(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withTfErrorMark"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">(("},{"kind":"keyword","text":"borrowing"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Overlay","preciseIdentifier":"c:@N@Overlay"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"TfErrorMarkWrapper","preciseIdentifier":"c:@N@Overlay@S@TfErrorMarkWrapper"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"E","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1EL_q_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:So7OverlayO7OpenUSDE15withTfErrorMarkyxxAB0efG7WrapperVq_YKXEq_YKs0F0R_r0_lFZ1TL_xmfp"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withTfErrorMark(_:)","kind":"symbol","type":"topic","url":"\/documentation\/openusd\/c++\/overlay\/withtferrormark(_:)"},"doc://SwiftUsd/documentation/SwiftUsd/DetectingOpenUSDFeatureFlags":{"type":"topic","kind":"article","title":"Detecting OpenUSD feature flags","role":"article","abstract":[{"type":"text","text":"Learn how to detect OpenUSD feature flags"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","url":"\/documentation\/swiftusd\/detectingopenusdfeatureflags"},"https://github.com/swiftlang/swift/issues/62127":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127","type":"link","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","type":"text"}],"title":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127: C++ interop: nested enum not imported","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/62127"},"https://github.com/swiftlang/swift/pull/81709":{"type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance"}],"title":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709: [cxx-interop] Fix ambiguous methods in long chains of inheritance","url":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709","identifier":"https:\/\/github.com\/swiftlang\/swift\/pull\/81709"},"https://github.com/swiftlang/swift/issues/83117":{"url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117","type":"link","titleInlineContent":[{"text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","type":"text"}],"title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117: Swift Array addition causes unrelated C++ static_assert to fail","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83117"},"https://github.com/swiftlang/swift/issues/83116":{"type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly"}],"title":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116: Swift instantiates default arguments for function templates too eagerly","url":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116","identifier":"https:\/\/github.com\/swiftlang\/swift\/issues\/83116"},"rdar://150456875":{"url":"rdar:\/\/150456875","type":"link","titleInlineContent":[{"text":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","type":"text"}],"title":"rdar:\/\/150456875: Forward declaring std::map’s value causes an error for Swift but not C++ (Swift 6.1 regression)","identifier":"rdar:\/\/150456875"},"rdar://148534260":{"type":"link","titleInlineContent":[{"type":"text","text":"rdar:\/\/148534260: API notes should support annotating C++ operators"}],"title":"rdar:\/\/148534260: API notes should support annotating C++ operators","url":"rdar:\/\/148534260","identifier":"rdar:\/\/148534260"},"doc://SwiftUsd/documentation/OpenUSD/C++/Overlay/withUsdEditContext(_:_:_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD\/C++\/Overlay\/withUsdEditContext(_:_:_:)","title":"withUsdEditContext(_:_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withUsdEditContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"pxr","kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra"},{"text":".","kind":"text"},{"text":"UsdStage","kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdStage"},{"text":", ","kind":"text"},{"text":"pxr","kind":"typeIdentifier","preciseIdentifier":"s:7OpenUSD3pxra"},{"text":".","kind":"text"},{"text":"UsdEditTarget","kind":"typeIdentifier","preciseIdentifier":"c:@N@pxr@S@UsdEditTarget"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp"},{"text":")) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:So7OverlayO7OpenUSDE18withUsdEditContextyxSo021pxrInternal_v0_25_8__H10Reserved__O0E5StageV_AF0eF6TargetVxyKXEtKlFZ1TL_xmfp"}],"url":"\/documentation\/openusd\/c++\/overlay\/withusdeditcontext(_:_:_:)","abstract":[{"text":"Performs an edit using the edit target.","type":"text"}],"type":"topic"},"doc://SwiftUsd/documentation/OpenUSD":{"title":"OpenUSD","abstract":[],"url":"\/documentation\/openusd","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"replace","value":[{"generated":true,"title":"Technical details","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/DetectingOpenUSDFeatureFlags","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/BuildingLocally"],"anchor":"Technical-details"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}