{"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic."}]},{"level":3,"anchor":"Ease-of-set-up","type":"heading","text":"Ease of set up"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Include visionOS, tvOS, simulators in XCFrameworks"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Small-items","type":"heading","text":"Small items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add missing "},{"code":"SWIFT_NONMUTATING","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr.UsdInherits"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdPrim.RemoveProperty","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomPrimvar"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdGeomBboxCache","type":"codeVoice"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Simplify "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" conformances, replacing with "},{"type":"codeVoice","code":"CxxSequence"},{"type":"text","text":" where possible"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"type":"codeVoice","code":"pxr::TfStaticData"},{"text":"?","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strikethrough","inlineContent":[{"text":"Investigate using relative paths for MaterialX to make changes to ","type":"text"},{"type":"codeVoice","code":"pxr\/usd\/usdMtlx\/utils.cpp"},{"text":" less invasive","type":"text"}]}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Medium-items","type":"heading","text":"Medium items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paper over "},{"code":"pxr::UsdSchemaBase::GetPrim()","type":"codeVoice"},{"text":" by renaming the method and extending each subclass to have a definition of it.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate adding ","type":"text"},{"code":"requires cplusplus","type":"codeVoice"},{"text":" in the modulemap, which may or may not improve code completion","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Why wasn’t the typedef "},{"type":"codeVoice","code":"pxr::SdfLayer::FileFormatArguments"},{"type":"text","text":" found by ast-answerer?"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add an unavailable Swift struct "},{"code":"pxr.UsdEditContext","type":"codeVoice"},{"type":"text","text":" that redirects to "},{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"code":"extension pxr.TfToken: ExpressibleByStringLiteral","type":"codeVoice"},{"text":" be removed?","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"C++ doesn’t support that even though Python does","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Should "},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"type":"text","text":"-constructed tokens be immortal instead?"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for casting between UsdSchemaBase subclasses"}]}]},{"content":[{"inlineContent":[{"text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@DebugDescription"},{"type":"text","text":" for Usd types"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate papering over Overlay enum wrapping by extern consting the values in "},{"type":"codeVoice","code":"PXR_NS"},{"type":"text","text":" with a different name, then "},{"type":"codeVoice","code":"swift_name"},{"type":"text","text":"ing them to what users expect?"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. ","type":"text"},{"code":"pxr::UsdGeomPrimvar::operator UsdAttribute()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping missing math operators","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatically generate "},{"code":"Bool(_:)","type":"codeVoice"},{"type":"text","text":" initializers for C++ types with a suitable "},{"code":"operator bool() const","type":"codeVoice"},{"type":"text","text":"-like operator"}]}]},{"content":[{"inlineContent":[{"text":"Add support for TfNotice in Swift on Linux","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Big-items","type":"heading","text":"Big items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Remove "},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"type":"text","text":" completely from Swift using API notes in Swift 6.1"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Should propagate to computed properties and function bodies in views"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for custom file format plugins implemented in Swift","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires supporting static initialization in Swift via "},{"type":"codeVoice","code":"@_section"},{"type":"text","text":". Could probably be wrapped in a macro"}]}]}]}]},{"content":[{"inlineContent":[{"type":"strikethrough","inlineContent":[{"type":"text","text":"Investigate if SwiftUsd works on Linux"}]}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Experimental Linux support added in SwiftUsd 2.0.1"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Add Swift function body macros for validity warning","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift DSL for inline stage building"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should support usda -> DSL conversion"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Find a better solution for making ","type":"text"},{"type":"codeVoice","code":"pxr::Foo"},{"text":" work nicely in Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds"}]}]}],"type":"unorderedList"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"anchor":"About-this-repo","title":"About this repo","generated":true}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"abstract":[{"type":"text","text":"In-progress and future tasks for improving OpenUSD in Swift"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","title":"Ongoing Work","modules":[{"name":"OpenUSD"}],"roleHeading":"Article"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftusd\/ongoingwork"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/swiftusd\/ongoingwork"]}],"references":{"doc://SwiftUsd/documentation/OpenUSD":{"identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","type":"topic","url":"\/documentation\/openusd","kind":"symbol","role":"collection","title":"OpenUSD","abstract":[]},"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"role":"article","type":"topic","title":"Cheat sheet","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","abstract":[{"type":"text","text":"Tips for advanced users modifying this repo"}],"url":"\/documentation\/swiftusd\/cheatsheet","kind":"article"},"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"role":"article","kind":"article","type":"topic","url":"\/documentation\/swiftusd\/upgradechecklist","abstract":[{"text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","title":"Upgrade Checklist"},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"type":"topic","abstract":[{"text":"Changes to SwiftUsd","type":"text"}],"kind":"article","url":"\/documentation\/swiftusd\/changelog","role":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","title":"Change Log"},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"kind":"article","url":"\/documentation\/swiftusd\/releasechecklist","role":"article","type":"topic","abstract":[{"type":"text","text":"Checklist for releasing new versions of SwiftUsd"}],"title":"Release Checklist","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist"},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous","url":"\/documentation\/swiftusd\/miscellaneous","type":"topic","abstract":[{"text":"Miscellaneous details about this repo","type":"text"}],"title":"Miscellaneous","role":"article","kind":"article"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"add","value":null,"path":"\/topicSections"},{"op":"replace","value":[{"generated":true,"title":"About this repo","anchor":"About-this-repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}],"path":"\/seeAlsoSections"}]}]}