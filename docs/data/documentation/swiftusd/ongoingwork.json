{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"In-progress and future tasks for improving OpenUSD in Swift"}],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"sections":[],"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork","interfaceLanguage":"swift"},"kind":"article","metadata":{"roleHeading":"Article","role":"article","title":"Ongoing Work","modules":[{"name":"OpenUSD"}]},"seeAlsoSections":[{"generated":true,"title":"About this repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"anchor":"About-this-repo"}],"variants":[{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"occ"}]}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic.","type":"text"}]},{"level":3,"text":"Ease of set up","type":"heading","anchor":"Ease-of-set-up"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Include visionOS, tvOS, simulators in XCFrameworks"}],"type":"paragraph"}]}]},{"level":3,"text":"Small items","type":"heading","anchor":"Small-items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add missing "},{"code":"SWIFT_NONMUTATING","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdInherits"}]}]},{"content":[{"inlineContent":[{"code":"pxr.UsdPrim.RemoveProperty","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"pxr.UsdGeomPrimvar","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomBboxCache"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Simplify ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" conformances, replacing with ","type":"text"},{"type":"codeVoice","code":"CxxSequence"},{"text":" where possible","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"code":"pxr::TfStaticData","type":"codeVoice"},{"text":"?","type":"text"}]}]}]},{"level":3,"text":"Medium items","type":"heading","anchor":"Medium-items"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Paper over ","type":"text"},{"code":"pxr::UsdSchemaBase::GetPrim()","type":"codeVoice"},{"text":" by renaming the method and extending each subclass to have a definition of it.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate adding "},{"type":"codeVoice","code":"requires cplusplus"},{"type":"text","text":" in the modulemap, which may or may not improve code completion"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Why wasn’t the typedef "},{"code":"pxr::SdfLayer::FileFormatArguments","type":"codeVoice"},{"type":"text","text":" found by ast-answerer?"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add an unavailable Swift struct "},{"code":"pxr.UsdEditContext","type":"codeVoice"},{"type":"text","text":" that redirects to "},{"code":"Overlay.withUsdEditContext(_:_:_:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"type":"codeVoice","code":"extension pxr.TfToken: ExpressibleByStringLiteral"},{"text":" be removed?","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ doesn’t support that even though Python does"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"type":"codeVoice","code":"ExpressibleByStringLiteral"},{"text":"-constructed tokens be immortal instead?","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"text":"Add support for casting between UsdSchemaBase subclasses","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"@DebugDescription"},{"text":" for Usd types","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate papering over Overlay enum wrapping by extern consting the values in "},{"type":"codeVoice","code":"PXR_NS"},{"type":"text","text":" with a different name, then "},{"type":"codeVoice","code":"swift_name"},{"type":"text","text":"ing them to what users expect?"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. "},{"type":"codeVoice","code":"pxr::UsdGeomPrimvar::operator UsdAttribute()"}]}]},{"content":[{"inlineContent":[{"text":"Investigate automatically wrapping missing math operators","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatically generate "},{"type":"codeVoice","code":"Bool(_:)"},{"type":"text","text":" initializers for C++ types with a suitable "},{"type":"codeVoice","code":"operator bool() const"},{"type":"text","text":"-like operator"}]}]},{"content":[{"inlineContent":[{"text":"Add support for TfNotice in Swift on Linux","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"Big items","type":"heading","anchor":"Big-items"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Remove "},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"type":"text","text":" completely from Swift using API notes in Swift 6.1"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should propagate to computed properties and function bodies in views"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible"}]}]},{"content":[{"inlineContent":[{"text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for custom file format plugins implemented in Swift","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires supporting static initialization in Swift via "},{"code":"@_section","type":"codeVoice"},{"type":"text","text":". Could probably be wrapped in a macro"}]}]}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Investigate if SwiftUsd works on Linux","type":"text"}],"type":"strikethrough"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Experimental Linux support added in SwiftUsd 2.0.1","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add Swift function body macros for validity warning","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Add Swift DSL for inline stage building","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Should support usda -> DSL conversion"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Find a better solution for making "},{"type":"codeVoice","code":"pxr::Foo"},{"type":"text","text":" work nicely in Swift"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds"}]}]}]}],"kind":"content"}],"references":{"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"title":"Cheat sheet","kind":"article","url":"\/documentation\/swiftusd\/cheatsheet","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","role":"article","abstract":[{"text":"Tips for advanced users modifying this repo","type":"text"}]},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"kind":"article","title":"Change Log","type":"topic","abstract":[{"type":"text","text":"Changes to SwiftUsd"}],"role":"article","url":"\/documentation\/swiftusd\/changelog","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog"},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"kind":"article","title":"Miscellaneous","type":"topic","abstract":[{"type":"text","text":"Miscellaneous details about this repo"}],"role":"article","url":"\/documentation\/swiftusd\/miscellaneous","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"abstract":[{"type":"text","text":"Checklist for releasing new versions of SwiftUsd"}],"kind":"article","title":"Release Checklist","type":"topic","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","role":"article","url":"\/documentation\/swiftusd\/releasechecklist"},"doc://SwiftUsd/documentation/OpenUSD":{"kind":"symbol","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","title":"OpenUSD","type":"topic","url":"\/documentation\/openusd","abstract":[],"role":"collection"},"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"kind":"article","title":"Upgrade Checklist","type":"topic","abstract":[{"type":"text","text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version"}],"role":"article","url":"\/documentation\/swiftusd\/upgradechecklist","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"path":"\/topicSections","op":"add","value":null},{"path":"\/seeAlsoSections","op":"replace","value":[{"title":"About this repo","generated":true,"anchor":"About-this-repo","identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}]}],"traits":[{"interfaceLanguage":"occ"}]}]}