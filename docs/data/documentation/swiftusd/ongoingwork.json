{"variants":[{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/swiftusd\/ongoingwork"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/OngoingWork","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftUsd\/documentation\/OpenUSD"]]},"abstract":[{"text":"In-progress and future tasks for improving OpenUSD in Swift","type":"text"}],"seeAlsoSections":[{"title":"About this repo","anchor":"About-this-repo","generated":true,"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"]}],"metadata":{"role":"article","title":"Ongoing Work","modules":[{"name":"OpenUSD"}],"roleHeading":"Article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"SwiftUsd is currently a work-in-progress. Here is a list of potential future improvements, organized by topic."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Ease of set up","anchor":"Ease-of-set-up"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Include visionOS, tvOS, simulators in XCFrameworks"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Small items","anchor":"Small-items"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Add missing "},{"type":"codeVoice","code":"SWIFT_NONMUTATING"},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"pxr.UsdInherits","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdPrim.RemoveProperty"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomPrimvar"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"pxr.UsdGeomBboxCache"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate what happens when you’re iterating over a range backed by a stage that closes during iteration","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Simplify ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" conformances, replacing with ","type":"text"},{"code":"CxxSequence","type":"codeVoice"},{"text":" where possible","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can upstream warnings in SwiftUsd can be hidden from downstream clients?"}]}]},{"content":[{"inlineContent":[{"text":"Does API Notes support renaming extern variables, e.g. for ","type":"text"},{"code":"pxr::TfStaticData","type":"codeVoice"},{"text":"?","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Medium items","anchor":"Medium-items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Paper over "},{"type":"codeVoice","code":"pxr::UsdSchemaBase::GetPrim()"},{"type":"text","text":" by renaming the method and extending each subclass to have a definition of it."}]}]},{"content":[{"inlineContent":[{"text":"Investigate adding ","type":"text"},{"code":"requires cplusplus","type":"codeVoice"},{"text":" in the modulemap, which may or may not improve code completion","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Why wasn’t the typedef ","type":"text"},{"code":"pxr::SdfLayer::FileFormatArguments","type":"codeVoice"},{"text":" found by ast-answerer?","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add an unavailable Swift struct ","type":"text"},{"type":"codeVoice","code":"pxr.UsdEditContext"},{"text":" that redirects to ","type":"text"},{"type":"codeVoice","code":"Overlay.withUsdEditContext(_:_:_:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should "},{"type":"codeVoice","code":"extension pxr.TfToken: ExpressibleByStringLiteral"},{"type":"text","text":" be removed?"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ doesn’t support that even though Python does"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Should ","type":"text"},{"code":"ExpressibleByStringLiteral","type":"codeVoice"},{"text":"-constructed tokens be immortal instead?","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add support for casting between UsdSchemaBase subclasses"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Expose VTOPERATOR_CPPARRAY, i.e. math operators on VtArray specializations, to Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Import nested TfRefBase subclasses as SWIFT_SHARED_REFERENCE","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"CustomDebugStringConvertible"},{"type":"text","text":" and "},{"type":"codeVoice","code":"@DebugDescription"},{"type":"text","text":" for Usd types"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate papering over Overlay enum wrapping by extern consting the values in "},{"code":"PXR_NS","type":"codeVoice"},{"type":"text","text":" with a different name, then "},{"code":"swift_name","type":"codeVoice"},{"type":"text","text":"ing them to what users expect?"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If that doesn’t work, investigate API notes enum case renaming to paper over enum wrapping"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Investigate automatically wrapping missing operator auto-conversion initializers, e.g. ","type":"text"},{"code":"pxr::UsdGeomPrimvar::operator UsdAttribute()","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate automatically wrapping missing math operators"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatically generate ","type":"text"},{"type":"codeVoice","code":"Bool(_:)"},{"text":" initializers for C++ types with a suitable ","type":"text"},{"type":"codeVoice","code":"operator bool() const"},{"text":"-like operator","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for TfNotice in Swift on Linux","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Big items","anchor":"Big-items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Investigate if immortal\/singleton types (TfSingleton, TfStaticData, various Usd registries) can be imported as immortal types in Swift"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Investigate if using ImportAsMember could reduce Swift compile times, and how it interacts with default arguments"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Investigate automatically wrapping non-imported types (i.e. non-moveable non-reference types)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove "},{"type":"codeVoice","code":"pxr::TfRefPtr"},{"type":"text","text":" and "},{"type":"codeVoice","code":"pxr::TfWeakPtr"},{"type":"text","text":" completely from Swift using API notes in Swift 6.1"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Nullability heuristics. Are arguments typically nonnull, and return values typically nullable? Are there functions where passing a null smart pointer isn’t a misuse of the API and isn’t a noop?"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Add support for SwiftUI views using Usd types via custom Swift macros + TfNotice","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Should propagate to computed properties and function bodies in views","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Should be able to wire up a model to observation tracking, so app models that vend wrapper types for Usd data are compatible"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use macros in unit tests to catch observation keypaths by tracking the same way SwiftUI does","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add support for custom file format plugins implemented in Swift"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Requires supporting static initialization in Swift via ","type":"text"},{"code":"@_section","type":"codeVoice"},{"text":". Could probably be wrapped in a macro","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strikethrough","inlineContent":[{"type":"text","text":"Investigate if SwiftUsd works on Linux"}]}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Experimental Linux support added in SwiftUsd 2.0.1"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add Swift function body macros for validity warning"}]}]},{"content":[{"inlineContent":[{"text":"Add Swift DSL for inline stage building","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Should support usda -> DSL conversion"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Find a better solution for making "},{"type":"codeVoice","code":"pxr::Foo"},{"type":"text","text":" work nicely in Swift"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Add support for embedding custom OpenUSD plugins in SwiftUsd builds","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://SwiftUsd/documentation/SwiftUsd/CheatSheet":{"kind":"article","url":"\/documentation\/swiftusd\/cheatsheet","type":"topic","title":"Cheat sheet","abstract":[{"text":"Tips for advanced users modifying this repo","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","role":"article"},"doc://SwiftUsd/documentation/OpenUSD":{"role":"collection","identifier":"doc:\/\/SwiftUsd\/documentation\/OpenUSD","type":"topic","abstract":[],"title":"OpenUSD","url":"\/documentation\/openusd","kind":"symbol"},"doc://SwiftUsd/documentation/SwiftUsd/ReleaseChecklist":{"title":"Release Checklist","type":"topic","abstract":[{"text":"Checklist for releasing new versions of SwiftUsd","type":"text"}],"role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","url":"\/documentation\/swiftusd\/releasechecklist"},"doc://SwiftUsd/documentation/SwiftUsd/Miscellaneous":{"abstract":[{"type":"text","text":"Miscellaneous details about this repo"}],"kind":"article","role":"article","title":"Miscellaneous","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous","url":"\/documentation\/swiftusd\/miscellaneous","type":"topic"},"doc://SwiftUsd/documentation/SwiftUsd/UpgradeChecklist":{"role":"article","kind":"article","identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","type":"topic","abstract":[{"type":"text","text":"Checklist for upgrading SwiftUsd to be based on a new OpenUSD version"}],"title":"Upgrade Checklist","url":"\/documentation\/swiftusd\/upgradechecklist"},"doc://SwiftUsd/documentation/SwiftUsd/ChangeLog":{"kind":"article","url":"\/documentation\/swiftusd\/changelog","type":"topic","title":"Change Log","abstract":[{"text":"Changes to SwiftUsd","type":"text"}],"identifier":"doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","role":"article"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":[{"identifiers":["doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ChangeLog","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/CheatSheet","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/UpgradeChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/ReleaseChecklist","doc:\/\/SwiftUsd\/documentation\/SwiftUsd\/Miscellaneous"],"generated":true,"anchor":"About-this-repo","title":"About this repo"}],"op":"replace","path":"\/seeAlsoSections"}],"traits":[{"interfaceLanguage":"occ"}]}]}