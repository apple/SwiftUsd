// ===-------------------------------------------------------------------===//
// This source file is part of github.com/apple/SwiftUsd-ast-answerer
//
// Copyright Â© 2025 Apple Inc. and the SwiftUsd-ast-answerer authors. All Rights Reserved. 
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at: 
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.     
// 
// SPDX-License-Identifier: Apache-2.0
// ===-------------------------------------------------------------------===//

// This file was generated by SwiftUsd-ast-answerer. Do not edit!
#ifndef SWIFTUSD_GENERATED_COMPARABLE_H
#define SWIFTUSD_GENERATED_COMPARABLE_H

#include "swiftUsd/defines.h"

#include "pxr/base/gf/ilmbase_half.h"
#include "pxr/base/gf/interval.h"
#include "pxr/base/gf/multiInterval.h"
#include "pxr/base/plug/notice.h"
#include "pxr/base/plug/plugin.h"
#include "pxr/base/plug/registry.h"
#include "pxr/base/tf/anyWeakPtr.h"
#include "pxr/base/tf/diagnosticMgr.h"
#include "pxr/base/tf/enum.h"
#include "pxr/base/tf/notice.h"
#include "pxr/base/tf/refBase.h"
#include "pxr/base/tf/refPtrTracker.h"
#include "pxr/base/tf/token.h"
#include "pxr/base/tf/type.h"
#include "pxr/base/trace/aggregateNode.h"
#include "pxr/base/trace/aggregateTree.h"
#include "pxr/base/trace/collector.h"
#include "pxr/base/trace/eventNode.h"
#include "pxr/base/trace/eventTree.h"
#include "pxr/base/trace/reporter.h"
#include "pxr/base/trace/reporterBase.h"
#include "pxr/base/trace/reporterDataSourceCollector.h"
#include "pxr/exec/ef/time.h"
#include "pxr/exec/ef/timeInterval.h"
#include "pxr/exec/exec/typeRegistry.h"
#include "pxr/exec/vdf/executionTypeRegistry.h"
#include "pxr/exec/vdf/maskedOutput.h"
#include "pxr/exec/vdf/object.h"
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#include "pxr/imaging/garch/glPlatformDebugContext.h"
#include "pxr/imaging/glf/bindingMap.h"
#include "pxr/imaging/glf/contextCaps.h"
#include "pxr/imaging/glf/drawTarget.h"
#include "pxr/imaging/glf/simpleLightingContext.h"
#include "pxr/imaging/glf/simpleShadowArray.h"
#include "pxr/imaging/glf/texture.h"
#include "pxr/imaging/glf/uniformBlock.h"
#include "pxr/imaging/hd/bufferSpec.h"
#include "pxr/imaging/hd/cachingSceneIndex.h"
#include "pxr/imaging/hd/dataSourceLocator.h"
#include "pxr/imaging/hd/dependencyForwardingSceneIndex.h"
#include "pxr/imaging/hd/filteringSceneIndex.h"
#include "pxr/imaging/hd/flatteningSceneIndex.h"
#include "pxr/imaging/hd/legacyGeomSubsetSceneIndex.h"
#include "pxr/imaging/hd/legacyPrimSceneIndex.h"
#include "pxr/imaging/hd/materialFilteringSceneIndexBase.h"
#include "pxr/imaging/hd/mergingSceneIndex.h"
#include "pxr/imaging/hd/noticeBatchingSceneIndex.h"
#include "pxr/imaging/hd/perfLog.h"
#include "pxr/imaging/hd/prefixingSceneIndex.h"
#include "pxr/imaging/hd/rendererPluginRegistry.h"
#include "pxr/imaging/hd/repr.h"
#include "pxr/imaging/hd/retainedSceneIndex.h"
#include "pxr/imaging/hd/sceneIndex.h"
#include "pxr/imaging/hd/sceneIndexObserver.h"
#include "pxr/imaging/hd/sceneIndexPluginRegistry.h"
#include "pxr/imaging/hd/types.h"
#include "pxr/imaging/hdGp/generativeProceduralFilteringSceneIndex.h"
#include "pxr/imaging/hdGp/generativeProceduralPluginRegistry.h"
#include "pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/coordSysPrimSceneIndex.h"
#include "pxr/imaging/hdsi/debuggingSceneIndex.h"
#include "pxr/imaging/hdsi/domeLightCameraVisibilitySceneIndex.h"
#include "pxr/imaging/hdsi/extComputationDependencySceneIndex.h"
#include "pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h"
#include "pxr/imaging/hdsi/implicitSurfaceSceneIndex.h"
#include "pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h"
#include "pxr/imaging/hdsi/lightLinkingSceneIndex.h"
#include "pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/materialOverrideResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h"
#include "pxr/imaging/hdsi/nodeIdentifierResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h"
#include "pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h"
#include "pxr/imaging/hdsi/prefixPathPruningSceneIndex.h"
#include "pxr/imaging/hdsi/primManagingSceneIndexObserver.h"
#include "pxr/imaging/hdsi/primTypeAndPathPruningSceneIndex.h"
#include "pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h"
#include "pxr/imaging/hdsi/primTypePruningSceneIndex.h"
#include "pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h"
#include "pxr/imaging/hdsi/sceneGlobalsSceneIndex.h"
#include "pxr/imaging/hdsi/switchingSceneIndex.h"
#include "pxr/imaging/hdsi/tetMeshConversionSceneIndex.h"
#include "pxr/imaging/hdsi/unboundMaterialPruningSceneIndex.h"
#include "pxr/imaging/hdsi/velocityMotionResolvingSceneIndex.h"
#include "pxr/imaging/hdx/pickTask.h"
#include "pxr/imaging/hdx/taskControllerSceneIndex.h"
#include "pxr/imaging/hio/imageRegistry.h"
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#include "pxr/usd/ar/defaultResolverContext.h"
#include "pxr/usd/ar/resolvedPath.h"
#include "pxr/usd/ar/resolverContext.h"
#include "pxr/usd/ar/timestamp.h"
#include "pxr/usd/kind/registry.h"
#include "pxr/usd/pcp/expressionVariablesSource.h"
#include "pxr/usd/pcp/iterator.h"
#include "pxr/usd/pcp/layerStack.h"
#include "pxr/usd/pcp/layerStackIdentifier.h"
#include "pxr/usd/pcp/node.h"
#include "pxr/usd/pcp/site.h"
#include "pxr/usd/sdf/abstractData.h"
#include "pxr/usd/sdf/assetPath.h"
#include "pxr/usd/sdf/attributeSpec.h"
#include "pxr/usd/sdf/data.h"
#include "pxr/usd/sdf/declareHandles.h"
#include "pxr/usd/sdf/fileFormat.h"
#include "pxr/usd/sdf/fileVersion.h"
#include "pxr/usd/sdf/layer.h"
#include "pxr/usd/sdf/layerOffset.h"
#include "pxr/usd/sdf/layerStateDelegate.h"
#include "pxr/usd/sdf/layerTree.h"
#include "pxr/usd/sdf/listProxy.h"
#include "pxr/usd/sdf/mapEditProxy.h"
#include "pxr/usd/sdf/path.h"
#include "pxr/usd/sdf/payload.h"
#include "pxr/usd/sdf/primSpec.h"
#include "pxr/usd/sdf/propertySpec.h"
#include "pxr/usd/sdf/proxyTypes.h"
#include "pxr/usd/sdf/pseudoRootSpec.h"
#include "pxr/usd/sdf/reference.h"
#include "pxr/usd/sdf/relationshipSpec.h"
#include "pxr/usd/sdf/schema.h"
#include "pxr/usd/sdf/site.h"
#include "pxr/usd/sdf/spec.h"
#include "pxr/usd/sdf/textFileFormat.h"
#include "pxr/usd/sdf/timeCode.h"
#include "pxr/usd/sdf/types.h"
#include "pxr/usd/sdf/usdFileFormat.h"
#include "pxr/usd/sdf/usdaData.h"
#include "pxr/usd/sdf/usdaFileFormat.h"
#include "pxr/usd/sdf/usdcFileFormat.h"
#include "pxr/usd/sdf/usdzFileFormat.h"
#include "pxr/usd/sdf/variantSetSpec.h"
#include "pxr/usd/sdf/variantSpec.h"
#include "pxr/usd/sdr/declare.h"
#include "pxr/usd/sdr/discoveryPlugin.h"
#include "pxr/usd/sdr/registry.h"
#include "pxr/usd/usd/attribute.h"
#include "pxr/usd/usd/common.h"
#include "pxr/usd/usd/object.h"
#include "pxr/usd/usd/prim.h"
#include "pxr/usd/usd/property.h"
#include "pxr/usd/usd/relationship.h"
#include "pxr/usd/usd/schemaRegistry.h"
#include "pxr/usd/usd/stage.h"
#include "pxr/usd/usd/stageCache.h"
#include "pxr/usd/usd/timeCode.h"
#include "pxr/usd/usdGeom/primvar.h"
#include "pxr/usd/usdHydra/discoveryPlugin.h"
#if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
#include "pxr/usdImaging/usdImaging/delegate.h"
#include "pxr/usdImaging/usdImaging/drawModeSceneIndex.h"
#include "pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/materialBindingsResolvingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h"
#include "pxr/usdImaging/usdImaging/rerootingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h"
#include "pxr/usdImaging/usdImaging/selectionSceneIndex.h"
#include "pxr/usdImaging/usdImaging/stageSceneIndex.h"
#include "pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h"
#include "pxr/usdImaging/usdSkelImaging/pointsResolvingSceneIndex.h"
#include "pxr/usdImaging/usdSkelImaging/skeletonResolvingSceneIndex.h"
#endif // #if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT

namespace __Overlay {
  bool operatorLess(const pxr::TfRefBase& l,
                    const pxr::TfRefBase& r);
  bool operatorLess(const pxr::TfSimpleRefBase& l,
                    const pxr::TfSimpleRefBase& r);
  bool operatorLess(const pxr::TfNotice::WeakProbePtr& l,
                    const pxr::TfNotice::WeakProbePtr& r);
  bool operatorLess(const pxr::TfDiagnosticMgr& l,
                    const pxr::TfDiagnosticMgr& r);
  bool operatorLess(const pxr::TfRefPtrTracker& l,
                    const pxr::TfRefPtrTracker& r);
  bool operatorLess(const pxr::pxr_half::half& l,
                    const pxr::pxr_half::half& r);
  bool operatorLess(const pxr::TraceAggregateTreeRefPtr& l,
                    const pxr::TraceAggregateTreeRefPtr& r);
  bool operatorLess(const pxr::TraceAggregateTree& l,
                    const pxr::TraceAggregateTree& r);
  bool operatorLess(const pxr::TraceAggregateNodeRefPtr& l,
                    const pxr::TraceAggregateNodeRefPtr& r);
  bool operatorLess(const pxr::TraceAggregateNodePtr& l,
                    const pxr::TraceAggregateNodePtr& r);
  bool operatorLess(const pxr::TraceAggregateNode& l,
                    const pxr::TraceAggregateNode& r);
  bool operatorLess(const pxr::TraceCollector& l,
                    const pxr::TraceCollector& r);
  bool operatorLess(const pxr::TraceEventNodeRefPtr& l,
                    const pxr::TraceEventNodeRefPtr& r);
  bool operatorLess(const pxr::TraceEventNode& l,
                    const pxr::TraceEventNode& r);
  bool operatorLess(const pxr::TraceEventTreeRefPtr& l,
                    const pxr::TraceEventTreeRefPtr& r);
  bool operatorLess(const pxr::TraceEventTree& l,
                    const pxr::TraceEventTree& r);
  bool operatorLess(const pxr::TraceReporterRefPtr& l,
                    const pxr::TraceReporterRefPtr& r);
  bool operatorLess(const pxr::TraceReporterPtr& l,
                    const pxr::TraceReporterPtr& r);
  bool operatorLess(const pxr::TraceReporter& l,
                    const pxr::TraceReporter& r);
  bool operatorLess(const pxr::TraceReporterBase& l,
                    const pxr::TraceReporterBase& r);
  bool operatorLess(const pxr::TraceReporterDataSourceCollectorPtr& l,
                    const pxr::TraceReporterDataSourceCollectorPtr& r);
  bool operatorLess(const pxr::PlugPluginPtr& l,
                    const pxr::PlugPluginPtr& r);
  bool operatorLess(const pxr::PlugRegistry& l,
                    const pxr::PlugRegistry& r);
  bool operatorLess(const pxr::ArTimestamp& l,
                    const pxr::ArTimestamp& r);
  bool operatorLess(const pxr::KindRegistry& l,
                    const pxr::KindRegistry& r);
  bool operatorLess(const pxr::SdfAbstractData& l,
                    const pxr::SdfAbstractData& r);
  bool operatorLess(const pxr::SdfAbstractDataRefPtr& l,
                    const pxr::SdfAbstractDataRefPtr& r);
  bool operatorLess(const pxr::SdfAbstractDataPtr& l,
                    const pxr::SdfAbstractDataPtr& r);
  bool operatorLess(const pxr::SdfAttributeSpec& l,
                    const pxr::SdfAttributeSpec& r);
  bool operatorLess(const pxr::SdfAttributeSpecHandle& l,
                    const pxr::SdfAttributeSpecHandle& r);
  bool operatorLess(const pxr::SdfPropertySpecHandle& l,
                    const pxr::SdfPropertySpecHandle& r);
  bool operatorLess(const pxr::SdfPropertySpec& l,
                    const pxr::SdfPropertySpec& r);
  bool operatorLess(const pxr::SdfSpecHandle& l,
                    const pxr::SdfSpecHandle& r);
  bool operatorLess(const pxr::SdfSchema& l,
                    const pxr::SdfSchema& r);
  bool operatorLess(const pxr::SdfNameChildrenOrderProxy& l,
                    const pxr::SdfNameChildrenOrderProxy& r);
  bool operatorLess(const pxr::SdfSubLayerProxy& l,
                    const pxr::SdfSubLayerProxy& r);
  bool operatorLess(const pxr::SdfRelocatesMapProxy& l,
                    const pxr::SdfRelocatesMapProxy& r);
  bool operatorLess(const pxr::SdfVariantSelectionProxy& l,
                    const pxr::SdfVariantSelectionProxy& r);
  bool operatorLess(const pxr::SdfData& l,
                    const pxr::SdfData& r);
  bool operatorLess(const pxr::SdfDataRefPtr& l,
                    const pxr::SdfDataRefPtr& r);
  bool operatorLess(const pxr::SdfFileFormat& l,
                    const pxr::SdfFileFormat& r);
  bool operatorLess(const pxr::SdfFileFormatRefPtr& l,
                    const pxr::SdfFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfLayer& l,
                    const pxr::SdfLayer& r);
  bool operatorLess(const pxr::SdfLayerRefPtr& l,
                    const pxr::SdfLayerRefPtr& r);
  bool operatorLess(const pxr::SdfLayerHandle& l,
                    const pxr::SdfLayerHandle& r);
  bool operatorLess(const pxr::SdfLayerStateDelegateBase& l,
                    const pxr::SdfLayerStateDelegateBase& r);
  bool operatorLess(const pxr::SdfLayerStateDelegateBaseRefPtr& l,
                    const pxr::SdfLayerStateDelegateBaseRefPtr& r);
  bool operatorLess(const pxr::SdfLayerStateDelegateBasePtr& l,
                    const pxr::SdfLayerStateDelegateBasePtr& r);
  bool operatorLess(const pxr::SdfSimpleLayerStateDelegate& l,
                    const pxr::SdfSimpleLayerStateDelegate& r);
  bool operatorLess(const pxr::SdfSimpleLayerStateDelegateRefPtr& l,
                    const pxr::SdfSimpleLayerStateDelegateRefPtr& r);
  bool operatorLess(const pxr::SdfLayerTree& l,
                    const pxr::SdfLayerTree& r);
  bool operatorLess(const pxr::SdfLayerTreeHandle& l,
                    const pxr::SdfLayerTreeHandle& r);
  bool operatorLess(const pxr::SdfPrimSpecHandle& l,
                    const pxr::SdfPrimSpecHandle& r);
  bool operatorLess(const pxr::SdfPrimSpec& l,
                    const pxr::SdfPrimSpec& r);
  bool operatorLess(const pxr::SdfPseudoRootSpec& l,
                    const pxr::SdfPseudoRootSpec& r);
  bool operatorLess(const pxr::SdfRelationshipSpecHandle& l,
                    const pxr::SdfRelationshipSpecHandle& r);
  bool operatorLess(const pxr::SdfRelationshipSpec& l,
                    const pxr::SdfRelationshipSpec& r);
  bool operatorLess(const pxr::SdfTextFileFormat& l,
                    const pxr::SdfTextFileFormat& r);
  bool operatorLess(const pxr::SdfTextFileFormatRefPtr& l,
                    const pxr::SdfTextFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfUsdFileFormat& l,
                    const pxr::SdfUsdFileFormat& r);
  bool operatorLess(const pxr::SdfUsdFileFormatRefPtr& l,
                    const pxr::SdfUsdFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfUsdaData& l,
                    const pxr::SdfUsdaData& r);
  bool operatorLess(const pxr::SdfUsdaDataRefPtr& l,
                    const pxr::SdfUsdaDataRefPtr& r);
  bool operatorLess(const pxr::SdfUsdaFileFormat& l,
                    const pxr::SdfUsdaFileFormat& r);
  bool operatorLess(const pxr::SdfUsdaFileFormatRefPtr& l,
                    const pxr::SdfUsdaFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfUsdcFileFormat& l,
                    const pxr::SdfUsdcFileFormat& r);
  bool operatorLess(const pxr::SdfUsdcFileFormatRefPtr& l,
                    const pxr::SdfUsdcFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfUsdzFileFormat& l,
                    const pxr::SdfUsdzFileFormat& r);
  bool operatorLess(const pxr::SdfUsdzFileFormatRefPtr& l,
                    const pxr::SdfUsdzFileFormatRefPtr& r);
  bool operatorLess(const pxr::SdfVariantSetSpecHandle& l,
                    const pxr::SdfVariantSetSpecHandle& r);
  bool operatorLess(const pxr::SdfVariantSetSpec& l,
                    const pxr::SdfVariantSetSpec& r);
  bool operatorLess(const pxr::SdfVariantSpecHandle& l,
                    const pxr::SdfVariantSpecHandle& r);
  bool operatorLess(const pxr::SdfVariantSpec& l,
                    const pxr::SdfVariantSpec& r);
  bool operatorLess(const pxr::SdrVersion& l,
                    const pxr::SdrVersion& r);
  bool operatorLess(const pxr::SdrDiscoveryPluginContext& l,
                    const pxr::SdrDiscoveryPluginContext& r);
  bool operatorLess(const pxr::SdrDiscoveryPlugin& l,
                    const pxr::SdrDiscoveryPlugin& r);
  bool operatorLess(const pxr::SdrDiscoveryPluginRefPtr& l,
                    const pxr::SdrDiscoveryPluginRefPtr& r);
  bool operatorLess(const pxr::SdrRegistry& l,
                    const pxr::SdrRegistry& r);
  bool operatorLess(const pxr::PcpLayerStack& l,
                    const pxr::PcpLayerStack& r);
  bool operatorLess(const pxr::PcpLayerStackRefPtr& l,
                    const pxr::PcpLayerStackRefPtr& r);
  bool operatorLess(const pxr::PcpLayerStackPtr& l,
                    const pxr::PcpLayerStackPtr& r);
  bool operatorLess(const pxr::UsdPrim& l,
                    const pxr::UsdPrim& r);
  bool operatorLess(const pxr::UsdTimeCode& l,
                    const pxr::UsdTimeCode& r);
  bool operatorLess(const pxr::UsdObject& l,
                    const pxr::UsdObject& r);
  bool operatorLess(const pxr::UsdSchemaRegistry& l,
                    const pxr::UsdSchemaRegistry& r);
  bool operatorLess(const pxr::UsdStageRefPtr& l,
                    const pxr::UsdStageRefPtr& r);
  bool operatorLess(const pxr::UsdStagePtr& l,
                    const pxr::UsdStagePtr& r);
  bool operatorLess(const pxr::UsdStage& l,
                    const pxr::UsdStage& r);
  bool operatorLess(const pxr::UsdAttribute& l,
                    const pxr::UsdAttribute& r);
  bool operatorLess(const pxr::UsdProperty& l,
                    const pxr::UsdProperty& r);
  bool operatorLess(const pxr::UsdRelationship& l,
                    const pxr::UsdRelationship& r);
  bool operatorLess(const pxr::UsdStageCache::Id& l,
                    const pxr::UsdStageCache::Id& r);
  bool operatorLess(const pxr::UsdGeomPrimvar& l,
                    const pxr::UsdGeomPrimvar& r);
  bool operatorLess(const pxr::UsdHydraDiscoveryPlugin& l,
                    const pxr::UsdHydraDiscoveryPlugin& r);
  bool operatorLess(const pxr::VdfExecutionTypeRegistry& l,
                    const pxr::VdfExecutionTypeRegistry& r);
  bool operatorLess(const pxr::ExecTypeRegistry& l,
                    const pxr::ExecTypeRegistry& r);
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorLess(const pxr::GarchGLPlatformDebugContext& l,
                    const pxr::GarchGLPlatformDebugContext& r);
  bool operatorLess(const pxr::GarchGLPlatformDebugContextRefPtr& l,
                    const pxr::GarchGLPlatformDebugContextRefPtr& r);
  bool operatorLess(const pxr::HioImageRegistry& l,
                    const pxr::HioImageRegistry& r);
  bool operatorLess(const pxr::GlfBindingMap& l,
                    const pxr::GlfBindingMap& r);
  bool operatorLess(const pxr::GlfBindingMapPtr& l,
                    const pxr::GlfBindingMapPtr& r);
  bool operatorLess(const pxr::GlfContextCaps& l,
                    const pxr::GlfContextCaps& r);
  bool operatorLess(const pxr::GlfDrawTarget& l,
                    const pxr::GlfDrawTarget& r);
  bool operatorLess(const pxr::GlfDrawTargetRefPtr& l,
                    const pxr::GlfDrawTargetRefPtr& r);
  bool operatorLess(const pxr::GlfDrawTargetPtr& l,
                    const pxr::GlfDrawTargetPtr& r);
  bool operatorLess(const pxr::GlfDrawTarget::AttachmentRefPtr& l,
                    const pxr::GlfDrawTarget::AttachmentRefPtr& r);
  bool operatorLess(const pxr::GlfTexture& l,
                    const pxr::GlfTexture& r);
  bool operatorLess(const pxr::GlfSimpleLightingContext& l,
                    const pxr::GlfSimpleLightingContext& r);
  bool operatorLess(const pxr::GlfSimpleLightingContextRefPtr& l,
                    const pxr::GlfSimpleLightingContextRefPtr& r);
  bool operatorLess(const pxr::GlfSimpleLightingContextPtr& l,
                    const pxr::GlfSimpleLightingContextPtr& r);
  bool operatorLess(const pxr::GlfSimpleShadowArray& l,
                    const pxr::GlfSimpleShadowArray& r);
  bool operatorLess(const pxr::GlfSimpleShadowArrayRefPtr& l,
                    const pxr::GlfSimpleShadowArrayRefPtr& r);
  bool operatorLess(const pxr::GlfUniformBlock& l,
                    const pxr::GlfUniformBlock& r);
  bool operatorLess(const pxr::GlfUniformBlockRefPtr& l,
                    const pxr::GlfUniformBlockRefPtr& r);
  bool operatorLess(const pxr::HdPerfLog& l,
                    const pxr::HdPerfLog& r);
  bool operatorLess(const pxr::HdSceneIndexBase& l,
                    const pxr::HdSceneIndexBase& r);
  bool operatorLess(const pxr::HdSceneIndexBaseRefPtr& l,
                    const pxr::HdSceneIndexBaseRefPtr& r);
  bool operatorLess(const pxr::HdSceneIndexBasePtr& l,
                    const pxr::HdSceneIndexBasePtr& r);
  bool operatorLess(const pxr::HdSceneIndexObserverPtr& l,
                    const pxr::HdSceneIndexObserverPtr& r);
  bool operatorLess(const pxr::HdMergingSceneIndex& l,
                    const pxr::HdMergingSceneIndex& r);
  bool operatorLess(const pxr::HdMergingSceneIndexRefPtr& l,
                    const pxr::HdMergingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdFilteringSceneIndexBase& l,
                    const pxr::HdFilteringSceneIndexBase& r);
  bool operatorLess(const pxr::HdFilteringSceneIndexBasePtr& l,
                    const pxr::HdFilteringSceneIndexBasePtr& r);
  bool operatorLess(const pxr::HdSingleInputFilteringSceneIndexBase& l,
                    const pxr::HdSingleInputFilteringSceneIndexBase& r);
  bool operatorLess(const pxr::HdLegacyPrimSceneIndex& l,
                    const pxr::HdLegacyPrimSceneIndex& r);
  bool operatorLess(const pxr::HdLegacyPrimSceneIndexRefPtr& l,
                    const pxr::HdLegacyPrimSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdRetainedSceneIndex& l,
                    const pxr::HdRetainedSceneIndex& r);
  bool operatorLess(const pxr::HdRetainedSceneIndexRefPtr& l,
                    const pxr::HdRetainedSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdNoticeBatchingSceneIndex& l,
                    const pxr::HdNoticeBatchingSceneIndex& r);
  bool operatorLess(const pxr::HdNoticeBatchingSceneIndexRefPtr& l,
                    const pxr::HdNoticeBatchingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdCachingSceneIndex& l,
                    const pxr::HdCachingSceneIndex& r);
  bool operatorLess(const pxr::HdCachingSceneIndexRefPtr& l,
                    const pxr::HdCachingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdDependencyForwardingSceneIndex& l,
                    const pxr::HdDependencyForwardingSceneIndex& r);
  bool operatorLess(const pxr::HdDependencyForwardingSceneIndexRefPtr& l,
                    const pxr::HdDependencyForwardingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdFlatteningSceneIndex& l,
                    const pxr::HdFlatteningSceneIndex& r);
  bool operatorLess(const pxr::HdFlatteningSceneIndexRefPtr& l,
                    const pxr::HdFlatteningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdLegacyGeomSubsetSceneIndex& l,
                    const pxr::HdLegacyGeomSubsetSceneIndex& r);
  bool operatorLess(const pxr::HdLegacyGeomSubsetSceneIndexRefPtr& l,
                    const pxr::HdLegacyGeomSubsetSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdMaterialFilteringSceneIndexBase& l,
                    const pxr::HdMaterialFilteringSceneIndexBase& r);
  bool operatorLess(const pxr::HdPrefixingSceneIndex& l,
                    const pxr::HdPrefixingSceneIndex& r);
  bool operatorLess(const pxr::HdPrefixingSceneIndexRefPtr& l,
                    const pxr::HdPrefixingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdRendererPluginRegistry& l,
                    const pxr::HdRendererPluginRegistry& r);
  bool operatorLess(const pxr::HdSceneIndexPluginRegistry& l,
                    const pxr::HdSceneIndexPluginRegistry& r);
  bool operatorLess(const pxr::HdGpGenerativeProceduralPluginRegistry& l,
                    const pxr::HdGpGenerativeProceduralPluginRegistry& r);
  bool operatorLess(const pxr::HdGpGenerativeProceduralFilteringSceneIndex& l,
                    const pxr::HdGpGenerativeProceduralFilteringSceneIndex& r);
  bool operatorLess(const pxr::HdGpGenerativeProceduralFilteringSceneIndexRefPtr& l,
                    const pxr::HdGpGenerativeProceduralFilteringSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdGpGenerativeProceduralResolvingSceneIndex& l,
                    const pxr::HdGpGenerativeProceduralResolvingSceneIndex& r);
  bool operatorLess(const pxr::HdGpGenerativeProceduralResolvingSceneIndexRefPtr& l,
                    const pxr::HdGpGenerativeProceduralResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiCoordSysPrimSceneIndex& l,
                    const pxr::HdsiCoordSysPrimSceneIndex& r);
  bool operatorLess(const pxr::HdsiCoordSysPrimSceneIndexRefPtr& l,
                    const pxr::HdsiCoordSysPrimSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiDebuggingSceneIndex& l,
                    const pxr::HdsiDebuggingSceneIndex& r);
  bool operatorLess(const pxr::HdsiDebuggingSceneIndexRefPtr& l,
                    const pxr::HdsiDebuggingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiDomeLightCameraVisibilitySceneIndex& l,
                    const pxr::HdsiDomeLightCameraVisibilitySceneIndex& r);
  bool operatorLess(const pxr::HdsiDomeLightCameraVisibilitySceneIndexRefPtr& l,
                    const pxr::HdsiDomeLightCameraVisibilitySceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiExtComputationDependencySceneIndex& l,
                    const pxr::HdsiExtComputationDependencySceneIndex& r);
  bool operatorLess(const pxr::HdsiExtComputationDependencySceneIndexRefPtr& l,
                    const pxr::HdsiExtComputationDependencySceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdSiExtComputationPrimvarPruningSceneIndex& l,
                    const pxr::HdSiExtComputationPrimvarPruningSceneIndex& r);
  bool operatorLess(const pxr::HdSiExtComputationPrimvarPruningSceneIndexRefPtr& l,
                    const pxr::HdSiExtComputationPrimvarPruningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiImplicitSurfaceSceneIndex& l,
                    const pxr::HdsiImplicitSurfaceSceneIndex& r);
  bool operatorLess(const pxr::HdsiImplicitSurfaceSceneIndexRefPtr& l,
                    const pxr::HdsiImplicitSurfaceSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex& l,
                    const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex& r);
  bool operatorLess(const pxr::HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr& l,
                    const pxr::HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiLightLinkingSceneIndex& l,
                    const pxr::HdsiLightLinkingSceneIndex& r);
  bool operatorLess(const pxr::HdsiLightLinkingSceneIndexRefPtr& l,
                    const pxr::HdsiLightLinkingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiMaterialBindingResolvingSceneIndex& l,
                    const pxr::HdsiMaterialBindingResolvingSceneIndex& r);
  bool operatorLess(const pxr::HdsiMaterialBindingResolvingSceneIndexRefPtr& l,
                    const pxr::HdsiMaterialBindingResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiMaterialOverrideResolvingSceneIndex& l,
                    const pxr::HdsiMaterialOverrideResolvingSceneIndex& r);
  bool operatorLess(const pxr::HdsiMaterialOverrideResolvingSceneIndexRefPtr& l,
                    const pxr::HdsiMaterialOverrideResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiMaterialPrimvarTransferSceneIndex& l,
                    const pxr::HdsiMaterialPrimvarTransferSceneIndex& r);
  bool operatorLess(const pxr::HdsiMaterialPrimvarTransferSceneIndexRefPtr& l,
                    const pxr::HdsiMaterialPrimvarTransferSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdSiNodeIdentifierResolvingSceneIndex& l,
                    const pxr::HdSiNodeIdentifierResolvingSceneIndex& r);
  bool operatorLess(const pxr::HdSiNodeIdentifierResolvingSceneIndexRefPtr& l,
                    const pxr::HdSiNodeIdentifierResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiNurbsApproximatingSceneIndex& l,
                    const pxr::HdsiNurbsApproximatingSceneIndex& r);
  bool operatorLess(const pxr::HdsiNurbsApproximatingSceneIndexRefPtr& l,
                    const pxr::HdsiNurbsApproximatingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiPrefixPathPruningSceneIndex& l,
                    const pxr::HdsiPrefixPathPruningSceneIndex& r);
  bool operatorLess(const pxr::HdsiPrefixPathPruningSceneIndexRefPtr& l,
                    const pxr::HdsiPrefixPathPruningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiPinnedCurveExpandingSceneIndex& l,
                    const pxr::HdsiPinnedCurveExpandingSceneIndex& r);
  bool operatorLess(const pxr::HdsiPinnedCurveExpandingSceneIndexRefPtr& l,
                    const pxr::HdsiPinnedCurveExpandingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiPrimManagingSceneIndexObserver& l,
                    const pxr::HdsiPrimManagingSceneIndexObserver& r);
  bool operatorLess(const pxr::HdsiPrimManagingSceneIndexObserverRefPtr& l,
                    const pxr::HdsiPrimManagingSceneIndexObserverRefPtr& r);
  bool operatorLess(const pxr::HdsiPrimTypeAndPathPruningSceneIndex& l,
                    const pxr::HdsiPrimTypeAndPathPruningSceneIndex& r);
  bool operatorLess(const pxr::HdsiPrimTypeAndPathPruningSceneIndexRefPtr& l,
                    const pxr::HdsiPrimTypeAndPathPruningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiPrimTypeNoticeBatchingSceneIndex& l,
                    const pxr::HdsiPrimTypeNoticeBatchingSceneIndex& r);
  bool operatorLess(const pxr::HdsiPrimTypeNoticeBatchingSceneIndexRefPtr& l,
                    const pxr::HdsiPrimTypeNoticeBatchingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiPrimTypePruningSceneIndex& l,
                    const pxr::HdsiPrimTypePruningSceneIndex& r);
  bool operatorLess(const pxr::HdsiPrimTypePruningSceneIndexRefPtr& l,
                    const pxr::HdsiPrimTypePruningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiRenderSettingsFilteringSceneIndex& l,
                    const pxr::HdsiRenderSettingsFilteringSceneIndex& r);
  bool operatorLess(const pxr::HdsiRenderSettingsFilteringSceneIndexRefPtr& l,
                    const pxr::HdsiRenderSettingsFilteringSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiSceneGlobalsSceneIndex& l,
                    const pxr::HdsiSceneGlobalsSceneIndex& r);
  bool operatorLess(const pxr::HdsiSceneGlobalsSceneIndexRefPtr& l,
                    const pxr::HdsiSceneGlobalsSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiSwitchingSceneIndex& l,
                    const pxr::HdsiSwitchingSceneIndex& r);
  bool operatorLess(const pxr::HdsiSwitchingSceneIndexRefPtr& l,
                    const pxr::HdsiSwitchingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiTetMeshConversionSceneIndex& l,
                    const pxr::HdsiTetMeshConversionSceneIndex& r);
  bool operatorLess(const pxr::HdsiTetMeshConversionSceneIndexRefPtr& l,
                    const pxr::HdsiTetMeshConversionSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiUnboundMaterialPruningSceneIndex& l,
                    const pxr::HdsiUnboundMaterialPruningSceneIndex& r);
  bool operatorLess(const pxr::HdsiUnboundMaterialPruningSceneIndexRefPtr& l,
                    const pxr::HdsiUnboundMaterialPruningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdsiVelocityMotionResolvingSceneIndex& l,
                    const pxr::HdsiVelocityMotionResolvingSceneIndex& r);
  bool operatorLess(const pxr::HdsiVelocityMotionResolvingSceneIndexRefPtr& l,
                    const pxr::HdsiVelocityMotionResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::HdxTaskControllerSceneIndex& l,
                    const pxr::HdxTaskControllerSceneIndex& r);
  bool operatorLess(const pxr::HdxTaskControllerSceneIndexRefPtr& l,
                    const pxr::HdxTaskControllerSceneIndexRefPtr& r);
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
  bool operatorLess(const pxr::UsdImagingDelegatePtr& l,
                    const pxr::UsdImagingDelegatePtr& r);
  bool operatorLess(const pxr::UsdImagingDrawModeSceneIndexRefPtr& l,
                    const pxr::UsdImagingDrawModeSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingDrawModeSceneIndex& l,
                    const pxr::UsdImagingDrawModeSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingExtentResolvingSceneIndexRefPtr& l,
                    const pxr::UsdImagingExtentResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingExtentResolvingSceneIndex& l,
                    const pxr::UsdImagingExtentResolvingSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingStageSceneIndexRefPtr& l,
                    const pxr::UsdImagingStageSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingStageSceneIndex& l,
                    const pxr::UsdImagingStageSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingSelectionSceneIndexRefPtr& l,
                    const pxr::UsdImagingSelectionSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingSelectionSceneIndex& l,
                    const pxr::UsdImagingSelectionSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingMaterialBindingsResolvingSceneIndexRefPtr& l,
                    const pxr::UsdImagingMaterialBindingsResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingMaterialBindingsResolvingSceneIndex& l,
                    const pxr::UsdImagingMaterialBindingsResolvingSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingNiPrototypePropagatingSceneIndexRefPtr& l,
                    const pxr::UsdImagingNiPrototypePropagatingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingNiPrototypePropagatingSceneIndex& l,
                    const pxr::UsdImagingNiPrototypePropagatingSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingPiPrototypePropagatingSceneIndexRefPtr& l,
                    const pxr::UsdImagingPiPrototypePropagatingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingPiPrototypePropagatingSceneIndex& l,
                    const pxr::UsdImagingPiPrototypePropagatingSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingRootOverridesSceneIndexRefPtr& l,
                    const pxr::UsdImagingRootOverridesSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingRootOverridesSceneIndex& l,
                    const pxr::UsdImagingRootOverridesSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingUnloadedDrawModeSceneIndexRefPtr& l,
                    const pxr::UsdImagingUnloadedDrawModeSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingUnloadedDrawModeSceneIndex& l,
                    const pxr::UsdImagingUnloadedDrawModeSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingRenderSettingsFlatteningSceneIndexRefPtr& l,
                    const pxr::UsdImagingRenderSettingsFlatteningSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingRenderSettingsFlatteningSceneIndex& l,
                    const pxr::UsdImagingRenderSettingsFlatteningSceneIndex& r);
  bool operatorLess(const pxr::UsdImagingRerootingSceneIndexRefPtr& l,
                    const pxr::UsdImagingRerootingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdImagingRerootingSceneIndex& l,
                    const pxr::UsdImagingRerootingSceneIndex& r);
  bool operatorLess(const pxr::UsdSkelImagingPointsResolvingSceneIndexRefPtr& l,
                    const pxr::UsdSkelImagingPointsResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdSkelImagingPointsResolvingSceneIndex& l,
                    const pxr::UsdSkelImagingPointsResolvingSceneIndex& r);
  bool operatorLess(const pxr::UsdSkelImagingSkeletonResolvingSceneIndexRefPtr& l,
                    const pxr::UsdSkelImagingSkeletonResolvingSceneIndexRefPtr& r);
  bool operatorLess(const pxr::UsdSkelImagingSkeletonResolvingSceneIndex& l,
                    const pxr::UsdSkelImagingSkeletonResolvingSceneIndex& r);
#endif // #if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
}
#endif /* SWIFTUSD_GENERATED_COMPARABLE_H */
