//===----------------------------------------------------------------------===//
// This source file is part of github.com/apple/SwiftUsd
//
// Copyright Â© 2025 Apple Inc. and the SwiftUsd project authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//===----------------------------------------------------------------------===//

// This file was generated by SwiftUsd-ast-answerer. Do not edit!


// Conformance blocked by no Swift type name:

// pxr::TfRefPtr<pxr::TfRefBase>
// pxr::TfWeakPtr<pxr::PlugRegistry>
// pxr::TfWeakPtr<pxr::SdfSchemaBase>
// pxr::SdfListProxy<pxr::SdfNameKeyPolicy>
// pxr::SdfListProxy<pxr::SdfPathKeyPolicy>
// pxr::SdfListProxy<pxr::SdfReferenceTypePolicy>
// pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>
// pxr::TfRefPtr<pxr::GlfDrawTarget::AttachmentsContainer>
// pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>


// Conformance available:

extension pxr.TfAnyWeakPtr: Comparable {} // foundBySwift
extension pxr.TfType: Comparable {} // foundBySwift
extension pxr.TfRefBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.TfRefBase, rhs: pxr.TfRefBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TfSimpleRefBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.TfSimpleRefBase, rhs: pxr.TfSimpleRefBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TfEnum: Comparable {} // foundBySwift
extension pxr.TfNotice.WeakProbePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TfNotice.WeakProbePtr, rhs: pxr.TfNotice.WeakProbePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TfDiagnosticMgr: Comparable { // importedAsReference
    public static func <(lhs: pxr.TfDiagnosticMgr, rhs: pxr.TfDiagnosticMgr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TfRefPtrTracker: Comparable { // importedAsReference
    public static func <(lhs: pxr.TfRefPtrTracker, rhs: pxr.TfRefPtrTracker) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TfToken: Comparable {} // foundBySwift
extension pxr.pxr_half.half: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.pxr_half.half, rhs: pxr.pxr_half.half) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GfInterval: Comparable {} // foundBySwift
extension pxr.GfMultiInterval: Comparable {} // foundBySwift
extension pxr.TraceAggregateTreeRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceAggregateTreeRefPtr, rhs: pxr.TraceAggregateTreeRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceAggregateTree: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceAggregateTree, rhs: pxr.TraceAggregateTree) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceAggregateNodeRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceAggregateNodeRefPtr, rhs: pxr.TraceAggregateNodeRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceAggregateNodePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceAggregateNodePtr, rhs: pxr.TraceAggregateNodePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceAggregateNode: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceAggregateNode, rhs: pxr.TraceAggregateNode) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceCollector: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceCollector, rhs: pxr.TraceCollector) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceEventNodeRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceEventNodeRefPtr, rhs: pxr.TraceEventNodeRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceEventNode: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceEventNode, rhs: pxr.TraceEventNode) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceEventTreeRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceEventTreeRefPtr, rhs: pxr.TraceEventTreeRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceEventTree: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceEventTree, rhs: pxr.TraceEventTree) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceReporterRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceReporterRefPtr, rhs: pxr.TraceReporterRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceReporterPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceReporterPtr, rhs: pxr.TraceReporterPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceReporter: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceReporter, rhs: pxr.TraceReporter) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceReporterBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.TraceReporterBase, rhs: pxr.TraceReporterBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.TraceReporterDataSourceCollectorPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.TraceReporterDataSourceCollectorPtr, rhs: pxr.TraceReporterDataSourceCollectorPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.PlugPluginPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.PlugPluginPtr, rhs: pxr.PlugPluginPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.PlugRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.PlugRegistry, rhs: pxr.PlugRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.ArDefaultResolverContext: Comparable {} // foundBySwift
extension pxr.ArResolverContext: Comparable {} // foundBySwift
extension pxr.ArResolvedPath: Comparable {} // foundBySwift
extension pxr.ArTimestamp: Comparable {} // friendFunction
extension pxr.KindRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.KindRegistry, rhs: pxr.KindRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfAbstractData: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfAbstractData, rhs: pxr.SdfAbstractData) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfAbstractDataRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfAbstractDataRefPtr, rhs: pxr.SdfAbstractDataRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfAbstractDataPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfAbstractDataPtr, rhs: pxr.SdfAbstractDataPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPath: Comparable {} // foundBySwift
extension pxr.SdfAssetPath: Comparable {} // foundBySwift
extension pxr.SdfTimeCode: Comparable {} // foundBySwift
extension pxr.SdfAttributeSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfAttributeSpec, rhs: pxr.SdfAttributeSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfAttributeSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfAttributeSpecHandle, rhs: pxr.SdfAttributeSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPropertySpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfPropertySpecHandle, rhs: pxr.SdfPropertySpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPropertySpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfPropertySpec, rhs: pxr.SdfPropertySpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfSpecHandle, rhs: pxr.SdfSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSpec: Comparable {} // foundBySwift
extension pxr.SdfSchema: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfSchema, rhs: pxr.SdfSchema) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfNameChildrenOrderProxy: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfNameChildrenOrderProxy, rhs: pxr.SdfNameChildrenOrderProxy) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSubLayerProxy: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfSubLayerProxy, rhs: pxr.SdfSubLayerProxy) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfRelocatesMapProxy: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfRelocatesMapProxy, rhs: pxr.SdfRelocatesMapProxy) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfVariantSelectionProxy: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfVariantSelectionProxy, rhs: pxr.SdfVariantSelectionProxy) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfData: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfData, rhs: pxr.SdfData) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfDataRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfDataRefPtr, rhs: pxr.SdfDataRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfFileFormat, rhs: pxr.SdfFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfFileFormatRefPtr, rhs: pxr.SdfFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfFileVersion: Comparable {} // foundBySwift
extension pxr.SdfLayer: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfLayer, rhs: pxr.SdfLayer) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfLayerRefPtr, rhs: pxr.SdfLayerRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfLayerHandle, rhs: pxr.SdfLayerHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerOffset: Comparable {} // foundBySwift
extension pxr.SdfLayerStateDelegateBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfLayerStateDelegateBase, rhs: pxr.SdfLayerStateDelegateBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerStateDelegateBaseRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfLayerStateDelegateBaseRefPtr, rhs: pxr.SdfLayerStateDelegateBaseRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerStateDelegateBasePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfLayerStateDelegateBasePtr, rhs: pxr.SdfLayerStateDelegateBasePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSimpleLayerStateDelegate: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfSimpleLayerStateDelegate, rhs: pxr.SdfSimpleLayerStateDelegate) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSimpleLayerStateDelegateRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfSimpleLayerStateDelegateRefPtr, rhs: pxr.SdfSimpleLayerStateDelegateRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerTree: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfLayerTree, rhs: pxr.SdfLayerTree) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfLayerTreeHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfLayerTreeHandle, rhs: pxr.SdfLayerTreeHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPayload: Comparable {} // foundBySwift
extension pxr.SdfPrimSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfPrimSpecHandle, rhs: pxr.SdfPrimSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPrimSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfPrimSpec, rhs: pxr.SdfPrimSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfPseudoRootSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfPseudoRootSpec, rhs: pxr.SdfPseudoRootSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfReference: Comparable {} // foundBySwift
extension pxr.SdfRelationshipSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfRelationshipSpecHandle, rhs: pxr.SdfRelationshipSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfRelationshipSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfRelationshipSpec, rhs: pxr.SdfRelationshipSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfSite: Comparable {} // foundBySwift
extension pxr.SdfTextFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfTextFileFormat, rhs: pxr.SdfTextFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfTextFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfTextFileFormatRefPtr, rhs: pxr.SdfTextFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfUsdFileFormat, rhs: pxr.SdfUsdFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfUsdFileFormatRefPtr, rhs: pxr.SdfUsdFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdaData: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfUsdaData, rhs: pxr.SdfUsdaData) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdaDataRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfUsdaDataRefPtr, rhs: pxr.SdfUsdaDataRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdaFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfUsdaFileFormat, rhs: pxr.SdfUsdaFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdaFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfUsdaFileFormatRefPtr, rhs: pxr.SdfUsdaFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdcFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfUsdcFileFormat, rhs: pxr.SdfUsdcFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdcFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfUsdcFileFormatRefPtr, rhs: pxr.SdfUsdcFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdzFileFormat: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdfUsdzFileFormat, rhs: pxr.SdfUsdzFileFormat) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfUsdzFileFormatRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfUsdzFileFormatRefPtr, rhs: pxr.SdfUsdzFileFormatRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfVariantSetSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfVariantSetSpecHandle, rhs: pxr.SdfVariantSetSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfVariantSetSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfVariantSetSpec, rhs: pxr.SdfVariantSetSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfVariantSpecHandle: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdfVariantSpecHandle, rhs: pxr.SdfVariantSpecHandle) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdfVariantSpec: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.SdfVariantSpec, rhs: pxr.SdfVariantSpec) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdrVersion: Comparable {} // friendFunction
extension pxr.SdrDiscoveryPluginContext: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdrDiscoveryPluginContext, rhs: pxr.SdrDiscoveryPluginContext) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdrDiscoveryPlugin: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdrDiscoveryPlugin, rhs: pxr.SdrDiscoveryPlugin) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdrDiscoveryPluginRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.SdrDiscoveryPluginRefPtr, rhs: pxr.SdrDiscoveryPluginRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.SdrRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.SdrRegistry, rhs: pxr.SdrRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.PcpNodeRef: Comparable {} // foundBySwift
extension pxr.PcpSite: Comparable {} // foundBySwift
extension pxr.PcpLayerStackSite: Comparable {} // foundBySwift
extension pxr.PcpLayerStackIdentifier: Comparable {} // foundBySwift
extension pxr.PcpExpressionVariablesSource: Comparable {} // foundBySwift
extension pxr.PcpNodeIterator: Comparable {} // foundBySwift
extension pxr.PcpPrimIterator: Comparable {} // foundBySwift
extension pxr.PcpPropertyIterator: Comparable {} // foundBySwift
extension pxr.PcpLayerStack: Comparable { // importedAsReference
    public static func <(lhs: pxr.PcpLayerStack, rhs: pxr.PcpLayerStack) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.PcpLayerStackRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.PcpLayerStackRefPtr, rhs: pxr.PcpLayerStackRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.PcpLayerStackPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.PcpLayerStackPtr, rhs: pxr.PcpLayerStackPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdPrim: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.UsdPrim, rhs: pxr.UsdPrim) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdTimeCode: Comparable {} // friendFunction
extension pxr.UsdObject: Comparable {} // friendFunction
extension pxr.UsdSchemaRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdSchemaRegistry, rhs: pxr.UsdSchemaRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdStageRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdStageRefPtr, rhs: pxr.UsdStageRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdStagePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdStagePtr, rhs: pxr.UsdStagePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdStage: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdStage, rhs: pxr.UsdStage) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdAttribute: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.UsdAttribute, rhs: pxr.UsdAttribute) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdProperty: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.UsdProperty, rhs: pxr.UsdProperty) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdRelationship: Comparable { // differentArgumentTypes
    public static func <(lhs: pxr.UsdRelationship, rhs: pxr.UsdRelationship) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdStageCache.Id: Comparable {} // friendFunction
extension pxr.UsdGeomPrimvar: Comparable {} // friendFunction
extension pxr.UsdHydraDiscoveryPlugin: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdHydraDiscoveryPlugin, rhs: pxr.UsdHydraDiscoveryPlugin) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.VdfMaskedOutput: Comparable {} // foundBySwift
extension pxr.VdfExecutionTypeRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.VdfExecutionTypeRegistry, rhs: pxr.VdfExecutionTypeRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.VdfObjectPtr: Comparable {} // foundBySwift
extension pxr.EfTime: Comparable {} // foundBySwift
extension pxr.EfTimeInterval: Comparable {} // foundBySwift
extension pxr.ExecTypeRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.ExecTypeRegistry, rhs: pxr.ExecTypeRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.GarchGLPlatformDebugContext: Comparable { // importedAsReference
    public static func <(lhs: pxr.GarchGLPlatformDebugContext, rhs: pxr.GarchGLPlatformDebugContext) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GarchGLPlatformDebugContextRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GarchGLPlatformDebugContextRefPtr, rhs: pxr.GarchGLPlatformDebugContextRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HioImageRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.HioImageRegistry, rhs: pxr.HioImageRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfBindingMap: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfBindingMap, rhs: pxr.GlfBindingMap) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfBindingMapPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfBindingMapPtr, rhs: pxr.GlfBindingMapPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfContextCaps: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfContextCaps, rhs: pxr.GlfContextCaps) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfDrawTarget: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfDrawTarget, rhs: pxr.GlfDrawTarget) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfDrawTargetRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfDrawTargetRefPtr, rhs: pxr.GlfDrawTargetRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfDrawTargetPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfDrawTargetPtr, rhs: pxr.GlfDrawTargetPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfDrawTarget.AttachmentRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfDrawTarget.AttachmentRefPtr, rhs: pxr.GlfDrawTarget.AttachmentRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfTexture: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfTexture, rhs: pxr.GlfTexture) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfSimpleLightingContext: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfSimpleLightingContext, rhs: pxr.GlfSimpleLightingContext) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfSimpleLightingContextRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfSimpleLightingContextRefPtr, rhs: pxr.GlfSimpleLightingContextRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfSimpleLightingContextPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfSimpleLightingContextPtr, rhs: pxr.GlfSimpleLightingContextPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfSimpleShadowArray: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfSimpleShadowArray, rhs: pxr.GlfSimpleShadowArray) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfSimpleShadowArrayRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfSimpleShadowArrayRefPtr, rhs: pxr.GlfSimpleShadowArrayRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfUniformBlock: Comparable { // importedAsReference
    public static func <(lhs: pxr.GlfUniformBlock, rhs: pxr.GlfUniformBlock) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.GlfUniformBlockRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.GlfUniformBlockRefPtr, rhs: pxr.GlfUniformBlockRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdTupleType: Comparable {} // foundBySwift
extension pxr.HdBufferSpec: Comparable {} // foundBySwift
extension pxr.HdReprSelector: Comparable {} // foundBySwift
extension pxr.HdPerfLog: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdPerfLog, rhs: pxr.HdPerfLog) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSceneIndexBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdSceneIndexBase, rhs: pxr.HdSceneIndexBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSceneIndexBaseRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdSceneIndexBaseRefPtr, rhs: pxr.HdSceneIndexBaseRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSceneIndexBasePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdSceneIndexBasePtr, rhs: pxr.HdSceneIndexBasePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdDataSourceLocator: Comparable {} // foundBySwift
extension pxr.HdSceneIndexObserverPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdSceneIndexObserverPtr, rhs: pxr.HdSceneIndexObserverPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdMergingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdMergingSceneIndex, rhs: pxr.HdMergingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdMergingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdMergingSceneIndexRefPtr, rhs: pxr.HdMergingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdFilteringSceneIndexBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdFilteringSceneIndexBase, rhs: pxr.HdFilteringSceneIndexBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdFilteringSceneIndexBasePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdFilteringSceneIndexBasePtr, rhs: pxr.HdFilteringSceneIndexBasePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSingleInputFilteringSceneIndexBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdSingleInputFilteringSceneIndexBase, rhs: pxr.HdSingleInputFilteringSceneIndexBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdLegacyPrimSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdLegacyPrimSceneIndex, rhs: pxr.HdLegacyPrimSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdLegacyPrimSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdLegacyPrimSceneIndexRefPtr, rhs: pxr.HdLegacyPrimSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdRetainedSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdRetainedSceneIndex, rhs: pxr.HdRetainedSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdRetainedSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdRetainedSceneIndexRefPtr, rhs: pxr.HdRetainedSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdNoticeBatchingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdNoticeBatchingSceneIndex, rhs: pxr.HdNoticeBatchingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdNoticeBatchingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdNoticeBatchingSceneIndexRefPtr, rhs: pxr.HdNoticeBatchingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdCachingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdCachingSceneIndex, rhs: pxr.HdCachingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdCachingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdCachingSceneIndexRefPtr, rhs: pxr.HdCachingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdDependencyForwardingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdDependencyForwardingSceneIndex, rhs: pxr.HdDependencyForwardingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdDependencyForwardingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdDependencyForwardingSceneIndexRefPtr, rhs: pxr.HdDependencyForwardingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdFlatteningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdFlatteningSceneIndex, rhs: pxr.HdFlatteningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdFlatteningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdFlatteningSceneIndexRefPtr, rhs: pxr.HdFlatteningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdLegacyGeomSubsetSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdLegacyGeomSubsetSceneIndex, rhs: pxr.HdLegacyGeomSubsetSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdLegacyGeomSubsetSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdLegacyGeomSubsetSceneIndexRefPtr, rhs: pxr.HdLegacyGeomSubsetSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdMaterialFilteringSceneIndexBase: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdMaterialFilteringSceneIndexBase, rhs: pxr.HdMaterialFilteringSceneIndexBase) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdPrefixingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdPrefixingSceneIndex, rhs: pxr.HdPrefixingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdPrefixingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdPrefixingSceneIndexRefPtr, rhs: pxr.HdPrefixingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdRendererPluginRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdRendererPluginRegistry, rhs: pxr.HdRendererPluginRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSceneIndexPluginRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdSceneIndexPluginRegistry, rhs: pxr.HdSceneIndexPluginRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdGpGenerativeProceduralPluginRegistry: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdGpGenerativeProceduralPluginRegistry, rhs: pxr.HdGpGenerativeProceduralPluginRegistry) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdGpGenerativeProceduralFilteringSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdGpGenerativeProceduralFilteringSceneIndex, rhs: pxr.HdGpGenerativeProceduralFilteringSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdGpGenerativeProceduralFilteringSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdGpGenerativeProceduralFilteringSceneIndexRefPtr, rhs: pxr.HdGpGenerativeProceduralFilteringSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdGpGenerativeProceduralResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdGpGenerativeProceduralResolvingSceneIndex, rhs: pxr.HdGpGenerativeProceduralResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdGpGenerativeProceduralResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdGpGenerativeProceduralResolvingSceneIndexRefPtr, rhs: pxr.HdGpGenerativeProceduralResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiCoordSysPrimSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiCoordSysPrimSceneIndex, rhs: pxr.HdsiCoordSysPrimSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiCoordSysPrimSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiCoordSysPrimSceneIndexRefPtr, rhs: pxr.HdsiCoordSysPrimSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiDebuggingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiDebuggingSceneIndex, rhs: pxr.HdsiDebuggingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiDebuggingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiDebuggingSceneIndexRefPtr, rhs: pxr.HdsiDebuggingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiDomeLightCameraVisibilitySceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiDomeLightCameraVisibilitySceneIndex, rhs: pxr.HdsiDomeLightCameraVisibilitySceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiDomeLightCameraVisibilitySceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiDomeLightCameraVisibilitySceneIndexRefPtr, rhs: pxr.HdsiDomeLightCameraVisibilitySceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiExtComputationDependencySceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiExtComputationDependencySceneIndex, rhs: pxr.HdsiExtComputationDependencySceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiExtComputationDependencySceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiExtComputationDependencySceneIndexRefPtr, rhs: pxr.HdsiExtComputationDependencySceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSiExtComputationPrimvarPruningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdSiExtComputationPrimvarPruningSceneIndex, rhs: pxr.HdSiExtComputationPrimvarPruningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSiExtComputationPrimvarPruningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdSiExtComputationPrimvarPruningSceneIndexRefPtr, rhs: pxr.HdSiExtComputationPrimvarPruningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiImplicitSurfaceSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiImplicitSurfaceSceneIndex, rhs: pxr.HdsiImplicitSurfaceSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiImplicitSurfaceSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiImplicitSurfaceSceneIndexRefPtr, rhs: pxr.HdsiImplicitSurfaceSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiLegacyDisplayStyleOverrideSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiLegacyDisplayStyleOverrideSceneIndex, rhs: pxr.HdsiLegacyDisplayStyleOverrideSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr, rhs: pxr.HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiLightLinkingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiLightLinkingSceneIndex, rhs: pxr.HdsiLightLinkingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiLightLinkingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiLightLinkingSceneIndexRefPtr, rhs: pxr.HdsiLightLinkingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialBindingResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiMaterialBindingResolvingSceneIndex, rhs: pxr.HdsiMaterialBindingResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialBindingResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiMaterialBindingResolvingSceneIndexRefPtr, rhs: pxr.HdsiMaterialBindingResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialOverrideResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiMaterialOverrideResolvingSceneIndex, rhs: pxr.HdsiMaterialOverrideResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialOverrideResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiMaterialOverrideResolvingSceneIndexRefPtr, rhs: pxr.HdsiMaterialOverrideResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialPrimvarTransferSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiMaterialPrimvarTransferSceneIndex, rhs: pxr.HdsiMaterialPrimvarTransferSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiMaterialPrimvarTransferSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiMaterialPrimvarTransferSceneIndexRefPtr, rhs: pxr.HdsiMaterialPrimvarTransferSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSiNodeIdentifierResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdSiNodeIdentifierResolvingSceneIndex, rhs: pxr.HdSiNodeIdentifierResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdSiNodeIdentifierResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdSiNodeIdentifierResolvingSceneIndexRefPtr, rhs: pxr.HdSiNodeIdentifierResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiNurbsApproximatingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiNurbsApproximatingSceneIndex, rhs: pxr.HdsiNurbsApproximatingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiNurbsApproximatingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiNurbsApproximatingSceneIndexRefPtr, rhs: pxr.HdsiNurbsApproximatingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrefixPathPruningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPrefixPathPruningSceneIndex, rhs: pxr.HdsiPrefixPathPruningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrefixPathPruningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPrefixPathPruningSceneIndexRefPtr, rhs: pxr.HdsiPrefixPathPruningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPinnedCurveExpandingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPinnedCurveExpandingSceneIndex, rhs: pxr.HdsiPinnedCurveExpandingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPinnedCurveExpandingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPinnedCurveExpandingSceneIndexRefPtr, rhs: pxr.HdsiPinnedCurveExpandingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimManagingSceneIndexObserver: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPrimManagingSceneIndexObserver, rhs: pxr.HdsiPrimManagingSceneIndexObserver) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimManagingSceneIndexObserverRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPrimManagingSceneIndexObserverRefPtr, rhs: pxr.HdsiPrimManagingSceneIndexObserverRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypeAndPathPruningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPrimTypeAndPathPruningSceneIndex, rhs: pxr.HdsiPrimTypeAndPathPruningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypeAndPathPruningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPrimTypeAndPathPruningSceneIndexRefPtr, rhs: pxr.HdsiPrimTypeAndPathPruningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypeNoticeBatchingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPrimTypeNoticeBatchingSceneIndex, rhs: pxr.HdsiPrimTypeNoticeBatchingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypeNoticeBatchingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPrimTypeNoticeBatchingSceneIndexRefPtr, rhs: pxr.HdsiPrimTypeNoticeBatchingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypePruningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiPrimTypePruningSceneIndex, rhs: pxr.HdsiPrimTypePruningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiPrimTypePruningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiPrimTypePruningSceneIndexRefPtr, rhs: pxr.HdsiPrimTypePruningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiRenderSettingsFilteringSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiRenderSettingsFilteringSceneIndex, rhs: pxr.HdsiRenderSettingsFilteringSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiRenderSettingsFilteringSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiRenderSettingsFilteringSceneIndexRefPtr, rhs: pxr.HdsiRenderSettingsFilteringSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiSceneGlobalsSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiSceneGlobalsSceneIndex, rhs: pxr.HdsiSceneGlobalsSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiSceneGlobalsSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiSceneGlobalsSceneIndexRefPtr, rhs: pxr.HdsiSceneGlobalsSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiSwitchingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiSwitchingSceneIndex, rhs: pxr.HdsiSwitchingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiSwitchingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiSwitchingSceneIndexRefPtr, rhs: pxr.HdsiSwitchingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiTetMeshConversionSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiTetMeshConversionSceneIndex, rhs: pxr.HdsiTetMeshConversionSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiTetMeshConversionSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiTetMeshConversionSceneIndexRefPtr, rhs: pxr.HdsiTetMeshConversionSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiUnboundMaterialPruningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiUnboundMaterialPruningSceneIndex, rhs: pxr.HdsiUnboundMaterialPruningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiUnboundMaterialPruningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiUnboundMaterialPruningSceneIndexRefPtr, rhs: pxr.HdsiUnboundMaterialPruningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiVelocityMotionResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdsiVelocityMotionResolvingSceneIndex, rhs: pxr.HdsiVelocityMotionResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdsiVelocityMotionResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdsiVelocityMotionResolvingSceneIndexRefPtr, rhs: pxr.HdsiVelocityMotionResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdxPickHit: Comparable {} // foundBySwift
extension pxr.HdxTaskControllerSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.HdxTaskControllerSceneIndex, rhs: pxr.HdxTaskControllerSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.HdxTaskControllerSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.HdxTaskControllerSceneIndexRefPtr, rhs: pxr.HdxTaskControllerSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
extension pxr.UsdImagingDelegatePtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingDelegatePtr, rhs: pxr.UsdImagingDelegatePtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingDrawModeSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingDrawModeSceneIndexRefPtr, rhs: pxr.UsdImagingDrawModeSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingDrawModeSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingDrawModeSceneIndex, rhs: pxr.UsdImagingDrawModeSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingExtentResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingExtentResolvingSceneIndexRefPtr, rhs: pxr.UsdImagingExtentResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingExtentResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingExtentResolvingSceneIndex, rhs: pxr.UsdImagingExtentResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingStageSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingStageSceneIndexRefPtr, rhs: pxr.UsdImagingStageSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingStageSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingStageSceneIndex, rhs: pxr.UsdImagingStageSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingSelectionSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingSelectionSceneIndexRefPtr, rhs: pxr.UsdImagingSelectionSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingSelectionSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingSelectionSceneIndex, rhs: pxr.UsdImagingSelectionSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingMaterialBindingsResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingMaterialBindingsResolvingSceneIndexRefPtr, rhs: pxr.UsdImagingMaterialBindingsResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingMaterialBindingsResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingMaterialBindingsResolvingSceneIndex, rhs: pxr.UsdImagingMaterialBindingsResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingNiPrototypePropagatingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingNiPrototypePropagatingSceneIndexRefPtr, rhs: pxr.UsdImagingNiPrototypePropagatingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingNiPrototypePropagatingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingNiPrototypePropagatingSceneIndex, rhs: pxr.UsdImagingNiPrototypePropagatingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingPiPrototypePropagatingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingPiPrototypePropagatingSceneIndexRefPtr, rhs: pxr.UsdImagingPiPrototypePropagatingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingPiPrototypePropagatingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingPiPrototypePropagatingSceneIndex, rhs: pxr.UsdImagingPiPrototypePropagatingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRootOverridesSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingRootOverridesSceneIndexRefPtr, rhs: pxr.UsdImagingRootOverridesSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRootOverridesSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingRootOverridesSceneIndex, rhs: pxr.UsdImagingRootOverridesSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingUnloadedDrawModeSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingUnloadedDrawModeSceneIndexRefPtr, rhs: pxr.UsdImagingUnloadedDrawModeSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingUnloadedDrawModeSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingUnloadedDrawModeSceneIndex, rhs: pxr.UsdImagingUnloadedDrawModeSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRenderSettingsFlatteningSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingRenderSettingsFlatteningSceneIndexRefPtr, rhs: pxr.UsdImagingRenderSettingsFlatteningSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRenderSettingsFlatteningSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingRenderSettingsFlatteningSceneIndex, rhs: pxr.UsdImagingRenderSettingsFlatteningSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRerootingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdImagingRerootingSceneIndexRefPtr, rhs: pxr.UsdImagingRerootingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdImagingRerootingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdImagingRerootingSceneIndex, rhs: pxr.UsdImagingRerootingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdSkelImagingPointsResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdSkelImagingPointsResolvingSceneIndexRefPtr, rhs: pxr.UsdSkelImagingPointsResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdSkelImagingPointsResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdSkelImagingPointsResolvingSceneIndex, rhs: pxr.UsdSkelImagingPointsResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdSkelImagingSkeletonResolvingSceneIndexRefPtr: Comparable { // classTemplateSpecialization
    public static func <(lhs: pxr.UsdSkelImagingSkeletonResolvingSceneIndexRefPtr, rhs: pxr.UsdSkelImagingSkeletonResolvingSceneIndexRefPtr) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
extension pxr.UsdSkelImagingSkeletonResolvingSceneIndex: Comparable { // importedAsReference
    public static func <(lhs: pxr.UsdSkelImagingSkeletonResolvingSceneIndex, rhs: pxr.UsdSkelImagingSkeletonResolvingSceneIndex) -> Bool {
        __Overlay.operatorLess(lhs, rhs)
    }
}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
