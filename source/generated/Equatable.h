//
//  Equatable.h
//  swiftUsd
//
//  Created by Maddy Adams on 4/17/24.
//

// This file was generated by ast-answerer. Do not edit!
#ifndef SWIFTUSD_GENERATED_EQUATABLE_H
#define SWIFTUSD_GENERATED_EQUATABLE_H

#include "swiftUsd/defines.h"

#include "pxr/base/gf/bbox3d.h"
#include "pxr/base/gf/camera.h"
#include "pxr/base/gf/color.h"
#include "pxr/base/gf/colorSpace.h"
#include "pxr/base/gf/dualQuatd.h"
#include "pxr/base/gf/dualQuatf.h"
#include "pxr/base/gf/dualQuath.h"
#include "pxr/base/gf/frustum.h"
#include "pxr/base/gf/ilmbase_half.h"
#include "pxr/base/gf/interval.h"
#include "pxr/base/gf/line.h"
#include "pxr/base/gf/line2d.h"
#include "pxr/base/gf/lineSeg.h"
#include "pxr/base/gf/lineSeg2d.h"
#include "pxr/base/gf/matrix2d.h"
#include "pxr/base/gf/matrix2f.h"
#include "pxr/base/gf/matrix3d.h"
#include "pxr/base/gf/matrix3f.h"
#include "pxr/base/gf/matrix4d.h"
#include "pxr/base/gf/matrix4f.h"
#include "pxr/base/gf/multiInterval.h"
#include "pxr/base/gf/plane.h"
#include "pxr/base/gf/quatd.h"
#include "pxr/base/gf/quaternion.h"
#include "pxr/base/gf/quatf.h"
#include "pxr/base/gf/quath.h"
#include "pxr/base/gf/range1d.h"
#include "pxr/base/gf/range1f.h"
#include "pxr/base/gf/range2d.h"
#include "pxr/base/gf/range2f.h"
#include "pxr/base/gf/range3d.h"
#include "pxr/base/gf/range3f.h"
#include "pxr/base/gf/ray.h"
#include "pxr/base/gf/rect2i.h"
#include "pxr/base/gf/rotation.h"
#include "pxr/base/gf/size2.h"
#include "pxr/base/gf/size3.h"
#include "pxr/base/gf/transform.h"
#include "pxr/base/gf/vec2d.h"
#include "pxr/base/gf/vec2f.h"
#include "pxr/base/gf/vec2h.h"
#include "pxr/base/gf/vec2i.h"
#include "pxr/base/gf/vec3d.h"
#include "pxr/base/gf/vec3f.h"
#include "pxr/base/gf/vec3h.h"
#include "pxr/base/gf/vec3i.h"
#include "pxr/base/gf/vec4d.h"
#include "pxr/base/gf/vec4f.h"
#include "pxr/base/gf/vec4h.h"
#include "pxr/base/gf/vec4i.h"
#include "pxr/base/js/value.h"
#include "pxr/base/plug/notice.h"
#include "pxr/base/plug/plugin.h"
#include "pxr/base/plug/registry.h"
#include "pxr/base/tf/anyWeakPtr.h"
#include "pxr/base/tf/bits.h"
#include "pxr/base/tf/compressedBits.h"
#include "pxr/base/tf/diagnosticMgr.h"
#include "pxr/base/tf/enum.h"
#include "pxr/base/tf/hashmap.h"
#include "pxr/base/tf/hashset.h"
#include "pxr/base/tf/notice.h"
#include "pxr/base/tf/refBase.h"
#include "pxr/base/tf/refPtrTracker.h"
#include "pxr/base/tf/token.h"
#include "pxr/base/tf/type.h"
#include "pxr/base/tf/unicodeUtils.h"
#include "pxr/base/tf/weakPtr.h"
#include "pxr/base/trace/aggregateNode.h"
#include "pxr/base/trace/aggregateTree.h"
#include "pxr/base/trace/collector.h"
#include "pxr/base/trace/dynamicKey.h"
#include "pxr/base/trace/eventContainer.h"
#include "pxr/base/trace/eventNode.h"
#include "pxr/base/trace/eventTree.h"
#include "pxr/base/trace/key.h"
#include "pxr/base/trace/reporter.h"
#include "pxr/base/trace/reporterBase.h"
#include "pxr/base/trace/reporterDataSourceCollector.h"
#include "pxr/base/trace/staticKeyData.h"
#include "pxr/base/ts/knot.h"
#include "pxr/base/ts/knotMap.h"
#include "pxr/base/ts/spline.h"
#include "pxr/base/ts/types.h"
#include "pxr/base/vt/array.h"
#include "pxr/base/vt/dictionary.h"
#include "pxr/base/vt/types.h"
#include "pxr/base/vt/value.h"
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#include "pxr/imaging/cameraUtil/framing.h"
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT && defined(ARCH_OS_DARWIN)
#include "pxr/imaging/garch/glPlatformContextDarwin.h"
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT && defined(ARCH_OS_DARWIN)
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#include "pxr/imaging/garch/glPlatformDebugContext.h"
#include "pxr/imaging/glf/bindingMap.h"
#include "pxr/imaging/glf/contextCaps.h"
#include "pxr/imaging/glf/drawTarget.h"
#include "pxr/imaging/glf/simpleLight.h"
#include "pxr/imaging/glf/simpleLightingContext.h"
#include "pxr/imaging/glf/simpleMaterial.h"
#include "pxr/imaging/glf/simpleShadowArray.h"
#include "pxr/imaging/glf/texture.h"
#include "pxr/imaging/glf/uniformBlock.h"
#include "pxr/imaging/hd/aov.h"
#include "pxr/imaging/hd/basisCurvesTopology.h"
#include "pxr/imaging/hd/bufferSpec.h"
#include "pxr/imaging/hd/dataSourceLocator.h"
#include "pxr/imaging/hd/dependencyForwardingSceneIndex.h"
#include "pxr/imaging/hd/filteringSceneIndex.h"
#include "pxr/imaging/hd/flatteningSceneIndex.h"
#include "pxr/imaging/hd/geomSubset.h"
#include "pxr/imaging/hd/legacyGeomSubsetSceneIndex.h"
#include "pxr/imaging/hd/legacyPrimSceneIndex.h"
#include "pxr/imaging/hd/material.h"
#include "pxr/imaging/hd/materialFilteringSceneIndexBase.h"
#include "pxr/imaging/hd/mergingSceneIndex.h"
#include "pxr/imaging/hd/noticeBatchingSceneIndex.h"
#include "pxr/imaging/hd/perfLog.h"
#include "pxr/imaging/hd/prefixingSceneIndex.h"
#include "pxr/imaging/hd/primOriginSchema.h"
#include "pxr/imaging/hd/rendererPluginRegistry.h"
#include "pxr/imaging/hd/repr.h"
#include "pxr/imaging/hd/retainedSceneIndex.h"
#include "pxr/imaging/hd/rprimCollection.h"
#include "pxr/imaging/hd/sceneDelegate.h"
#include "pxr/imaging/hd/sceneIndex.h"
#include "pxr/imaging/hd/sceneIndexObserver.h"
#include "pxr/imaging/hd/sceneIndexPluginRegistry.h"
#include "pxr/imaging/hd/sceneIndexPrimView.h"
#include "pxr/imaging/hd/types.h"
#include "pxr/imaging/hdGp/generativeProceduralFilteringSceneIndex.h"
#include "pxr/imaging/hdGp/generativeProceduralPluginRegistry.h"
#include "pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h"
#include "pxr/imaging/hdSt/binding.h"
#include "pxr/imaging/hdSt/textureIdentifier.h"
#include "pxr/imaging/hdsi/coordSysPrimSceneIndex.h"
#include "pxr/imaging/hdsi/debuggingSceneIndex.h"
#include "pxr/imaging/hdsi/extComputationDependencySceneIndex.h"
#include "pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h"
#include "pxr/imaging/hdsi/implicitSurfaceSceneIndex.h"
#include "pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h"
#include "pxr/imaging/hdsi/lightLinkingSceneIndex.h"
#include "pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/materialOverrideResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h"
#include "pxr/imaging/hdsi/nodeIdentifierResolvingSceneIndex.h"
#include "pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h"
#include "pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h"
#include "pxr/imaging/hdsi/prefixPathPruningSceneIndex.h"
#include "pxr/imaging/hdsi/primManagingSceneIndexObserver.h"
#include "pxr/imaging/hdsi/primTypeAndPathPruningSceneIndex.h"
#include "pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h"
#include "pxr/imaging/hdsi/primTypePruningSceneIndex.h"
#include "pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h"
#include "pxr/imaging/hdsi/sceneGlobalsSceneIndex.h"
#include "pxr/imaging/hdsi/switchingSceneIndex.h"
#include "pxr/imaging/hdsi/tetMeshConversionSceneIndex.h"
#include "pxr/imaging/hdsi/velocityMotionResolvingSceneIndex.h"
#include "pxr/imaging/hdx/aovInputTask.h"
#include "pxr/imaging/hdx/boundingBoxTask.h"
#include "pxr/imaging/hdx/colorChannelTask.h"
#include "pxr/imaging/hdx/colorCorrectionTask.h"
#include "pxr/imaging/hdx/colorizeSelectionTask.h"
#include "pxr/imaging/hdx/drawTargetTask.h"
#include "pxr/imaging/hdx/oitResolveTask.h"
#include "pxr/imaging/hdx/pickFromRenderBufferTask.h"
#include "pxr/imaging/hdx/pickTask.h"
#include "pxr/imaging/hdx/presentTask.h"
#include "pxr/imaging/hdx/renderSetupTask.h"
#include "pxr/imaging/hdx/selectionTask.h"
#include "pxr/imaging/hdx/shadowTask.h"
#include "pxr/imaging/hdx/simpleLightTask.h"
#include "pxr/imaging/hdx/taskControllerSceneIndex.h"
#include "pxr/imaging/hdx/types.h"
#include "pxr/imaging/hdx/visualizeAovTask.h"
#include "pxr/imaging/hgi/attachmentDesc.h"
#include "pxr/imaging/hgi/buffer.h"
#include "pxr/imaging/hgi/computeCmdsDesc.h"
#include "pxr/imaging/hgi/computePipeline.h"
#include "pxr/imaging/hgi/graphicsCmdsDesc.h"
#include "pxr/imaging/hgi/graphicsPipeline.h"
#include "pxr/imaging/hgi/handle.h"
#include "pxr/imaging/hgi/resourceBindings.h"
#include "pxr/imaging/hgi/sampler.h"
#include "pxr/imaging/hgi/shaderFunction.h"
#include "pxr/imaging/hgi/shaderFunctionDesc.h"
#include "pxr/imaging/hgi/shaderProgram.h"
#include "pxr/imaging/hgi/texture.h"
#include "pxr/imaging/hgiGL/contextArena.h"
#include "pxr/imaging/hgiGL/hgi.h"
#include "pxr/imaging/hio/imageRegistry.h"
#include "pxr/imaging/pxOsd/meshTopology.h"
#include "pxr/imaging/pxOsd/subdivTags.h"
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#include "pxr/usd/ar/assetInfo.h"
#include "pxr/usd/ar/defaultResolverContext.h"
#include "pxr/usd/ar/resolvedPath.h"
#include "pxr/usd/ar/resolverContext.h"
#include "pxr/usd/ar/timestamp.h"
#include "pxr/usd/kind/registry.h"
#include "pxr/usd/ndr/declare.h"
#include "pxr/usd/ndr/discoveryPlugin.h"
#include "pxr/usd/ndr/sdfTypeIndicator.h"
#include "pxr/usd/pcp/dependency.h"
#include "pxr/usd/pcp/expressionVariables.h"
#include "pxr/usd/pcp/expressionVariablesSource.h"
#include "pxr/usd/pcp/instanceKey.h"
#include "pxr/usd/pcp/iterator.h"
#include "pxr/usd/pcp/layerStack.h"
#include "pxr/usd/pcp/layerStackIdentifier.h"
#include "pxr/usd/pcp/mapFunction.h"
#include "pxr/usd/pcp/node.h"
#include "pxr/usd/pcp/site.h"
#include "pxr/usd/sdf/abstractData.h"
#include "pxr/usd/sdf/allowed.h"
#include "pxr/usd/sdf/assetPath.h"
#include "pxr/usd/sdf/attributeSpec.h"
#include "pxr/usd/sdf/copyUtils.h"
#include "pxr/usd/sdf/data.h"
#include "pxr/usd/sdf/declareHandles.h"
#include "pxr/usd/sdf/fileFormat.h"
#include "pxr/usd/sdf/layer.h"
#include "pxr/usd/sdf/layerOffset.h"
#include "pxr/usd/sdf/layerStateDelegate.h"
#include "pxr/usd/sdf/layerTree.h"
#include "pxr/usd/sdf/listProxy.h"
#include "pxr/usd/sdf/mapEditProxy.h"
#include "pxr/usd/sdf/namespaceEdit.h"
#include "pxr/usd/sdf/opaqueValue.h"
#include "pxr/usd/sdf/path.h"
#include "pxr/usd/sdf/pathExpression.h"
#include "pxr/usd/sdf/pathPattern.h"
#include "pxr/usd/sdf/payload.h"
#include "pxr/usd/sdf/predicateExpression.h"
#include "pxr/usd/sdf/primSpec.h"
#include "pxr/usd/sdf/propertySpec.h"
#include "pxr/usd/sdf/proxyTypes.h"
#include "pxr/usd/sdf/pseudoRootSpec.h"
#include "pxr/usd/sdf/reference.h"
#include "pxr/usd/sdf/relationshipSpec.h"
#include "pxr/usd/sdf/schema.h"
#include "pxr/usd/sdf/site.h"
#include "pxr/usd/sdf/spec.h"
#include "pxr/usd/sdf/textFileFormat.h"
#include "pxr/usd/sdf/timeCode.h"
#include "pxr/usd/sdf/types.h"
#include "pxr/usd/sdf/valueTypeName.h"
#include "pxr/usd/sdf/variableExpression.h"
#include "pxr/usd/sdf/variantSetSpec.h"
#include "pxr/usd/sdf/variantSpec.h"
#include "pxr/usd/sdr/declare.h"
#include "pxr/usd/sdr/discoveryPlugin.h"
#include "pxr/usd/sdr/registry.h"
#include "pxr/usd/usd/attribute.h"
#include "pxr/usd/usd/common.h"
#include "pxr/usd/usd/editTarget.h"
#include "pxr/usd/usd/notice.h"
#include "pxr/usd/usd/object.h"
#include "pxr/usd/usd/prim.h"
#include "pxr/usd/usd/primRange.h"
#include "pxr/usd/usd/property.h"
#include "pxr/usd/usd/relationship.h"
#include "pxr/usd/usd/schemaRegistry.h"
#include "pxr/usd/usd/stage.h"
#include "pxr/usd/usd/stageCache.h"
#include "pxr/usd/usd/stageLoadRules.h"
#include "pxr/usd/usd/stagePopulationMask.h"
#include "pxr/usd/usd/timeCode.h"
#include "pxr/usd/usd/usdFileFormat.h"
#include "pxr/usd/usd/usdaFileFormat.h"
#include "pxr/usd/usd/usdcFileFormat.h"
#include "pxr/usd/usd/usdzFileFormat.h"
#include "pxr/usd/usd/zipFile.h"
#include "pxr/usd/usdGeom/imageable.h"
#include "pxr/usd/usdGeom/primvar.h"
#include "pxr/usd/usdGeom/xformOp.h"
#include "pxr/usd/usdHydra/discoveryPlugin.h"
#include "pxr/usd/usdShade/connectableAPI.h"
#include "pxr/usd/usdShade/input.h"
#include "pxr/usd/usdShade/output.h"
#include "pxr/usd/usdSkel/animMapper.h"
#include "pxr/usd/usdSkel/animQuery.h"
#include "pxr/usd/usdSkel/inbetweenShape.h"
#include "pxr/usd/usdSkel/skeletonQuery.h"
#include "pxr/usd/usdSkel/skinningQuery.h"
#include "pxr/usd/usdSkel/topology.h"
#include "pxr/usd/usdUtils/authoring.h"
#include "pxr/usd/usdUtils/timeCodeRange.h"
#include "pxr/usd/usdUtils/userProcessingFunc.h"
#if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
#include "pxr/usdImaging/usdImaging/delegate.h"
#include "pxr/usdImaging/usdImaging/drawModeSceneIndex.h"
#include "pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/materialBindingsResolvingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/primAdapter.h"
#include "pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h"
#include "pxr/usdImaging/usdImaging/rerootingSceneIndex.h"
#include "pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h"
#include "pxr/usdImaging/usdImaging/selectionSceneIndex.h"
#include "pxr/usdImaging/usdImaging/stageSceneIndex.h"
#include "pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h"
#include "pxr/usdImaging/usdImagingGL/renderParams.h"
#include "pxr/usdImaging/usdSkelImaging/pointsResolvingSceneIndex.h"
#include "pxr/usdImaging/usdSkelImaging/skeletonResolvingSceneIndex.h"
#endif // #if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT

namespace __Overlay {
  bool operatorEqualsEquals(const pxr::TfRefBase& l,
                            const pxr::TfRefBase& r);
  bool operatorEqualsEquals(const pxr::TfSimpleRefBase& l,
                            const pxr::TfSimpleRefBase& r);
  bool operatorEqualsEquals(const pxr::TfNotice::WeakProbePtr& l,
                            const pxr::TfNotice::WeakProbePtr& r);
  bool operatorEqualsEquals(const pxr::TfRefPtrTracker::WatchedCounts& l,
                            const pxr::TfRefPtrTracker::WatchedCounts& r);
  bool operatorEqualsEquals(const pxr::TfDiagnosticMgr& l,
                            const pxr::TfDiagnosticMgr& r);
  bool operatorEqualsEquals(const pxr::TfRefPtrTracker& l,
                            const pxr::TfRefPtrTracker& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateTree::CounterMap& l,
                            const pxr::TraceAggregateTree::CounterMap& r);
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::GlfBindingMap::BindingMap& l,
                            const pxr::GlfBindingMap::BindingMap& r);
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::TfToken::HashSet& l,
                            const pxr::TfToken::HashSet& r);
  bool operatorEqualsEquals(const pxr::pxr_half::half& l,
                            const pxr::pxr_half::half& r);
  bool operatorEqualsEquals(const pxr::GfRect2i& l,
                            const pxr::GfRect2i& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateTreeRefPtr& l,
                            const pxr::TraceAggregateTreeRefPtr& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateTree& l,
                            const pxr::TraceAggregateTree& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateNodeRefPtr& l,
                            const pxr::TraceAggregateNodeRefPtr& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateNodePtr& l,
                            const pxr::TraceAggregateNodePtr& r);
  bool operatorEqualsEquals(const pxr::TraceAggregateNode& l,
                            const pxr::TraceAggregateNode& r);
  bool operatorEqualsEquals(const pxr::TraceCollector& l,
                            const pxr::TraceCollector& r);
  bool operatorEqualsEquals(const pxr::TraceEventNodeRefPtr& l,
                            const pxr::TraceEventNodeRefPtr& r);
  bool operatorEqualsEquals(const pxr::TraceEventNode& l,
                            const pxr::TraceEventNode& r);
  bool operatorEqualsEquals(const pxr::TraceEventTreeRefPtr& l,
                            const pxr::TraceEventTreeRefPtr& r);
  bool operatorEqualsEquals(const pxr::TraceEventTree& l,
                            const pxr::TraceEventTree& r);
  bool operatorEqualsEquals(const pxr::TraceReporterRefPtr& l,
                            const pxr::TraceReporterRefPtr& r);
  bool operatorEqualsEquals(const pxr::TraceReporterPtr& l,
                            const pxr::TraceReporterPtr& r);
  bool operatorEqualsEquals(const pxr::TraceReporter& l,
                            const pxr::TraceReporter& r);
  bool operatorEqualsEquals(const pxr::TraceReporterBase& l,
                            const pxr::TraceReporterBase& r);
  bool operatorEqualsEquals(const pxr::TraceReporterDataSourceCollectorPtr& l,
                            const pxr::TraceReporterDataSourceCollectorPtr& r);
  bool operatorEqualsEquals(const pxr::PlugPluginPtr& l,
                            const pxr::PlugPluginPtr& r);
  bool operatorEqualsEquals(const pxr::PlugRegistry& l,
                            const pxr::PlugRegistry& r);
  bool operatorEqualsEquals(const pxr::VtDualQuatdArray& l,
                            const pxr::VtDualQuatdArray& r);
  bool operatorEqualsEquals(const pxr::VtDualQuatfArray& l,
                            const pxr::VtDualQuatfArray& r);
  bool operatorEqualsEquals(const pxr::VtDualQuathArray& l,
                            const pxr::VtDualQuathArray& r);
  bool operatorEqualsEquals(const pxr::VtHalfArray& l,
                            const pxr::VtHalfArray& r);
  bool operatorEqualsEquals(const pxr::VtIntervalArray& l,
                            const pxr::VtIntervalArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix2dArray& l,
                            const pxr::VtMatrix2dArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix2fArray& l,
                            const pxr::VtMatrix2fArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix3dArray& l,
                            const pxr::VtMatrix3dArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix3fArray& l,
                            const pxr::VtMatrix3fArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix4dArray& l,
                            const pxr::VtMatrix4dArray& r);
  bool operatorEqualsEquals(const pxr::VtMatrix4fArray& l,
                            const pxr::VtMatrix4fArray& r);
  bool operatorEqualsEquals(const pxr::VtQuatdArray& l,
                            const pxr::VtQuatdArray& r);
  bool operatorEqualsEquals(const pxr::VtQuaternionArray& l,
                            const pxr::VtQuaternionArray& r);
  bool operatorEqualsEquals(const pxr::VtQuatfArray& l,
                            const pxr::VtQuatfArray& r);
  bool operatorEqualsEquals(const pxr::VtQuathArray& l,
                            const pxr::VtQuathArray& r);
  bool operatorEqualsEquals(const pxr::VtRange1dArray& l,
                            const pxr::VtRange1dArray& r);
  bool operatorEqualsEquals(const pxr::VtRange1fArray& l,
                            const pxr::VtRange1fArray& r);
  bool operatorEqualsEquals(const pxr::VtRange2dArray& l,
                            const pxr::VtRange2dArray& r);
  bool operatorEqualsEquals(const pxr::VtRange2fArray& l,
                            const pxr::VtRange2fArray& r);
  bool operatorEqualsEquals(const pxr::VtRange3dArray& l,
                            const pxr::VtRange3dArray& r);
  bool operatorEqualsEquals(const pxr::VtRange3fArray& l,
                            const pxr::VtRange3fArray& r);
  bool operatorEqualsEquals(const pxr::VtRect2iArray& l,
                            const pxr::VtRect2iArray& r);
  bool operatorEqualsEquals(const pxr::VtVec2dArray& l,
                            const pxr::VtVec2dArray& r);
  bool operatorEqualsEquals(const pxr::VtVec2fArray& l,
                            const pxr::VtVec2fArray& r);
  bool operatorEqualsEquals(const pxr::VtVec2hArray& l,
                            const pxr::VtVec2hArray& r);
  bool operatorEqualsEquals(const pxr::VtVec2iArray& l,
                            const pxr::VtVec2iArray& r);
  bool operatorEqualsEquals(const pxr::VtVec3dArray& l,
                            const pxr::VtVec3dArray& r);
  bool operatorEqualsEquals(const pxr::VtVec3fArray& l,
                            const pxr::VtVec3fArray& r);
  bool operatorEqualsEquals(const pxr::VtVec3hArray& l,
                            const pxr::VtVec3hArray& r);
  bool operatorEqualsEquals(const pxr::VtVec3iArray& l,
                            const pxr::VtVec3iArray& r);
  bool operatorEqualsEquals(const pxr::VtVec4dArray& l,
                            const pxr::VtVec4dArray& r);
  bool operatorEqualsEquals(const pxr::VtVec4fArray& l,
                            const pxr::VtVec4fArray& r);
  bool operatorEqualsEquals(const pxr::VtVec4hArray& l,
                            const pxr::VtVec4hArray& r);
  bool operatorEqualsEquals(const pxr::VtVec4iArray& l,
                            const pxr::VtVec4iArray& r);
  bool operatorEqualsEquals(const pxr::VtTokenArray& l,
                            const pxr::VtTokenArray& r);
  bool operatorEqualsEquals(const pxr::VtBoolArray& l,
                            const pxr::VtBoolArray& r);
  bool operatorEqualsEquals(const pxr::VtCharArray& l,
                            const pxr::VtCharArray& r);
  bool operatorEqualsEquals(const pxr::VtDoubleArray& l,
                            const pxr::VtDoubleArray& r);
  bool operatorEqualsEquals(const pxr::VtFloatArray& l,
                            const pxr::VtFloatArray& r);
  bool operatorEqualsEquals(const pxr::VtInt64Array& l,
                            const pxr::VtInt64Array& r);
  bool operatorEqualsEquals(const pxr::VtIntArray& l,
                            const pxr::VtIntArray& r);
  bool operatorEqualsEquals(const pxr::VtShortArray& l,
                            const pxr::VtShortArray& r);
  bool operatorEqualsEquals(const pxr::VtStringArray& l,
                            const pxr::VtStringArray& r);
  bool operatorEqualsEquals(const pxr::VtUInt64Array& l,
                            const pxr::VtUInt64Array& r);
  bool operatorEqualsEquals(const pxr::VtUCharArray& l,
                            const pxr::VtUCharArray& r);
  bool operatorEqualsEquals(const pxr::VtUIntArray& l,
                            const pxr::VtUIntArray& r);
  bool operatorEqualsEquals(const pxr::VtUShortArray& l,
                            const pxr::VtUShortArray& r);
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::HdAovSettingsMap& l,
                            const pxr::HdAovSettingsMap& r);
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::VtDictionary::iterator& l,
                            const pxr::VtDictionary::iterator& r);
  bool operatorEqualsEquals(const pxr::VtDictionary::const_iterator& l,
                            const pxr::VtDictionary::const_iterator& r);
  bool operatorEqualsEquals(const pxr::ArTimestamp& l,
                            const pxr::ArTimestamp& r);
  bool operatorEqualsEquals(const pxr::KindRegistry& l,
                            const pxr::KindRegistry& r);
  bool operatorEqualsEquals(const pxr::SdfAbstractData& l,
                            const pxr::SdfAbstractData& r);
  bool operatorEqualsEquals(const pxr::SdfAbstractDataRefPtr& l,
                            const pxr::SdfAbstractDataRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfAbstractDataPtr& l,
                            const pxr::SdfAbstractDataPtr& r);
  bool operatorEqualsEquals(const pxr::UsdUtilsPathHashSet& l,
                            const pxr::UsdUtilsPathHashSet& r);
  bool operatorEqualsEquals(const pxr::SdfPathExpression& l,
                            const pxr::SdfPathExpression& r);
  bool operatorEqualsEquals(const pxr::SdfPathExpression::ExpressionReference& l,
                            const pxr::SdfPathExpression::ExpressionReference& r);
  bool operatorEqualsEquals(const pxr::SdfPathPattern& l,
                            const pxr::SdfPathPattern& r);
  bool operatorEqualsEquals(const pxr::SdfPathPattern::Component& l,
                            const pxr::SdfPathPattern::Component& r);
  bool operatorEqualsEquals(const pxr::SdfPredicateExpression& l,
                            const pxr::SdfPredicateExpression& r);
  bool operatorEqualsEquals(const pxr::SdfPredicateExpression::FnArg& l,
                            const pxr::SdfPredicateExpression::FnArg& r);
  bool operatorEqualsEquals(const pxr::SdfPredicateExpression::FnCall& l,
                            const pxr::SdfPredicateExpression::FnCall& r);
  bool operatorEqualsEquals(const pxr::SdfAttributeSpec& l,
                            const pxr::SdfAttributeSpec& r);
  bool operatorEqualsEquals(const pxr::SdfAttributeSpecHandle& l,
                            const pxr::SdfAttributeSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfPropertySpecHandle& l,
                            const pxr::SdfPropertySpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfPropertySpec& l,
                            const pxr::SdfPropertySpec& r);
  bool operatorEqualsEquals(const pxr::SdfSpecHandle& l,
                            const pxr::SdfSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfSchema& l,
                            const pxr::SdfSchema& r);
  bool operatorEqualsEquals(const pxr::SdfNameChildrenOrderProxy& l,
                            const pxr::SdfNameChildrenOrderProxy& r);
  bool operatorEqualsEquals(const pxr::SdfSubLayerProxy& l,
                            const pxr::SdfSubLayerProxy& r);
  bool operatorEqualsEquals(const pxr::SdfDictionaryProxy& l,
                            const pxr::SdfDictionaryProxy& r);
  bool operatorEqualsEquals(const pxr::SdfRelocatesMapProxy& l,
                            const pxr::SdfRelocatesMapProxy& r);
  bool operatorEqualsEquals(const pxr::SdfVariantSelectionProxy& l,
                            const pxr::SdfVariantSelectionProxy& r);
  bool operatorEqualsEquals(const pxr::SdfData& l,
                            const pxr::SdfData& r);
  bool operatorEqualsEquals(const pxr::SdfDataRefPtr& l,
                            const pxr::SdfDataRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfFileFormat& l,
                            const pxr::SdfFileFormat& r);
  bool operatorEqualsEquals(const pxr::SdfFileFormatRefPtr& l,
                            const pxr::SdfFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfLayer& l,
                            const pxr::SdfLayer& r);
  bool operatorEqualsEquals(const pxr::SdfLayerRefPtr& l,
                            const pxr::SdfLayerRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfLayerHandle& l,
                            const pxr::SdfLayerHandle& r);
  bool operatorEqualsEquals(const pxr::SdfLayerStateDelegateBase& l,
                            const pxr::SdfLayerStateDelegateBase& r);
  bool operatorEqualsEquals(const pxr::SdfLayerStateDelegateBaseRefPtr& l,
                            const pxr::SdfLayerStateDelegateBaseRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfLayerStateDelegateBasePtr& l,
                            const pxr::SdfLayerStateDelegateBasePtr& r);
  bool operatorEqualsEquals(const pxr::SdfSimpleLayerStateDelegate& l,
                            const pxr::SdfSimpleLayerStateDelegate& r);
  bool operatorEqualsEquals(const pxr::SdfSimpleLayerStateDelegateRefPtr& l,
                            const pxr::SdfSimpleLayerStateDelegateRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfLayerTree& l,
                            const pxr::SdfLayerTree& r);
  bool operatorEqualsEquals(const pxr::SdfLayerTreeHandle& l,
                            const pxr::SdfLayerTreeHandle& r);
  bool operatorEqualsEquals(const pxr::SdfPrimSpecHandle& l,
                            const pxr::SdfPrimSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfPrimSpec& l,
                            const pxr::SdfPrimSpec& r);
  bool operatorEqualsEquals(const pxr::SdfPseudoRootSpec& l,
                            const pxr::SdfPseudoRootSpec& r);
  bool operatorEqualsEquals(const pxr::SdfRelationshipSpecHandle& l,
                            const pxr::SdfRelationshipSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfRelationshipSpec& l,
                            const pxr::SdfRelationshipSpec& r);
  bool operatorEqualsEquals(const pxr::SdfTextFileFormat& l,
                            const pxr::SdfTextFileFormat& r);
  bool operatorEqualsEquals(const pxr::SdfTextFileFormatRefPtr& l,
                            const pxr::SdfTextFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdfVariantSetSpecHandle& l,
                            const pxr::SdfVariantSetSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfVariantSetSpec& l,
                            const pxr::SdfVariantSetSpec& r);
  bool operatorEqualsEquals(const pxr::SdfVariantSpecHandle& l,
                            const pxr::SdfVariantSpecHandle& r);
  bool operatorEqualsEquals(const pxr::SdfVariantSpec& l,
                            const pxr::SdfVariantSpec& r);
  bool operatorEqualsEquals(const pxr::NdrVersion& l,
                            const pxr::NdrVersion& r);
  bool operatorEqualsEquals(const pxr::NdrDiscoveryPluginContext& l,
                            const pxr::NdrDiscoveryPluginContext& r);
  bool operatorEqualsEquals(const pxr::NdrDiscoveryPlugin& l,
                            const pxr::NdrDiscoveryPlugin& r);
  bool operatorEqualsEquals(const pxr::NdrDiscoveryPluginRefPtr& l,
                            const pxr::NdrDiscoveryPluginRefPtr& r);
  bool operatorEqualsEquals(const pxr::SdrVersion& l,
                            const pxr::SdrVersion& r);
  bool operatorEqualsEquals(const pxr::SdrDiscoveryPluginContext& l,
                            const pxr::SdrDiscoveryPluginContext& r);
  bool operatorEqualsEquals(const pxr::SdrDiscoveryPlugin& l,
                            const pxr::SdrDiscoveryPlugin& r);
  bool operatorEqualsEquals(const pxr::SdrRegistry& l,
                            const pxr::SdrRegistry& r);
  bool operatorEqualsEquals(const pxr::PcpNodeReverseIterator& l,
                            const pxr::PcpNodeReverseIterator& r);
  bool operatorEqualsEquals(const pxr::PcpPrimReverseIterator& l,
                            const pxr::PcpPrimReverseIterator& r);
  bool operatorEqualsEquals(const pxr::PcpPropertyReverseIterator& l,
                            const pxr::PcpPropertyReverseIterator& r);
  bool operatorEqualsEquals(const pxr::PcpLayerStack& l,
                            const pxr::PcpLayerStack& r);
  bool operatorEqualsEquals(const pxr::PcpLayerStackRefPtr& l,
                            const pxr::PcpLayerStackRefPtr& r);
  bool operatorEqualsEquals(const pxr::PcpLayerStackPtr& l,
                            const pxr::PcpLayerStackPtr& r);
  bool operatorEqualsEquals(const pxr::UsdPrim& l,
                            const pxr::UsdPrim& r);
  bool operatorEqualsEquals(const pxr::UsdPrimSiblingRange& l,
                            const pxr::UsdPrimSiblingRange& r);
  bool operatorEqualsEquals(const pxr::UsdPrimSubtreeRange& l,
                            const pxr::UsdPrimSubtreeRange& r);
  bool operatorEqualsEquals(const pxr::UsdTimeCode& l,
                            const pxr::UsdTimeCode& r);
  bool operatorEqualsEquals(const pxr::UsdObject& l,
                            const pxr::UsdObject& r);
  bool operatorEqualsEquals(const pxr::UsdSchemaRegistry& l,
                            const pxr::UsdSchemaRegistry& r);
  bool operatorEqualsEquals(const pxr::UsdStageRefPtr& l,
                            const pxr::UsdStageRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdStagePtr& l,
                            const pxr::UsdStagePtr& r);
  bool operatorEqualsEquals(const pxr::UsdStage& l,
                            const pxr::UsdStage& r);
  bool operatorEqualsEquals(const pxr::UsdAttribute& l,
                            const pxr::UsdAttribute& r);
  bool operatorEqualsEquals(const pxr::UsdProperty& l,
                            const pxr::UsdProperty& r);
  bool operatorEqualsEquals(const pxr::UsdRelationship& l,
                            const pxr::UsdRelationship& r);
  bool operatorEqualsEquals(const pxr::UsdNotice::ObjectsChanged::PathRange::iterator& l,
                            const pxr::UsdNotice::ObjectsChanged::PathRange::iterator& r);
  bool operatorEqualsEquals(const pxr::UsdStageCache::Id& l,
                            const pxr::UsdStageCache::Id& r);
  bool operatorEqualsEquals(const pxr::UsdUsdFileFormatRefPtr& l,
                            const pxr::UsdUsdFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdUsdFileFormat& l,
                            const pxr::UsdUsdFileFormat& r);
  bool operatorEqualsEquals(const pxr::UsdUsdaFileFormatRefPtr& l,
                            const pxr::UsdUsdaFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdUsdaFileFormat& l,
                            const pxr::UsdUsdaFileFormat& r);
  bool operatorEqualsEquals(const pxr::UsdUsdcFileFormatRefPtr& l,
                            const pxr::UsdUsdcFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdUsdcFileFormat& l,
                            const pxr::UsdUsdcFileFormat& r);
  bool operatorEqualsEquals(const pxr::UsdUsdzFileFormatRefPtr& l,
                            const pxr::UsdUsdzFileFormatRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdUsdzFileFormat& l,
                            const pxr::UsdUsdzFileFormat& r);
  bool operatorEqualsEquals(const pxr::UsdGeomPrimvar& l,
                            const pxr::UsdGeomPrimvar& r);
  bool operatorEqualsEquals(const pxr::UsdGeomXformOp& l,
                            const pxr::UsdGeomXformOp& r);
  bool operatorEqualsEquals(const pxr::UsdShadeInput& l,
                            const pxr::UsdShadeInput& r);
  bool operatorEqualsEquals(const pxr::UsdShadeOutput& l,
                            const pxr::UsdShadeOutput& r);
  bool operatorEqualsEquals(const pxr::UsdHydraDiscoveryPlugin& l,
                            const pxr::UsdHydraDiscoveryPlugin& r);
  bool operatorEqualsEquals(const pxr::UsdSkelAnimQuery& l,
                            const pxr::UsdSkelAnimQuery& r);
  bool operatorEqualsEquals(const pxr::UsdSkelSkeletonQuery& l,
                            const pxr::UsdSkelSkeletonQuery& r);
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::GarchGLPlatformDebugContext& l,
                            const pxr::GarchGLPlatformDebugContext& r);
  bool operatorEqualsEquals(const pxr::GarchGLPlatformDebugContextRefPtr& l,
                            const pxr::GarchGLPlatformDebugContextRefPtr& r);
  bool operatorEqualsEquals(const pxr::HioImageRegistry& l,
                            const pxr::HioImageRegistry& r);
  bool operatorEqualsEquals(const pxr::GlfBindingMap& l,
                            const pxr::GlfBindingMap& r);
  bool operatorEqualsEquals(const pxr::GlfBindingMapPtr& l,
                            const pxr::GlfBindingMapPtr& r);
  bool operatorEqualsEquals(const pxr::GlfContextCaps& l,
                            const pxr::GlfContextCaps& r);
  bool operatorEqualsEquals(const pxr::GlfDrawTarget& l,
                            const pxr::GlfDrawTarget& r);
  bool operatorEqualsEquals(const pxr::GlfDrawTargetRefPtr& l,
                            const pxr::GlfDrawTargetRefPtr& r);
  bool operatorEqualsEquals(const pxr::GlfDrawTargetPtr& l,
                            const pxr::GlfDrawTargetPtr& r);
  bool operatorEqualsEquals(const pxr::GlfDrawTarget::AttachmentRefPtr& l,
                            const pxr::GlfDrawTarget::AttachmentRefPtr& r);
  bool operatorEqualsEquals(const pxr::GlfTexture& l,
                            const pxr::GlfTexture& r);
  bool operatorEqualsEquals(const pxr::GlfSimpleLightingContext& l,
                            const pxr::GlfSimpleLightingContext& r);
  bool operatorEqualsEquals(const pxr::GlfSimpleLightingContextRefPtr& l,
                            const pxr::GlfSimpleLightingContextRefPtr& r);
  bool operatorEqualsEquals(const pxr::GlfSimpleLightingContextPtr& l,
                            const pxr::GlfSimpleLightingContextPtr& r);
  bool operatorEqualsEquals(const pxr::GlfSimpleShadowArray& l,
                            const pxr::GlfSimpleShadowArray& r);
  bool operatorEqualsEquals(const pxr::GlfSimpleShadowArrayRefPtr& l,
                            const pxr::GlfSimpleShadowArrayRefPtr& r);
  bool operatorEqualsEquals(const pxr::GlfUniformBlock& l,
                            const pxr::GlfUniformBlock& r);
  bool operatorEqualsEquals(const pxr::GlfUniformBlockRefPtr& l,
                            const pxr::GlfUniformBlockRefPtr& r);
  bool operatorEqualsEquals(const pxr::HgiBufferHandle& l,
                            const pxr::HgiBufferHandle& r);
  bool operatorEqualsEquals(const pxr::HgiTextureHandle& l,
                            const pxr::HgiTextureHandle& r);
  bool operatorEqualsEquals(const pxr::HgiTextureViewHandle& l,
                            const pxr::HgiTextureViewHandle& r);
  bool operatorEqualsEquals(const pxr::HgiComputePipelineHandle& l,
                            const pxr::HgiComputePipelineHandle& r);
  bool operatorEqualsEquals(const pxr::HgiResourceBindingsHandle& l,
                            const pxr::HgiResourceBindingsHandle& r);
  bool operatorEqualsEquals(const pxr::HgiSamplerHandle& l,
                            const pxr::HgiSamplerHandle& r);
  bool operatorEqualsEquals(const pxr::HgiShaderProgramHandle& l,
                            const pxr::HgiShaderProgramHandle& r);
  bool operatorEqualsEquals(const pxr::HgiShaderFunctionHandle& l,
                            const pxr::HgiShaderFunctionHandle& r);
  bool operatorEqualsEquals(const pxr::HgiGraphicsPipelineHandle& l,
                            const pxr::HgiGraphicsPipelineHandle& r);
  bool operatorEqualsEquals(const pxr::HgiGLContextArenaHandle& l,
                            const pxr::HgiGLContextArenaHandle& r);
  bool operatorEqualsEquals(const pxr::HdPerfLog& l,
                            const pxr::HdPerfLog& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexBase& l,
                            const pxr::HdSceneIndexBase& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexBaseRefPtr& l,
                            const pxr::HdSceneIndexBaseRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexBasePtr& l,
                            const pxr::HdSceneIndexBasePtr& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexObserverPtr& l,
                            const pxr::HdSceneIndexObserverPtr& r);
  bool operatorEqualsEquals(const pxr::HdMergingSceneIndex& l,
                            const pxr::HdMergingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdMergingSceneIndexRefPtr& l,
                            const pxr::HdMergingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdFilteringSceneIndexBase& l,
                            const pxr::HdFilteringSceneIndexBase& r);
  bool operatorEqualsEquals(const pxr::HdFilteringSceneIndexBasePtr& l,
                            const pxr::HdFilteringSceneIndexBasePtr& r);
  bool operatorEqualsEquals(const pxr::HdSingleInputFilteringSceneIndexBase& l,
                            const pxr::HdSingleInputFilteringSceneIndexBase& r);
  bool operatorEqualsEquals(const pxr::HdLegacyPrimSceneIndex& l,
                            const pxr::HdLegacyPrimSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdLegacyPrimSceneIndexRefPtr& l,
                            const pxr::HdLegacyPrimSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdRetainedSceneIndex& l,
                            const pxr::HdRetainedSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdRetainedSceneIndexRefPtr& l,
                            const pxr::HdRetainedSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdNoticeBatchingSceneIndex& l,
                            const pxr::HdNoticeBatchingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdNoticeBatchingSceneIndexRefPtr& l,
                            const pxr::HdNoticeBatchingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdDependencyForwardingSceneIndex& l,
                            const pxr::HdDependencyForwardingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdDependencyForwardingSceneIndexRefPtr& l,
                            const pxr::HdDependencyForwardingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdFlatteningSceneIndex& l,
                            const pxr::HdFlatteningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdFlatteningSceneIndexRefPtr& l,
                            const pxr::HdFlatteningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdLegacyGeomSubsetSceneIndex& l,
                            const pxr::HdLegacyGeomSubsetSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdLegacyGeomSubsetSceneIndexRefPtr& l,
                            const pxr::HdLegacyGeomSubsetSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdMaterialFilteringSceneIndexBase& l,
                            const pxr::HdMaterialFilteringSceneIndexBase& r);
  bool operatorEqualsEquals(const pxr::HdPrefixingSceneIndex& l,
                            const pxr::HdPrefixingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdPrefixingSceneIndexRefPtr& l,
                            const pxr::HdPrefixingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdPrimOriginSchema::OriginPath& l,
                            const pxr::HdPrimOriginSchema::OriginPath& r);
  bool operatorEqualsEquals(const pxr::HdRendererPluginRegistry& l,
                            const pxr::HdRendererPluginRegistry& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexPluginRegistry& l,
                            const pxr::HdSceneIndexPluginRegistry& r);
  bool operatorEqualsEquals(const pxr::HdSceneIndexPrimView::const_iterator& l,
                            const pxr::HdSceneIndexPrimView::const_iterator& r);
  bool operatorEqualsEquals(const pxr::HdGpGenerativeProceduralPluginRegistry& l,
                            const pxr::HdGpGenerativeProceduralPluginRegistry& r);
  bool operatorEqualsEquals(const pxr::HdGpGenerativeProceduralFilteringSceneIndex& l,
                            const pxr::HdGpGenerativeProceduralFilteringSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdGpGenerativeProceduralFilteringSceneIndexRefPtr& l,
                            const pxr::HdGpGenerativeProceduralFilteringSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdGpGenerativeProceduralResolvingSceneIndex& l,
                            const pxr::HdGpGenerativeProceduralResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdGpGenerativeProceduralResolvingSceneIndexRefPtr& l,
                            const pxr::HdGpGenerativeProceduralResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiCoordSysPrimSceneIndex& l,
                            const pxr::HdsiCoordSysPrimSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiCoordSysPrimSceneIndexRefPtr& l,
                            const pxr::HdsiCoordSysPrimSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiDebuggingSceneIndex& l,
                            const pxr::HdsiDebuggingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiDebuggingSceneIndexRefPtr& l,
                            const pxr::HdsiDebuggingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiExtComputationDependencySceneIndex& l,
                            const pxr::HdsiExtComputationDependencySceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiExtComputationDependencySceneIndexRefPtr& l,
                            const pxr::HdsiExtComputationDependencySceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdSiExtComputationPrimvarPruningSceneIndex& l,
                            const pxr::HdSiExtComputationPrimvarPruningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdSiExtComputationPrimvarPruningSceneIndexRefPtr& l,
                            const pxr::HdSiExtComputationPrimvarPruningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiImplicitSurfaceSceneIndex& l,
                            const pxr::HdsiImplicitSurfaceSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiImplicitSurfaceSceneIndexRefPtr& l,
                            const pxr::HdsiImplicitSurfaceSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex& l,
                            const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr& l,
                            const pxr::HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiLightLinkingSceneIndex& l,
                            const pxr::HdsiLightLinkingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiLightLinkingSceneIndexRefPtr& l,
                            const pxr::HdsiLightLinkingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialBindingResolvingSceneIndex& l,
                            const pxr::HdsiMaterialBindingResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialBindingResolvingSceneIndexRefPtr& l,
                            const pxr::HdsiMaterialBindingResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialOverrideResolvingSceneIndex& l,
                            const pxr::HdsiMaterialOverrideResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialOverrideResolvingSceneIndexRefPtr& l,
                            const pxr::HdsiMaterialOverrideResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialPrimvarTransferSceneIndex& l,
                            const pxr::HdsiMaterialPrimvarTransferSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiMaterialPrimvarTransferSceneIndexRefPtr& l,
                            const pxr::HdsiMaterialPrimvarTransferSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdSiNodeIdentifierResolvingSceneIndex& l,
                            const pxr::HdSiNodeIdentifierResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdSiNodeIdentifierResolvingSceneIndexRefPtr& l,
                            const pxr::HdSiNodeIdentifierResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiNurbsApproximatingSceneIndex& l,
                            const pxr::HdsiNurbsApproximatingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiNurbsApproximatingSceneIndexRefPtr& l,
                            const pxr::HdsiNurbsApproximatingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPrefixPathPruningSceneIndex& l,
                            const pxr::HdsiPrefixPathPruningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiPrefixPathPruningSceneIndexRefPtr& l,
                            const pxr::HdsiPrefixPathPruningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPinnedCurveExpandingSceneIndex& l,
                            const pxr::HdsiPinnedCurveExpandingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiPinnedCurveExpandingSceneIndexRefPtr& l,
                            const pxr::HdsiPinnedCurveExpandingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimManagingSceneIndexObserver& l,
                            const pxr::HdsiPrimManagingSceneIndexObserver& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimManagingSceneIndexObserverRefPtr& l,
                            const pxr::HdsiPrimManagingSceneIndexObserverRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypeAndPathPruningSceneIndex& l,
                            const pxr::HdsiPrimTypeAndPathPruningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypeAndPathPruningSceneIndexRefPtr& l,
                            const pxr::HdsiPrimTypeAndPathPruningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypeNoticeBatchingSceneIndex& l,
                            const pxr::HdsiPrimTypeNoticeBatchingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypeNoticeBatchingSceneIndexRefPtr& l,
                            const pxr::HdsiPrimTypeNoticeBatchingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypePruningSceneIndex& l,
                            const pxr::HdsiPrimTypePruningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiPrimTypePruningSceneIndexRefPtr& l,
                            const pxr::HdsiPrimTypePruningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiRenderSettingsFilteringSceneIndex& l,
                            const pxr::HdsiRenderSettingsFilteringSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiRenderSettingsFilteringSceneIndexRefPtr& l,
                            const pxr::HdsiRenderSettingsFilteringSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiSceneGlobalsSceneIndex& l,
                            const pxr::HdsiSceneGlobalsSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiSceneGlobalsSceneIndexRefPtr& l,
                            const pxr::HdsiSceneGlobalsSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiSwitchingSceneIndex& l,
                            const pxr::HdsiSwitchingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiSwitchingSceneIndexRefPtr& l,
                            const pxr::HdsiSwitchingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiTetMeshConversionSceneIndex& l,
                            const pxr::HdsiTetMeshConversionSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiTetMeshConversionSceneIndexRefPtr& l,
                            const pxr::HdsiTetMeshConversionSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdsiVelocityMotionResolvingSceneIndex& l,
                            const pxr::HdsiVelocityMotionResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdsiVelocityMotionResolvingSceneIndexRefPtr& l,
                            const pxr::HdsiVelocityMotionResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::HdxTaskControllerSceneIndex& l,
                            const pxr::HdxTaskControllerSceneIndex& r);
  bool operatorEqualsEquals(const pxr::HdxTaskControllerSceneIndexRefPtr& l,
                            const pxr::HdxTaskControllerSceneIndexRefPtr& r);
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
  bool operatorEqualsEquals(const pxr::UsdImagingDelegatePtr& l,
                            const pxr::UsdImagingDelegatePtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingDrawModeSceneIndexRefPtr& l,
                            const pxr::UsdImagingDrawModeSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingDrawModeSceneIndex& l,
                            const pxr::UsdImagingDrawModeSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingExtentResolvingSceneIndexRefPtr& l,
                            const pxr::UsdImagingExtentResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingExtentResolvingSceneIndex& l,
                            const pxr::UsdImagingExtentResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingStageSceneIndexRefPtr& l,
                            const pxr::UsdImagingStageSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingStageSceneIndex& l,
                            const pxr::UsdImagingStageSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingSelectionSceneIndexRefPtr& l,
                            const pxr::UsdImagingSelectionSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingSelectionSceneIndex& l,
                            const pxr::UsdImagingSelectionSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingMaterialBindingsResolvingSceneIndexRefPtr& l,
                            const pxr::UsdImagingMaterialBindingsResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingMaterialBindingsResolvingSceneIndex& l,
                            const pxr::UsdImagingMaterialBindingsResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingNiPrototypePropagatingSceneIndexRefPtr& l,
                            const pxr::UsdImagingNiPrototypePropagatingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingNiPrototypePropagatingSceneIndex& l,
                            const pxr::UsdImagingNiPrototypePropagatingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingPiPrototypePropagatingSceneIndexRefPtr& l,
                            const pxr::UsdImagingPiPrototypePropagatingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingPiPrototypePropagatingSceneIndex& l,
                            const pxr::UsdImagingPiPrototypePropagatingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRootOverridesSceneIndexRefPtr& l,
                            const pxr::UsdImagingRootOverridesSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRootOverridesSceneIndex& l,
                            const pxr::UsdImagingRootOverridesSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingUnloadedDrawModeSceneIndexRefPtr& l,
                            const pxr::UsdImagingUnloadedDrawModeSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingUnloadedDrawModeSceneIndex& l,
                            const pxr::UsdImagingUnloadedDrawModeSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRenderSettingsFlatteningSceneIndexRefPtr& l,
                            const pxr::UsdImagingRenderSettingsFlatteningSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRenderSettingsFlatteningSceneIndex& l,
                            const pxr::UsdImagingRenderSettingsFlatteningSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRerootingSceneIndexRefPtr& l,
                            const pxr::UsdImagingRerootingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdImagingRerootingSceneIndex& l,
                            const pxr::UsdImagingRerootingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdImagingGLRenderParams& l,
                            const pxr::UsdImagingGLRenderParams& r);
  bool operatorEqualsEquals(const pxr::UsdSkelImagingPointsResolvingSceneIndexRefPtr& l,
                            const pxr::UsdSkelImagingPointsResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdSkelImagingPointsResolvingSceneIndex& l,
                            const pxr::UsdSkelImagingPointsResolvingSceneIndex& r);
  bool operatorEqualsEquals(const pxr::UsdSkelImagingSkeletonResolvingSceneIndexRefPtr& l,
                            const pxr::UsdSkelImagingSkeletonResolvingSceneIndexRefPtr& r);
  bool operatorEqualsEquals(const pxr::UsdSkelImagingSkeletonResolvingSceneIndex& l,
                            const pxr::UsdSkelImagingSkeletonResolvingSceneIndex& r);
#endif // #if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
}
#endif /* SWIFTUSD_GENERATED_EQUATABLE_H */
