//
//  ReferenceTypeConformances.cpp
//  swiftUsd
//
//  Created by Maddy Adams on 4/17/24.
//

// This file was generated by ast-answerer. Do not edit!
#include "swiftUsd/generated/ReferenceTypeConformances.h"


void* _Nonnull _address(pxr::TfRefBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefBase * _Nullable _fromRawPointer__ZN3pxr9TfRefBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TfRefBase>(p);
}

void* _Nonnull _address(pxr::TfSimpleRefBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TfSimpleRefBase> _asRefPtrType(pxr::TfSimpleRefBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TfSimpleRefBase>(x);
}
pxr::TfSimpleRefBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TfSimpleRefBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TfSimpleRefBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TfSimpleRefBase>& x) {
    if (!x) { return nullptr; }
    pxr::TfSimpleRefBase* result = const_cast<pxr::TfSimpleRefBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfSimpleRefBase * _Nullable _fromRawPointer__ZN3pxr15TfSimpleRefBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TfSimpleRefBase>(p);
}
pxr::TfRefPtr<pxr::TfSimpleRefBase>_nullRefPtr__ZN3pxr15TfSimpleRefBaseE() {
    return pxr::TfRefPtr<pxr::TfSimpleRefBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TfSimpleRefBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TfSimpleRefBase> & p) {
    return (bool)p;
}

void* _Nonnull _address(pxr::TfDiagnosticMgr* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::TfDiagnosticMgr> _asWeakPtrType(pxr::TfDiagnosticMgr* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TfDiagnosticMgr>(x);
}
pxr::TfDiagnosticMgr * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TfDiagnosticMgr>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::TfDiagnosticMgr * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr15TfDiagnosticMgrE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::TfDiagnosticMgr *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TfDiagnosticMgr>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TfDiagnosticMgr>_fromAnyWeakPtr__ZN3pxr15TfDiagnosticMgrE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TfDiagnosticMgr>(nullptr); }
    pxr::TfDiagnosticMgr* rawPtr = static_cast<pxr::TfDiagnosticMgr*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TfDiagnosticMgr>(rawPtr);
}
pxr::TfWeakPtr<pxr::TfDiagnosticMgr>_nullWeakPtr__ZN3pxr15TfDiagnosticMgrE() {
    return pxr::TfWeakPtr<pxr::TfDiagnosticMgr>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TfDiagnosticMgr> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TfDiagnosticMgr> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TfRefPtrTracker* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::TfRefPtrTracker> _asWeakPtrType(pxr::TfRefPtrTracker* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TfRefPtrTracker>(x);
}
pxr::TfRefPtrTracker * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TfRefPtrTracker>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::TfRefPtrTracker * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr15TfRefPtrTrackerE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::TfRefPtrTracker *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TfRefPtrTracker>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TfRefPtrTracker>_fromAnyWeakPtr__ZN3pxr15TfRefPtrTrackerE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TfRefPtrTracker>(nullptr); }
    pxr::TfRefPtrTracker* rawPtr = static_cast<pxr::TfRefPtrTracker*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TfRefPtrTracker>(rawPtr);
}
pxr::TfWeakPtr<pxr::TfRefPtrTracker>_nullWeakPtr__ZN3pxr15TfRefPtrTrackerE() {
    return pxr::TfWeakPtr<pxr::TfRefPtrTracker>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TfRefPtrTracker> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TfRefPtrTracker> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceAggregateTree* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceAggregateTree> _asRefPtrType(pxr::TraceAggregateTree* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceAggregateTree>(x);
}
pxr::TraceAggregateTree * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceAggregateTree>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceAggregateTree * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceAggregateTree>& x) {
    if (!x) { return nullptr; }
    pxr::TraceAggregateTree* result = const_cast<pxr::TraceAggregateTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceAggregateTree * _Nullable _fromRawPointer__ZN3pxr18TraceAggregateTreeE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceAggregateTree>(p);
}
pxr::TfRefPtr<pxr::TraceAggregateTree>_nullRefPtr__ZN3pxr18TraceAggregateTreeE() {
    return pxr::TfRefPtr<pxr::TraceAggregateTree>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceAggregateTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceAggregateTree> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::TraceAggregateTree> _asWeakPtrType(pxr::TraceAggregateTree* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceAggregateTree>(x);
}
pxr::TraceAggregateTree * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceAggregateTree>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::TraceAggregateTree>(x));
}
pxr::TraceAggregateTree * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::TraceAggregateTree> & x) {
    if (!x) { return nullptr; }
    pxr::TraceAggregateTree * result = const_cast<pxr::TraceAggregateTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceAggregateTree>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceAggregateTree>_fromAnyWeakPtr__ZN3pxr18TraceAggregateTreeE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceAggregateTree>(nullptr); }
    pxr::TraceAggregateTree* rawPtr = static_cast<pxr::TraceAggregateTree*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceAggregateTree>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceAggregateTree>_nullWeakPtr__ZN3pxr18TraceAggregateTreeE() {
    return pxr::TfWeakPtr<pxr::TraceAggregateTree>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceAggregateTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceAggregateTree> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceAggregateNode* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceAggregateNode> _asRefPtrType(pxr::TraceAggregateNode* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceAggregateNode>(x);
}
pxr::TraceAggregateNode * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceAggregateNode>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceAggregateNode * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceAggregateNode>& x) {
    if (!x) { return nullptr; }
    pxr::TraceAggregateNode* result = const_cast<pxr::TraceAggregateNode *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceAggregateNode * _Nullable _fromRawPointer__ZN3pxr18TraceAggregateNodeE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceAggregateNode>(p);
}
pxr::TfRefPtr<pxr::TraceAggregateNode>_nullRefPtr__ZN3pxr18TraceAggregateNodeE() {
    return pxr::TfRefPtr<pxr::TraceAggregateNode>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceAggregateNode> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceAggregateNode> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::TraceAggregateNode> _asWeakPtrType(pxr::TraceAggregateNode* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceAggregateNode>(x);
}
pxr::TraceAggregateNode * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceAggregateNode>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::TraceAggregateNode>(x));
}
pxr::TraceAggregateNode * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::TraceAggregateNode> & x) {
    if (!x) { return nullptr; }
    pxr::TraceAggregateNode * result = const_cast<pxr::TraceAggregateNode *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceAggregateNode>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceAggregateNode>_fromAnyWeakPtr__ZN3pxr18TraceAggregateNodeE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceAggregateNode>(nullptr); }
    pxr::TraceAggregateNode* rawPtr = static_cast<pxr::TraceAggregateNode*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceAggregateNode>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceAggregateNode>_nullWeakPtr__ZN3pxr18TraceAggregateNodeE() {
    return pxr::TfWeakPtr<pxr::TraceAggregateNode>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceAggregateNode> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceAggregateNode> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceCollector* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::TraceCollector> _asWeakPtrType(pxr::TraceCollector* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceCollector>(x);
}
pxr::TraceCollector * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceCollector>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::TraceCollector * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr14TraceCollectorE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::TraceCollector *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceCollector>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceCollector>_fromAnyWeakPtr__ZN3pxr14TraceCollectorE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceCollector>(nullptr); }
    pxr::TraceCollector* rawPtr = static_cast<pxr::TraceCollector*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceCollector>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceCollector>_nullWeakPtr__ZN3pxr14TraceCollectorE() {
    return pxr::TfWeakPtr<pxr::TraceCollector>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceCollector> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceCollector> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceEventNode* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceEventNode> _asRefPtrType(pxr::TraceEventNode* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceEventNode>(x);
}
pxr::TraceEventNode * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceEventNode>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceEventNode * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceEventNode>& x) {
    if (!x) { return nullptr; }
    pxr::TraceEventNode* result = const_cast<pxr::TraceEventNode *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceEventNode * _Nullable _fromRawPointer__ZN3pxr14TraceEventNodeE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceEventNode>(p);
}
pxr::TfRefPtr<pxr::TraceEventNode>_nullRefPtr__ZN3pxr14TraceEventNodeE() {
    return pxr::TfRefPtr<pxr::TraceEventNode>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceEventNode> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceEventNode> & p) {
    return (bool)p;
}

void* _Nonnull _address(pxr::TraceEventTree* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceEventTree> _asRefPtrType(pxr::TraceEventTree* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceEventTree>(x);
}
pxr::TraceEventTree * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceEventTree>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceEventTree * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceEventTree>& x) {
    if (!x) { return nullptr; }
    pxr::TraceEventTree* result = const_cast<pxr::TraceEventTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceEventTree * _Nullable _fromRawPointer__ZN3pxr14TraceEventTreeE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceEventTree>(p);
}
pxr::TfRefPtr<pxr::TraceEventTree>_nullRefPtr__ZN3pxr14TraceEventTreeE() {
    return pxr::TfRefPtr<pxr::TraceEventTree>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceEventTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceEventTree> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::TraceEventTree> _asWeakPtrType(pxr::TraceEventTree* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceEventTree>(x);
}
pxr::TraceEventTree * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceEventTree>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::TraceEventTree>(x));
}
pxr::TraceEventTree * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::TraceEventTree> & x) {
    if (!x) { return nullptr; }
    pxr::TraceEventTree * result = const_cast<pxr::TraceEventTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceEventTree>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceEventTree>_fromAnyWeakPtr__ZN3pxr14TraceEventTreeE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceEventTree>(nullptr); }
    pxr::TraceEventTree* rawPtr = static_cast<pxr::TraceEventTree*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceEventTree>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceEventTree>_nullWeakPtr__ZN3pxr14TraceEventTreeE() {
    return pxr::TfWeakPtr<pxr::TraceEventTree>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceEventTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceEventTree> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceReporter* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceReporter> _asRefPtrType(pxr::TraceReporter* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceReporter>(x);
}
pxr::TraceReporter * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceReporter>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceReporter * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceReporter>& x) {
    if (!x) { return nullptr; }
    pxr::TraceReporter* result = const_cast<pxr::TraceReporter *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceReporter * _Nullable _fromRawPointer__ZN3pxr13TraceReporterE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceReporter>(p);
}
pxr::TfRefPtr<pxr::TraceReporter>_nullRefPtr__ZN3pxr13TraceReporterE() {
    return pxr::TfRefPtr<pxr::TraceReporter>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceReporter> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceReporter> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::TraceReporter> _asWeakPtrType(pxr::TraceReporter* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceReporter>(x);
}
pxr::TraceReporter * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceReporter>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::TraceReporter>(x));
}
pxr::TraceReporter * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::TraceReporter> & x) {
    if (!x) { return nullptr; }
    pxr::TraceReporter * result = const_cast<pxr::TraceReporter *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceReporter>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceReporter>_fromAnyWeakPtr__ZN3pxr13TraceReporterE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceReporter>(nullptr); }
    pxr::TraceReporter* rawPtr = static_cast<pxr::TraceReporter*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceReporter>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceReporter>_nullWeakPtr__ZN3pxr13TraceReporterE() {
    return pxr::TfWeakPtr<pxr::TraceReporter>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceReporter> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceReporter> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::TraceReporterBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::TraceReporterBase> _asRefPtrType(pxr::TraceReporterBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::TraceReporterBase>(x);
}
pxr::TraceReporterBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::TraceReporterBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::TraceReporterBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::TraceReporterBase>& x) {
    if (!x) { return nullptr; }
    pxr::TraceReporterBase* result = const_cast<pxr::TraceReporterBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TraceReporterBase * _Nullable _fromRawPointer__ZN3pxr17TraceReporterBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::TraceReporterBase>(p);
}
pxr::TfRefPtr<pxr::TraceReporterBase>_nullRefPtr__ZN3pxr17TraceReporterBaseE() {
    return pxr::TfRefPtr<pxr::TraceReporterBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::TraceReporterBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::TraceReporterBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::TraceReporterBase> _asWeakPtrType(pxr::TraceReporterBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::TraceReporterBase>(x);
}
pxr::TraceReporterBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::TraceReporterBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::TraceReporterBase>(x));
}
pxr::TraceReporterBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::TraceReporterBase> & x) {
    if (!x) { return nullptr; }
    pxr::TraceReporterBase * result = const_cast<pxr::TraceReporterBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::TraceReporterBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::TraceReporterBase>_fromAnyWeakPtr__ZN3pxr17TraceReporterBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::TraceReporterBase>(nullptr); }
    pxr::TraceReporterBase* rawPtr = static_cast<pxr::TraceReporterBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::TraceReporterBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::TraceReporterBase>_nullWeakPtr__ZN3pxr17TraceReporterBaseE() {
    return pxr::TfWeakPtr<pxr::TraceReporterBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::TraceReporterBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::TraceReporterBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::PlugRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::PlugRegistry> _asWeakPtrType(pxr::PlugRegistry* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::PlugRegistry>(x);
}
pxr::PlugRegistry * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::PlugRegistry>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::PlugRegistry * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr12PlugRegistryE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::PlugRegistry *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::PlugRegistry>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::PlugRegistry>_fromAnyWeakPtr__ZN3pxr12PlugRegistryE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::PlugRegistry>(nullptr); }
    pxr::PlugRegistry* rawPtr = static_cast<pxr::PlugRegistry*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::PlugRegistry>(rawPtr);
}
pxr::TfWeakPtr<pxr::PlugRegistry>_nullWeakPtr__ZN3pxr12PlugRegistryE() {
    return pxr::TfWeakPtr<pxr::PlugRegistry>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::PlugRegistry> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::PlugRegistry> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::KindRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::KindRegistry> _asWeakPtrType(pxr::KindRegistry* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::KindRegistry>(x);
}
pxr::KindRegistry * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::KindRegistry>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::KindRegistry * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr12KindRegistryE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::KindRegistry *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::KindRegistry>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::KindRegistry>_fromAnyWeakPtr__ZN3pxr12KindRegistryE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::KindRegistry>(nullptr); }
    pxr::KindRegistry* rawPtr = static_cast<pxr::KindRegistry*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::KindRegistry>(rawPtr);
}
pxr::TfWeakPtr<pxr::KindRegistry>_nullWeakPtr__ZN3pxr12KindRegistryE() {
    return pxr::TfWeakPtr<pxr::KindRegistry>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::KindRegistry> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::KindRegistry> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfAbstractData* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfAbstractData> _asRefPtrType(pxr::SdfAbstractData* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfAbstractData>(x);
}
pxr::SdfAbstractData * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfAbstractData>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfAbstractData * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfAbstractData>& x) {
    if (!x) { return nullptr; }
    pxr::SdfAbstractData* result = const_cast<pxr::SdfAbstractData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfAbstractData * _Nullable _fromRawPointer__ZN3pxr15SdfAbstractDataE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfAbstractData>(p);
}
pxr::TfRefPtr<pxr::SdfAbstractData>_nullRefPtr__ZN3pxr15SdfAbstractDataE() {
    return pxr::TfRefPtr<pxr::SdfAbstractData>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfAbstractData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfAbstractData> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfAbstractData> _asWeakPtrType(pxr::SdfAbstractData* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfAbstractData>(x);
}
pxr::SdfAbstractData * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfAbstractData>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfAbstractData>(x));
}
pxr::SdfAbstractData * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfAbstractData> & x) {
    if (!x) { return nullptr; }
    pxr::SdfAbstractData * result = const_cast<pxr::SdfAbstractData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfAbstractData>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfAbstractData>_fromAnyWeakPtr__ZN3pxr15SdfAbstractDataE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfAbstractData>(nullptr); }
    pxr::SdfAbstractData* rawPtr = static_cast<pxr::SdfAbstractData*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfAbstractData>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfAbstractData>_nullWeakPtr__ZN3pxr15SdfAbstractDataE() {
    return pxr::TfWeakPtr<pxr::SdfAbstractData>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfAbstractData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfAbstractData> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfSchema* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::SdfSchema> _asWeakPtrType(pxr::SdfSchema* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfSchema>(x);
}
pxr::SdfSchema * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfSchema>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::SdfSchema * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr9SdfSchemaE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::SdfSchema *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfSchema>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfSchema>_fromAnyWeakPtr__ZN3pxr9SdfSchemaE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfSchema>(nullptr); }
    pxr::SdfSchema* rawPtr = static_cast<pxr::SdfSchema*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfSchema>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfSchema>_nullWeakPtr__ZN3pxr9SdfSchemaE() {
    return pxr::TfWeakPtr<pxr::SdfSchema>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfSchema> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfSchema> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfData* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfData> _asRefPtrType(pxr::SdfData* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfData>(x);
}
pxr::SdfData * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfData>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfData * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfData>& x) {
    if (!x) { return nullptr; }
    pxr::SdfData* result = const_cast<pxr::SdfData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfData * _Nullable _fromRawPointer__ZN3pxr7SdfDataE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfData>(p);
}
pxr::TfRefPtr<pxr::SdfData>_nullRefPtr__ZN3pxr7SdfDataE() {
    return pxr::TfRefPtr<pxr::SdfData>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfData> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfData> _asWeakPtrType(pxr::SdfData* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfData>(x);
}
pxr::SdfData * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfData>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfData>(x));
}
pxr::SdfData * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfData> & x) {
    if (!x) { return nullptr; }
    pxr::SdfData * result = const_cast<pxr::SdfData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfData>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfData>_fromAnyWeakPtr__ZN3pxr7SdfDataE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfData>(nullptr); }
    pxr::SdfData* rawPtr = static_cast<pxr::SdfData*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfData>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfData>_nullWeakPtr__ZN3pxr7SdfDataE() {
    return pxr::TfWeakPtr<pxr::SdfData>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfData> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfFileFormat> _asRefPtrType(pxr::SdfFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfFileFormat>(x);
}
pxr::SdfFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfFileFormat* result = const_cast<pxr::SdfFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfFileFormat * _Nullable _fromRawPointer__ZN3pxr13SdfFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfFileFormat>_nullRefPtr__ZN3pxr13SdfFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfFileFormat> _asWeakPtrType(pxr::SdfFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfFileFormat>(x);
}
pxr::SdfFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfFileFormat>(x));
}
pxr::SdfFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfFileFormat * result = const_cast<pxr::SdfFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfFileFormat>_fromAnyWeakPtr__ZN3pxr13SdfFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfFileFormat>(nullptr); }
    pxr::SdfFileFormat* rawPtr = static_cast<pxr::SdfFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfFileFormat>_nullWeakPtr__ZN3pxr13SdfFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfLayer* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfLayer> _asRefPtrType(pxr::SdfLayer* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfLayer>(x);
}
pxr::SdfLayer * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfLayer>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfLayer * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfLayer>& x) {
    if (!x) { return nullptr; }
    pxr::SdfLayer* result = const_cast<pxr::SdfLayer *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfLayer * _Nullable _fromRawPointer__ZN3pxr8SdfLayerE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfLayer>(p);
}
pxr::TfRefPtr<pxr::SdfLayer>_nullRefPtr__ZN3pxr8SdfLayerE() {
    return pxr::TfRefPtr<pxr::SdfLayer>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfLayer> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfLayer> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfLayer> _asWeakPtrType(pxr::SdfLayer* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfLayer>(x);
}
pxr::SdfLayer * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfLayer>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfLayer>(x));
}
pxr::SdfLayer * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfLayer> & x) {
    if (!x) { return nullptr; }
    pxr::SdfLayer * result = const_cast<pxr::SdfLayer *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfLayer>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfLayer>_fromAnyWeakPtr__ZN3pxr8SdfLayerE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfLayer>(nullptr); }
    pxr::SdfLayer* rawPtr = static_cast<pxr::SdfLayer*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfLayer>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfLayer>_nullWeakPtr__ZN3pxr8SdfLayerE() {
    return pxr::TfWeakPtr<pxr::SdfLayer>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfLayer> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfLayer> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfLayerStateDelegateBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase> _asRefPtrType(pxr::SdfLayerStateDelegateBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase>(x);
}
pxr::SdfLayerStateDelegateBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfLayerStateDelegateBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfLayerStateDelegateBase>& x) {
    if (!x) { return nullptr; }
    pxr::SdfLayerStateDelegateBase* result = const_cast<pxr::SdfLayerStateDelegateBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfLayerStateDelegateBase * _Nullable _fromRawPointer__ZN3pxr25SdfLayerStateDelegateBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfLayerStateDelegateBase>(p);
}
pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase>_nullRefPtr__ZN3pxr25SdfLayerStateDelegateBaseE() {
    return pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfLayerStateDelegateBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase> _asWeakPtrType(pxr::SdfLayerStateDelegateBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>(x);
}
pxr::SdfLayerStateDelegateBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfLayerStateDelegateBase>(x));
}
pxr::SdfLayerStateDelegateBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfLayerStateDelegateBase> & x) {
    if (!x) { return nullptr; }
    pxr::SdfLayerStateDelegateBase * result = const_cast<pxr::SdfLayerStateDelegateBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>_fromAnyWeakPtr__ZN3pxr25SdfLayerStateDelegateBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>(nullptr); }
    pxr::SdfLayerStateDelegateBase* rawPtr = static_cast<pxr::SdfLayerStateDelegateBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>_nullWeakPtr__ZN3pxr25SdfLayerStateDelegateBaseE() {
    return pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfLayerStateDelegateBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfLayerStateDelegateBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfSimpleLayerStateDelegate* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate> _asRefPtrType(pxr::SdfSimpleLayerStateDelegate* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate>(x);
}
pxr::SdfSimpleLayerStateDelegate * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfSimpleLayerStateDelegate * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfSimpleLayerStateDelegate>& x) {
    if (!x) { return nullptr; }
    pxr::SdfSimpleLayerStateDelegate* result = const_cast<pxr::SdfSimpleLayerStateDelegate *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfSimpleLayerStateDelegate * _Nullable _fromRawPointer__ZN3pxr27SdfSimpleLayerStateDelegateE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfSimpleLayerStateDelegate>(p);
}
pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate>_nullRefPtr__ZN3pxr27SdfSimpleLayerStateDelegateE() {
    return pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfSimpleLayerStateDelegate> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate> _asWeakPtrType(pxr::SdfSimpleLayerStateDelegate* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>(x);
}
pxr::SdfSimpleLayerStateDelegate * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfSimpleLayerStateDelegate>(x));
}
pxr::SdfSimpleLayerStateDelegate * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfSimpleLayerStateDelegate> & x) {
    if (!x) { return nullptr; }
    pxr::SdfSimpleLayerStateDelegate * result = const_cast<pxr::SdfSimpleLayerStateDelegate *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>_fromAnyWeakPtr__ZN3pxr27SdfSimpleLayerStateDelegateE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>(nullptr); }
    pxr::SdfSimpleLayerStateDelegate* rawPtr = static_cast<pxr::SdfSimpleLayerStateDelegate*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>_nullWeakPtr__ZN3pxr27SdfSimpleLayerStateDelegateE() {
    return pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfSimpleLayerStateDelegate> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfSimpleLayerStateDelegate> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfLayerTree* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfLayerTree> _asRefPtrType(pxr::SdfLayerTree* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfLayerTree>(x);
}
pxr::SdfLayerTree * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfLayerTree>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfLayerTree * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfLayerTree>& x) {
    if (!x) { return nullptr; }
    pxr::SdfLayerTree* result = const_cast<pxr::SdfLayerTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfLayerTree * _Nullable _fromRawPointer__ZN3pxr12SdfLayerTreeE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfLayerTree>(p);
}
pxr::TfRefPtr<pxr::SdfLayerTree>_nullRefPtr__ZN3pxr12SdfLayerTreeE() {
    return pxr::TfRefPtr<pxr::SdfLayerTree>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfLayerTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfLayerTree> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfLayerTree> _asWeakPtrType(pxr::SdfLayerTree* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfLayerTree>(x);
}
pxr::SdfLayerTree * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfLayerTree>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfLayerTree>(x));
}
pxr::SdfLayerTree * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfLayerTree> & x) {
    if (!x) { return nullptr; }
    pxr::SdfLayerTree * result = const_cast<pxr::SdfLayerTree *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfLayerTree>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfLayerTree>_fromAnyWeakPtr__ZN3pxr12SdfLayerTreeE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfLayerTree>(nullptr); }
    pxr::SdfLayerTree* rawPtr = static_cast<pxr::SdfLayerTree*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfLayerTree>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfLayerTree>_nullWeakPtr__ZN3pxr12SdfLayerTreeE() {
    return pxr::TfWeakPtr<pxr::SdfLayerTree>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfLayerTree> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfLayerTree> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfTextFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfTextFileFormat> _asRefPtrType(pxr::SdfTextFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfTextFileFormat>(x);
}
pxr::SdfTextFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfTextFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfTextFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfTextFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfTextFileFormat* result = const_cast<pxr::SdfTextFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfTextFileFormat * _Nullable _fromRawPointer__ZN3pxr17SdfTextFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfTextFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfTextFileFormat>_nullRefPtr__ZN3pxr17SdfTextFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfTextFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfTextFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfTextFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfTextFileFormat> _asWeakPtrType(pxr::SdfTextFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfTextFileFormat>(x);
}
pxr::SdfTextFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfTextFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfTextFileFormat>(x));
}
pxr::SdfTextFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfTextFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfTextFileFormat * result = const_cast<pxr::SdfTextFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfTextFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfTextFileFormat>_fromAnyWeakPtr__ZN3pxr17SdfTextFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfTextFileFormat>(nullptr); }
    pxr::SdfTextFileFormat* rawPtr = static_cast<pxr::SdfTextFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfTextFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfTextFileFormat>_nullWeakPtr__ZN3pxr17SdfTextFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfTextFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfTextFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfTextFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfUsdFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfUsdFileFormat> _asRefPtrType(pxr::SdfUsdFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfUsdFileFormat>(x);
}
pxr::SdfUsdFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfUsdFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfUsdFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfUsdFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdFileFormat* result = const_cast<pxr::SdfUsdFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfUsdFileFormat * _Nullable _fromRawPointer__ZN3pxr16SdfUsdFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfUsdFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfUsdFileFormat>_nullRefPtr__ZN3pxr16SdfUsdFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfUsdFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfUsdFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfUsdFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfUsdFileFormat> _asWeakPtrType(pxr::SdfUsdFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfUsdFileFormat>(x);
}
pxr::SdfUsdFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfUsdFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfUsdFileFormat>(x));
}
pxr::SdfUsdFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfUsdFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdFileFormat * result = const_cast<pxr::SdfUsdFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfUsdFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfUsdFileFormat>_fromAnyWeakPtr__ZN3pxr16SdfUsdFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfUsdFileFormat>(nullptr); }
    pxr::SdfUsdFileFormat* rawPtr = static_cast<pxr::SdfUsdFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfUsdFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfUsdFileFormat>_nullWeakPtr__ZN3pxr16SdfUsdFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfUsdFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfUsdFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfUsdFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfUsdaData* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfUsdaData> _asRefPtrType(pxr::SdfUsdaData* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfUsdaData>(x);
}
pxr::SdfUsdaData * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfUsdaData>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfUsdaData * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfUsdaData>& x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdaData* result = const_cast<pxr::SdfUsdaData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfUsdaData * _Nullable _fromRawPointer__ZN3pxr11SdfUsdaDataE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfUsdaData>(p);
}
pxr::TfRefPtr<pxr::SdfUsdaData>_nullRefPtr__ZN3pxr11SdfUsdaDataE() {
    return pxr::TfRefPtr<pxr::SdfUsdaData>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfUsdaData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfUsdaData> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfUsdaData> _asWeakPtrType(pxr::SdfUsdaData* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfUsdaData>(x);
}
pxr::SdfUsdaData * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfUsdaData>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfUsdaData>(x));
}
pxr::SdfUsdaData * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfUsdaData> & x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdaData * result = const_cast<pxr::SdfUsdaData *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfUsdaData>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfUsdaData>_fromAnyWeakPtr__ZN3pxr11SdfUsdaDataE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfUsdaData>(nullptr); }
    pxr::SdfUsdaData* rawPtr = static_cast<pxr::SdfUsdaData*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfUsdaData>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfUsdaData>_nullWeakPtr__ZN3pxr11SdfUsdaDataE() {
    return pxr::TfWeakPtr<pxr::SdfUsdaData>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfUsdaData> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfUsdaData> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfUsdaFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfUsdaFileFormat> _asRefPtrType(pxr::SdfUsdaFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfUsdaFileFormat>(x);
}
pxr::SdfUsdaFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfUsdaFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfUsdaFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfUsdaFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdaFileFormat* result = const_cast<pxr::SdfUsdaFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfUsdaFileFormat * _Nullable _fromRawPointer__ZN3pxr17SdfUsdaFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfUsdaFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfUsdaFileFormat>_nullRefPtr__ZN3pxr17SdfUsdaFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfUsdaFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfUsdaFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfUsdaFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfUsdaFileFormat> _asWeakPtrType(pxr::SdfUsdaFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>(x);
}
pxr::SdfUsdaFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfUsdaFileFormat>(x));
}
pxr::SdfUsdaFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfUsdaFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdaFileFormat * result = const_cast<pxr::SdfUsdaFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>_fromAnyWeakPtr__ZN3pxr17SdfUsdaFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>(nullptr); }
    pxr::SdfUsdaFileFormat* rawPtr = static_cast<pxr::SdfUsdaFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>_nullWeakPtr__ZN3pxr17SdfUsdaFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfUsdaFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfUsdaFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfUsdaFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfUsdcFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfUsdcFileFormat> _asRefPtrType(pxr::SdfUsdcFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfUsdcFileFormat>(x);
}
pxr::SdfUsdcFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfUsdcFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfUsdcFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfUsdcFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdcFileFormat* result = const_cast<pxr::SdfUsdcFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfUsdcFileFormat * _Nullable _fromRawPointer__ZN3pxr17SdfUsdcFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfUsdcFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfUsdcFileFormat>_nullRefPtr__ZN3pxr17SdfUsdcFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfUsdcFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfUsdcFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfUsdcFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfUsdcFileFormat> _asWeakPtrType(pxr::SdfUsdcFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>(x);
}
pxr::SdfUsdcFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfUsdcFileFormat>(x));
}
pxr::SdfUsdcFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfUsdcFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdcFileFormat * result = const_cast<pxr::SdfUsdcFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>_fromAnyWeakPtr__ZN3pxr17SdfUsdcFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>(nullptr); }
    pxr::SdfUsdcFileFormat* rawPtr = static_cast<pxr::SdfUsdcFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>_nullWeakPtr__ZN3pxr17SdfUsdcFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfUsdcFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfUsdcFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfUsdcFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdfUsdzFileFormat* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdfUsdzFileFormat> _asRefPtrType(pxr::SdfUsdzFileFormat* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdfUsdzFileFormat>(x);
}
pxr::SdfUsdzFileFormat * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdfUsdzFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdfUsdzFileFormat * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdfUsdzFileFormat>& x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdzFileFormat* result = const_cast<pxr::SdfUsdzFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdfUsdzFileFormat * _Nullable _fromRawPointer__ZN3pxr17SdfUsdzFileFormatE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdfUsdzFileFormat>(p);
}
pxr::TfRefPtr<pxr::SdfUsdzFileFormat>_nullRefPtr__ZN3pxr17SdfUsdzFileFormatE() {
    return pxr::TfRefPtr<pxr::SdfUsdzFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdfUsdzFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdfUsdzFileFormat> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdfUsdzFileFormat> _asWeakPtrType(pxr::SdfUsdzFileFormat* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>(x);
}
pxr::SdfUsdzFileFormat * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdfUsdzFileFormat>(x));
}
pxr::SdfUsdzFileFormat * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdfUsdzFileFormat> & x) {
    if (!x) { return nullptr; }
    pxr::SdfUsdzFileFormat * result = const_cast<pxr::SdfUsdzFileFormat *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>_fromAnyWeakPtr__ZN3pxr17SdfUsdzFileFormatE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>(nullptr); }
    pxr::SdfUsdzFileFormat* rawPtr = static_cast<pxr::SdfUsdzFileFormat*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>_nullWeakPtr__ZN3pxr17SdfUsdzFileFormatE() {
    return pxr::TfWeakPtr<pxr::SdfUsdzFileFormat>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdfUsdzFileFormat> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdfUsdzFileFormat> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdrDiscoveryPluginContext* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext> _asRefPtrType(pxr::SdrDiscoveryPluginContext* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext>(x);
}
pxr::SdrDiscoveryPluginContext * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdrDiscoveryPluginContext * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdrDiscoveryPluginContext>& x) {
    if (!x) { return nullptr; }
    pxr::SdrDiscoveryPluginContext* result = const_cast<pxr::SdrDiscoveryPluginContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdrDiscoveryPluginContext * _Nullable _fromRawPointer__ZN3pxr25SdrDiscoveryPluginContextE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdrDiscoveryPluginContext>(p);
}
pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext>_nullRefPtr__ZN3pxr25SdrDiscoveryPluginContextE() {
    return pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdrDiscoveryPluginContext> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext> _asWeakPtrType(pxr::SdrDiscoveryPluginContext* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>(x);
}
pxr::SdrDiscoveryPluginContext * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdrDiscoveryPluginContext>(x));
}
pxr::SdrDiscoveryPluginContext * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdrDiscoveryPluginContext> & x) {
    if (!x) { return nullptr; }
    pxr::SdrDiscoveryPluginContext * result = const_cast<pxr::SdrDiscoveryPluginContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>_fromAnyWeakPtr__ZN3pxr25SdrDiscoveryPluginContextE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>(nullptr); }
    pxr::SdrDiscoveryPluginContext* rawPtr = static_cast<pxr::SdrDiscoveryPluginContext*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>_nullWeakPtr__ZN3pxr25SdrDiscoveryPluginContextE() {
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdrDiscoveryPluginContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdrDiscoveryPluginContext> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdrDiscoveryPlugin* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::SdrDiscoveryPlugin> _asRefPtrType(pxr::SdrDiscoveryPlugin* _Nonnull x) {
    return pxr::TfRefPtr<pxr::SdrDiscoveryPlugin>(x);
}
pxr::SdrDiscoveryPlugin * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::SdrDiscoveryPlugin>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::SdrDiscoveryPlugin * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::SdrDiscoveryPlugin>& x) {
    if (!x) { return nullptr; }
    pxr::SdrDiscoveryPlugin* result = const_cast<pxr::SdrDiscoveryPlugin *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::SdrDiscoveryPlugin * _Nullable _fromRawPointer__ZN3pxr18SdrDiscoveryPluginE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::SdrDiscoveryPlugin>(p);
}
pxr::TfRefPtr<pxr::SdrDiscoveryPlugin>_nullRefPtr__ZN3pxr18SdrDiscoveryPluginE() {
    return pxr::TfRefPtr<pxr::SdrDiscoveryPlugin>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::SdrDiscoveryPlugin> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::SdrDiscoveryPlugin> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin> _asWeakPtrType(pxr::SdrDiscoveryPlugin* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>(x);
}
pxr::SdrDiscoveryPlugin * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::SdrDiscoveryPlugin>(x));
}
pxr::SdrDiscoveryPlugin * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::SdrDiscoveryPlugin> & x) {
    if (!x) { return nullptr; }
    pxr::SdrDiscoveryPlugin * result = const_cast<pxr::SdrDiscoveryPlugin *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>_fromAnyWeakPtr__ZN3pxr18SdrDiscoveryPluginE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>(nullptr); }
    pxr::SdrDiscoveryPlugin* rawPtr = static_cast<pxr::SdrDiscoveryPlugin*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>_nullWeakPtr__ZN3pxr18SdrDiscoveryPluginE() {
    return pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdrDiscoveryPlugin> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdrDiscoveryPlugin> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::SdrRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::SdrRegistry> _asWeakPtrType(pxr::SdrRegistry* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::SdrRegistry>(x);
}
pxr::SdrRegistry * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::SdrRegistry>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::SdrRegistry * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr11SdrRegistryE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::SdrRegistry *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::SdrRegistry>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::SdrRegistry>_fromAnyWeakPtr__ZN3pxr11SdrRegistryE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::SdrRegistry>(nullptr); }
    pxr::SdrRegistry* rawPtr = static_cast<pxr::SdrRegistry*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::SdrRegistry>(rawPtr);
}
pxr::TfWeakPtr<pxr::SdrRegistry>_nullWeakPtr__ZN3pxr11SdrRegistryE() {
    return pxr::TfWeakPtr<pxr::SdrRegistry>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::SdrRegistry> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::SdrRegistry> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::PcpLayerStack* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::PcpLayerStack> _asRefPtrType(pxr::PcpLayerStack* _Nonnull x) {
    return pxr::TfRefPtr<pxr::PcpLayerStack>(x);
}
pxr::PcpLayerStack * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::PcpLayerStack>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::PcpLayerStack * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::PcpLayerStack>& x) {
    if (!x) { return nullptr; }
    pxr::PcpLayerStack* result = const_cast<pxr::PcpLayerStack *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::PcpLayerStack * _Nullable _fromRawPointer__ZN3pxr13PcpLayerStackE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::PcpLayerStack>(p);
}
pxr::TfRefPtr<pxr::PcpLayerStack>_nullRefPtr__ZN3pxr13PcpLayerStackE() {
    return pxr::TfRefPtr<pxr::PcpLayerStack>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::PcpLayerStack> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::PcpLayerStack> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::PcpLayerStack> _asWeakPtrType(pxr::PcpLayerStack* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::PcpLayerStack>(x);
}
pxr::PcpLayerStack * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::PcpLayerStack>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::PcpLayerStack>(x));
}
pxr::PcpLayerStack * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::PcpLayerStack> & x) {
    if (!x) { return nullptr; }
    pxr::PcpLayerStack * result = const_cast<pxr::PcpLayerStack *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::PcpLayerStack>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::PcpLayerStack>_fromAnyWeakPtr__ZN3pxr13PcpLayerStackE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::PcpLayerStack>(nullptr); }
    pxr::PcpLayerStack* rawPtr = static_cast<pxr::PcpLayerStack*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::PcpLayerStack>(rawPtr);
}
pxr::TfWeakPtr<pxr::PcpLayerStack>_nullWeakPtr__ZN3pxr13PcpLayerStackE() {
    return pxr::TfWeakPtr<pxr::PcpLayerStack>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::PcpLayerStack> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::PcpLayerStack> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdSchemaRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfWeakPtr<pxr::UsdSchemaRegistry> _asWeakPtrType(pxr::UsdSchemaRegistry* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdSchemaRegistry>(x);
}
pxr::UsdSchemaRegistry * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdSchemaRegistry>& x) {
    if (!x) { return nullptr; }
    return x.operator->();
}
pxr::UsdSchemaRegistry * _Nullable _fromConstWeakPtrType(const __SwiftUsd_Typedef___ZN3pxr17UsdSchemaRegistryE_ConstWeakPtr& x) {
    if (!x) { return nullptr; }
    return const_cast<pxr::UsdSchemaRegistry *>(x.operator->());
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdSchemaRegistry>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdSchemaRegistry>_fromAnyWeakPtr__ZN3pxr17UsdSchemaRegistryE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdSchemaRegistry>(nullptr); }
    pxr::UsdSchemaRegistry* rawPtr = static_cast<pxr::UsdSchemaRegistry*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdSchemaRegistry>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdSchemaRegistry>_nullWeakPtr__ZN3pxr17UsdSchemaRegistryE() {
    return pxr::TfWeakPtr<pxr::UsdSchemaRegistry>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdSchemaRegistry> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdSchemaRegistry> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdStage* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdStage> _asRefPtrType(pxr::UsdStage* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdStage>(x);
}
pxr::UsdStage * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdStage>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdStage * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdStage>& x) {
    if (!x) { return nullptr; }
    pxr::UsdStage* result = const_cast<pxr::UsdStage *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdStage * _Nullable _fromRawPointer__ZN3pxr8UsdStageE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdStage>(p);
}
pxr::TfRefPtr<pxr::UsdStage>_nullRefPtr__ZN3pxr8UsdStageE() {
    return pxr::TfRefPtr<pxr::UsdStage>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdStage> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdStage> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdStage> _asWeakPtrType(pxr::UsdStage* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdStage>(x);
}
pxr::UsdStage * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdStage>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdStage>(x));
}
pxr::UsdStage * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdStage> & x) {
    if (!x) { return nullptr; }
    pxr::UsdStage * result = const_cast<pxr::UsdStage *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdStage>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdStage>_fromAnyWeakPtr__ZN3pxr8UsdStageE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdStage>(nullptr); }
    pxr::UsdStage* rawPtr = static_cast<pxr::UsdStage*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdStage>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdStage>_nullWeakPtr__ZN3pxr8UsdStageE() {
    return pxr::TfWeakPtr<pxr::UsdStage>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdStage> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdStage> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdHydraDiscoveryPlugin* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin> _asRefPtrType(pxr::UsdHydraDiscoveryPlugin* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>(x);
}
pxr::UsdHydraDiscoveryPlugin * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdHydraDiscoveryPlugin * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdHydraDiscoveryPlugin>& x) {
    if (!x) { return nullptr; }
    pxr::UsdHydraDiscoveryPlugin* result = const_cast<pxr::UsdHydraDiscoveryPlugin *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdHydraDiscoveryPlugin * _Nullable _fromRawPointer__ZN3pxr23UsdHydraDiscoveryPluginE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdHydraDiscoveryPlugin>(p);
}
pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>_nullRefPtr__ZN3pxr23UsdHydraDiscoveryPluginE() {
    return pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdHydraDiscoveryPlugin> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin> _asWeakPtrType(pxr::UsdHydraDiscoveryPlugin* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>(x);
}
pxr::UsdHydraDiscoveryPlugin * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>(x));
}
pxr::UsdHydraDiscoveryPlugin * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdHydraDiscoveryPlugin> & x) {
    if (!x) { return nullptr; }
    pxr::UsdHydraDiscoveryPlugin * result = const_cast<pxr::UsdHydraDiscoveryPlugin *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>_fromAnyWeakPtr__ZN3pxr23UsdHydraDiscoveryPluginE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>(nullptr); }
    pxr::UsdHydraDiscoveryPlugin* rawPtr = static_cast<pxr::UsdHydraDiscoveryPlugin*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>_nullWeakPtr__ZN3pxr23UsdHydraDiscoveryPluginE() {
    return pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdHydraDiscoveryPlugin> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdHydraDiscoveryPlugin> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::VdfExecutionTypeRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::ExecTypeRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
#if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT

void* _Nonnull _address(pxr::GarchGLPlatformDebugContext* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext> _asRefPtrType(pxr::GarchGLPlatformDebugContext* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext>(x);
}
pxr::GarchGLPlatformDebugContext * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GarchGLPlatformDebugContext * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GarchGLPlatformDebugContext>& x) {
    if (!x) { return nullptr; }
    pxr::GarchGLPlatformDebugContext* result = const_cast<pxr::GarchGLPlatformDebugContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GarchGLPlatformDebugContext * _Nullable _fromRawPointer__ZN3pxr27GarchGLPlatformDebugContextE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GarchGLPlatformDebugContext>(p);
}
pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext>_nullRefPtr__ZN3pxr27GarchGLPlatformDebugContextE() {
    return pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GarchGLPlatformDebugContext> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext> _asWeakPtrType(pxr::GarchGLPlatformDebugContext* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>(x);
}
pxr::GarchGLPlatformDebugContext * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GarchGLPlatformDebugContext>(x));
}
pxr::GarchGLPlatformDebugContext * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GarchGLPlatformDebugContext> & x) {
    if (!x) { return nullptr; }
    pxr::GarchGLPlatformDebugContext * result = const_cast<pxr::GarchGLPlatformDebugContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>_fromAnyWeakPtr__ZN3pxr27GarchGLPlatformDebugContextE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>(nullptr); }
    pxr::GarchGLPlatformDebugContext* rawPtr = static_cast<pxr::GarchGLPlatformDebugContext*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>(rawPtr);
}
pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>_nullWeakPtr__ZN3pxr27GarchGLPlatformDebugContextE() {
    return pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GarchGLPlatformDebugContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GarchGLPlatformDebugContext> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HioImageRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::GlfBindingMap* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfBindingMap> _asRefPtrType(pxr::GlfBindingMap* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfBindingMap>(x);
}
pxr::GlfBindingMap * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfBindingMap>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfBindingMap * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfBindingMap>& x) {
    if (!x) { return nullptr; }
    pxr::GlfBindingMap* result = const_cast<pxr::GlfBindingMap *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfBindingMap * _Nullable _fromRawPointer__ZN3pxr13GlfBindingMapE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfBindingMap>(p);
}
pxr::TfRefPtr<pxr::GlfBindingMap>_nullRefPtr__ZN3pxr13GlfBindingMapE() {
    return pxr::TfRefPtr<pxr::GlfBindingMap>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfBindingMap> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfBindingMap> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfBindingMap> _asWeakPtrType(pxr::GlfBindingMap* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfBindingMap>(x);
}
pxr::GlfBindingMap * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfBindingMap>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfBindingMap>(x));
}
pxr::GlfBindingMap * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfBindingMap> & x) {
    if (!x) { return nullptr; }
    pxr::GlfBindingMap * result = const_cast<pxr::GlfBindingMap *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfBindingMap>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfBindingMap>_fromAnyWeakPtr__ZN3pxr13GlfBindingMapE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfBindingMap>(nullptr); }
    pxr::GlfBindingMap* rawPtr = static_cast<pxr::GlfBindingMap*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfBindingMap>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfBindingMap>_nullWeakPtr__ZN3pxr13GlfBindingMapE() {
    return pxr::TfWeakPtr<pxr::GlfBindingMap>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfBindingMap> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfBindingMap> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::GlfContextCaps* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::GlfDrawTarget* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfDrawTarget> _asRefPtrType(pxr::GlfDrawTarget* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfDrawTarget>(x);
}
pxr::GlfDrawTarget * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfDrawTarget>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfDrawTarget * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfDrawTarget>& x) {
    if (!x) { return nullptr; }
    pxr::GlfDrawTarget* result = const_cast<pxr::GlfDrawTarget *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfDrawTarget * _Nullable _fromRawPointer__ZN3pxr13GlfDrawTargetE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfDrawTarget>(p);
}
pxr::TfRefPtr<pxr::GlfDrawTarget>_nullRefPtr__ZN3pxr13GlfDrawTargetE() {
    return pxr::TfRefPtr<pxr::GlfDrawTarget>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfDrawTarget> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfDrawTarget> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfDrawTarget> _asWeakPtrType(pxr::GlfDrawTarget* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfDrawTarget>(x);
}
pxr::GlfDrawTarget * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfDrawTarget>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfDrawTarget>(x));
}
pxr::GlfDrawTarget * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfDrawTarget> & x) {
    if (!x) { return nullptr; }
    pxr::GlfDrawTarget * result = const_cast<pxr::GlfDrawTarget *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfDrawTarget>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfDrawTarget>_fromAnyWeakPtr__ZN3pxr13GlfDrawTargetE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfDrawTarget>(nullptr); }
    pxr::GlfDrawTarget* rawPtr = static_cast<pxr::GlfDrawTarget*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfDrawTarget>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfDrawTarget>_nullWeakPtr__ZN3pxr13GlfDrawTargetE() {
    return pxr::TfWeakPtr<pxr::GlfDrawTarget>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfDrawTarget> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfDrawTarget> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::GlfTexture* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfTexture> _asRefPtrType(pxr::GlfTexture* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfTexture>(x);
}
pxr::GlfTexture * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfTexture>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfTexture * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfTexture>& x) {
    if (!x) { return nullptr; }
    pxr::GlfTexture* result = const_cast<pxr::GlfTexture *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfTexture * _Nullable _fromRawPointer__ZN3pxr10GlfTextureE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfTexture>(p);
}
pxr::TfRefPtr<pxr::GlfTexture>_nullRefPtr__ZN3pxr10GlfTextureE() {
    return pxr::TfRefPtr<pxr::GlfTexture>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfTexture> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfTexture> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfTexture> _asWeakPtrType(pxr::GlfTexture* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfTexture>(x);
}
pxr::GlfTexture * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfTexture>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfTexture>(x));
}
pxr::GlfTexture * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfTexture> & x) {
    if (!x) { return nullptr; }
    pxr::GlfTexture * result = const_cast<pxr::GlfTexture *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfTexture>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfTexture>_fromAnyWeakPtr__ZN3pxr10GlfTextureE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfTexture>(nullptr); }
    pxr::GlfTexture* rawPtr = static_cast<pxr::GlfTexture*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfTexture>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfTexture>_nullWeakPtr__ZN3pxr10GlfTextureE() {
    return pxr::TfWeakPtr<pxr::GlfTexture>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfTexture> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfTexture> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::GlfSimpleLightingContext* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfSimpleLightingContext> _asRefPtrType(pxr::GlfSimpleLightingContext* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfSimpleLightingContext>(x);
}
pxr::GlfSimpleLightingContext * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfSimpleLightingContext>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfSimpleLightingContext * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfSimpleLightingContext>& x) {
    if (!x) { return nullptr; }
    pxr::GlfSimpleLightingContext* result = const_cast<pxr::GlfSimpleLightingContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfSimpleLightingContext * _Nullable _fromRawPointer__ZN3pxr24GlfSimpleLightingContextE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfSimpleLightingContext>(p);
}
pxr::TfRefPtr<pxr::GlfSimpleLightingContext>_nullRefPtr__ZN3pxr24GlfSimpleLightingContextE() {
    return pxr::TfRefPtr<pxr::GlfSimpleLightingContext>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfSimpleLightingContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfSimpleLightingContext> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfSimpleLightingContext> _asWeakPtrType(pxr::GlfSimpleLightingContext* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>(x);
}
pxr::GlfSimpleLightingContext * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfSimpleLightingContext>(x));
}
pxr::GlfSimpleLightingContext * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfSimpleLightingContext> & x) {
    if (!x) { return nullptr; }
    pxr::GlfSimpleLightingContext * result = const_cast<pxr::GlfSimpleLightingContext *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>_fromAnyWeakPtr__ZN3pxr24GlfSimpleLightingContextE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>(nullptr); }
    pxr::GlfSimpleLightingContext* rawPtr = static_cast<pxr::GlfSimpleLightingContext*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>_nullWeakPtr__ZN3pxr24GlfSimpleLightingContextE() {
    return pxr::TfWeakPtr<pxr::GlfSimpleLightingContext>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfSimpleLightingContext> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfSimpleLightingContext> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::GlfSimpleShadowArray* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfSimpleShadowArray> _asRefPtrType(pxr::GlfSimpleShadowArray* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfSimpleShadowArray>(x);
}
pxr::GlfSimpleShadowArray * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfSimpleShadowArray>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfSimpleShadowArray * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfSimpleShadowArray>& x) {
    if (!x) { return nullptr; }
    pxr::GlfSimpleShadowArray* result = const_cast<pxr::GlfSimpleShadowArray *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfSimpleShadowArray * _Nullable _fromRawPointer__ZN3pxr20GlfSimpleShadowArrayE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfSimpleShadowArray>(p);
}
pxr::TfRefPtr<pxr::GlfSimpleShadowArray>_nullRefPtr__ZN3pxr20GlfSimpleShadowArrayE() {
    return pxr::TfRefPtr<pxr::GlfSimpleShadowArray>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfSimpleShadowArray> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfSimpleShadowArray> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfSimpleShadowArray> _asWeakPtrType(pxr::GlfSimpleShadowArray* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>(x);
}
pxr::GlfSimpleShadowArray * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfSimpleShadowArray>(x));
}
pxr::GlfSimpleShadowArray * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfSimpleShadowArray> & x) {
    if (!x) { return nullptr; }
    pxr::GlfSimpleShadowArray * result = const_cast<pxr::GlfSimpleShadowArray *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>_fromAnyWeakPtr__ZN3pxr20GlfSimpleShadowArrayE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>(nullptr); }
    pxr::GlfSimpleShadowArray* rawPtr = static_cast<pxr::GlfSimpleShadowArray*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>_nullWeakPtr__ZN3pxr20GlfSimpleShadowArrayE() {
    return pxr::TfWeakPtr<pxr::GlfSimpleShadowArray>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfSimpleShadowArray> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfSimpleShadowArray> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::GlfUniformBlock* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::GlfUniformBlock> _asRefPtrType(pxr::GlfUniformBlock* _Nonnull x) {
    return pxr::TfRefPtr<pxr::GlfUniformBlock>(x);
}
pxr::GlfUniformBlock * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::GlfUniformBlock>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::GlfUniformBlock * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::GlfUniformBlock>& x) {
    if (!x) { return nullptr; }
    pxr::GlfUniformBlock* result = const_cast<pxr::GlfUniformBlock *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::GlfUniformBlock * _Nullable _fromRawPointer__ZN3pxr15GlfUniformBlockE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::GlfUniformBlock>(p);
}
pxr::TfRefPtr<pxr::GlfUniformBlock>_nullRefPtr__ZN3pxr15GlfUniformBlockE() {
    return pxr::TfRefPtr<pxr::GlfUniformBlock>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::GlfUniformBlock> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::GlfUniformBlock> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::GlfUniformBlock> _asWeakPtrType(pxr::GlfUniformBlock* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::GlfUniformBlock>(x);
}
pxr::GlfUniformBlock * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::GlfUniformBlock>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::GlfUniformBlock>(x));
}
pxr::GlfUniformBlock * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::GlfUniformBlock> & x) {
    if (!x) { return nullptr; }
    pxr::GlfUniformBlock * result = const_cast<pxr::GlfUniformBlock *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::GlfUniformBlock>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::GlfUniformBlock>_fromAnyWeakPtr__ZN3pxr15GlfUniformBlockE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::GlfUniformBlock>(nullptr); }
    pxr::GlfUniformBlock* rawPtr = static_cast<pxr::GlfUniformBlock*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::GlfUniformBlock>(rawPtr);
}
pxr::TfWeakPtr<pxr::GlfUniformBlock>_nullWeakPtr__ZN3pxr15GlfUniformBlockE() {
    return pxr::TfWeakPtr<pxr::GlfUniformBlock>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::GlfUniformBlock> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::GlfUniformBlock> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdPerfLog* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::HdSceneIndexBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdSceneIndexBase> _asRefPtrType(pxr::HdSceneIndexBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdSceneIndexBase>(x);
}
pxr::HdSceneIndexBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdSceneIndexBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::HdSceneIndexBase* result = const_cast<pxr::HdSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdSceneIndexBase * _Nullable _fromRawPointer__ZN3pxr16HdSceneIndexBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdSceneIndexBase>(p);
}
pxr::TfRefPtr<pxr::HdSceneIndexBase>_nullRefPtr__ZN3pxr16HdSceneIndexBaseE() {
    return pxr::TfRefPtr<pxr::HdSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdSceneIndexBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdSceneIndexBase> _asWeakPtrType(pxr::HdSceneIndexBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdSceneIndexBase>(x);
}
pxr::HdSceneIndexBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdSceneIndexBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdSceneIndexBase>(x));
}
pxr::HdSceneIndexBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdSceneIndexBase> & x) {
    if (!x) { return nullptr; }
    pxr::HdSceneIndexBase * result = const_cast<pxr::HdSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdSceneIndexBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdSceneIndexBase>_fromAnyWeakPtr__ZN3pxr16HdSceneIndexBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdSceneIndexBase>(nullptr); }
    pxr::HdSceneIndexBase* rawPtr = static_cast<pxr::HdSceneIndexBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdSceneIndexBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdSceneIndexBase>_nullWeakPtr__ZN3pxr16HdSceneIndexBaseE() {
    return pxr::TfWeakPtr<pxr::HdSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdSceneIndexBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdMergingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdMergingSceneIndex> _asRefPtrType(pxr::HdMergingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdMergingSceneIndex>(x);
}
pxr::HdMergingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdMergingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdMergingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdMergingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdMergingSceneIndex* result = const_cast<pxr::HdMergingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdMergingSceneIndex * _Nullable _fromRawPointer__ZN3pxr19HdMergingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdMergingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdMergingSceneIndex>_nullRefPtr__ZN3pxr19HdMergingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdMergingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdMergingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdMergingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdMergingSceneIndex> _asWeakPtrType(pxr::HdMergingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdMergingSceneIndex>(x);
}
pxr::HdMergingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdMergingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdMergingSceneIndex>(x));
}
pxr::HdMergingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdMergingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdMergingSceneIndex * result = const_cast<pxr::HdMergingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdMergingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdMergingSceneIndex>_fromAnyWeakPtr__ZN3pxr19HdMergingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdMergingSceneIndex>(nullptr); }
    pxr::HdMergingSceneIndex* rawPtr = static_cast<pxr::HdMergingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdMergingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdMergingSceneIndex>_nullWeakPtr__ZN3pxr19HdMergingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdMergingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdMergingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdMergingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdFilteringSceneIndexBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase> _asRefPtrType(pxr::HdFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase>(x);
}
pxr::HdFilteringSceneIndexBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdFilteringSceneIndexBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::HdFilteringSceneIndexBase* result = const_cast<pxr::HdFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdFilteringSceneIndexBase * _Nullable _fromRawPointer__ZN3pxr25HdFilteringSceneIndexBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdFilteringSceneIndexBase>(p);
}
pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase>_nullRefPtr__ZN3pxr25HdFilteringSceneIndexBaseE() {
    return pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdFilteringSceneIndexBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase> _asWeakPtrType(pxr::HdFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>(x);
}
pxr::HdFilteringSceneIndexBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdFilteringSceneIndexBase>(x));
}
pxr::HdFilteringSceneIndexBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdFilteringSceneIndexBase> & x) {
    if (!x) { return nullptr; }
    pxr::HdFilteringSceneIndexBase * result = const_cast<pxr::HdFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>_fromAnyWeakPtr__ZN3pxr25HdFilteringSceneIndexBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>(nullptr); }
    pxr::HdFilteringSceneIndexBase* rawPtr = static_cast<pxr::HdFilteringSceneIndexBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>_nullWeakPtr__ZN3pxr25HdFilteringSceneIndexBaseE() {
    return pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdFilteringSceneIndexBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdSingleInputFilteringSceneIndexBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase> _asRefPtrType(pxr::HdSingleInputFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase>(x);
}
pxr::HdSingleInputFilteringSceneIndexBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdSingleInputFilteringSceneIndexBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdSingleInputFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::HdSingleInputFilteringSceneIndexBase* result = const_cast<pxr::HdSingleInputFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdSingleInputFilteringSceneIndexBase * _Nullable _fromRawPointer__ZN3pxr36HdSingleInputFilteringSceneIndexBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdSingleInputFilteringSceneIndexBase>(p);
}
pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase>_nullRefPtr__ZN3pxr36HdSingleInputFilteringSceneIndexBaseE() {
    return pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdSingleInputFilteringSceneIndexBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase> _asWeakPtrType(pxr::HdSingleInputFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>(x);
}
pxr::HdSingleInputFilteringSceneIndexBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdSingleInputFilteringSceneIndexBase>(x));
}
pxr::HdSingleInputFilteringSceneIndexBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdSingleInputFilteringSceneIndexBase> & x) {
    if (!x) { return nullptr; }
    pxr::HdSingleInputFilteringSceneIndexBase * result = const_cast<pxr::HdSingleInputFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>_fromAnyWeakPtr__ZN3pxr36HdSingleInputFilteringSceneIndexBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>(nullptr); }
    pxr::HdSingleInputFilteringSceneIndexBase* rawPtr = static_cast<pxr::HdSingleInputFilteringSceneIndexBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>_nullWeakPtr__ZN3pxr36HdSingleInputFilteringSceneIndexBaseE() {
    return pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdSingleInputFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdSingleInputFilteringSceneIndexBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdLegacyPrimSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex> _asRefPtrType(pxr::HdLegacyPrimSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex>(x);
}
pxr::HdLegacyPrimSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdLegacyPrimSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdLegacyPrimSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdLegacyPrimSceneIndex* result = const_cast<pxr::HdLegacyPrimSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdLegacyPrimSceneIndex * _Nullable _fromRawPointer__ZN3pxr22HdLegacyPrimSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdLegacyPrimSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex>_nullRefPtr__ZN3pxr22HdLegacyPrimSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdLegacyPrimSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex> _asWeakPtrType(pxr::HdLegacyPrimSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>(x);
}
pxr::HdLegacyPrimSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdLegacyPrimSceneIndex>(x));
}
pxr::HdLegacyPrimSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdLegacyPrimSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdLegacyPrimSceneIndex * result = const_cast<pxr::HdLegacyPrimSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>_fromAnyWeakPtr__ZN3pxr22HdLegacyPrimSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>(nullptr); }
    pxr::HdLegacyPrimSceneIndex* rawPtr = static_cast<pxr::HdLegacyPrimSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>_nullWeakPtr__ZN3pxr22HdLegacyPrimSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdLegacyPrimSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdLegacyPrimSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdRetainedSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdRetainedSceneIndex> _asRefPtrType(pxr::HdRetainedSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdRetainedSceneIndex>(x);
}
pxr::HdRetainedSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdRetainedSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdRetainedSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdRetainedSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdRetainedSceneIndex* result = const_cast<pxr::HdRetainedSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdRetainedSceneIndex * _Nullable _fromRawPointer__ZN3pxr20HdRetainedSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdRetainedSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdRetainedSceneIndex>_nullRefPtr__ZN3pxr20HdRetainedSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdRetainedSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdRetainedSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdRetainedSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdRetainedSceneIndex> _asWeakPtrType(pxr::HdRetainedSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>(x);
}
pxr::HdRetainedSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdRetainedSceneIndex>(x));
}
pxr::HdRetainedSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdRetainedSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdRetainedSceneIndex * result = const_cast<pxr::HdRetainedSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>_fromAnyWeakPtr__ZN3pxr20HdRetainedSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>(nullptr); }
    pxr::HdRetainedSceneIndex* rawPtr = static_cast<pxr::HdRetainedSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>_nullWeakPtr__ZN3pxr20HdRetainedSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdRetainedSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdRetainedSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdRetainedSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdNoticeBatchingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex> _asRefPtrType(pxr::HdNoticeBatchingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex>(x);
}
pxr::HdNoticeBatchingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdNoticeBatchingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdNoticeBatchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdNoticeBatchingSceneIndex* result = const_cast<pxr::HdNoticeBatchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdNoticeBatchingSceneIndex * _Nullable _fromRawPointer__ZN3pxr26HdNoticeBatchingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdNoticeBatchingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex>_nullRefPtr__ZN3pxr26HdNoticeBatchingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex> _asWeakPtrType(pxr::HdNoticeBatchingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>(x);
}
pxr::HdNoticeBatchingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdNoticeBatchingSceneIndex>(x));
}
pxr::HdNoticeBatchingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdNoticeBatchingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdNoticeBatchingSceneIndex * result = const_cast<pxr::HdNoticeBatchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>_fromAnyWeakPtr__ZN3pxr26HdNoticeBatchingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>(nullptr); }
    pxr::HdNoticeBatchingSceneIndex* rawPtr = static_cast<pxr::HdNoticeBatchingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>_nullWeakPtr__ZN3pxr26HdNoticeBatchingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdNoticeBatchingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdCachingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdCachingSceneIndex> _asRefPtrType(pxr::HdCachingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdCachingSceneIndex>(x);
}
pxr::HdCachingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdCachingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdCachingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdCachingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdCachingSceneIndex* result = const_cast<pxr::HdCachingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdCachingSceneIndex * _Nullable _fromRawPointer__ZN3pxr19HdCachingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdCachingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdCachingSceneIndex>_nullRefPtr__ZN3pxr19HdCachingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdCachingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdCachingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdCachingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdCachingSceneIndex> _asWeakPtrType(pxr::HdCachingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdCachingSceneIndex>(x);
}
pxr::HdCachingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdCachingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdCachingSceneIndex>(x));
}
pxr::HdCachingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdCachingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdCachingSceneIndex * result = const_cast<pxr::HdCachingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdCachingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdCachingSceneIndex>_fromAnyWeakPtr__ZN3pxr19HdCachingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdCachingSceneIndex>(nullptr); }
    pxr::HdCachingSceneIndex* rawPtr = static_cast<pxr::HdCachingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdCachingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdCachingSceneIndex>_nullWeakPtr__ZN3pxr19HdCachingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdCachingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdCachingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdCachingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdDependencyForwardingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex> _asRefPtrType(pxr::HdDependencyForwardingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex>(x);
}
pxr::HdDependencyForwardingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdDependencyForwardingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdDependencyForwardingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdDependencyForwardingSceneIndex* result = const_cast<pxr::HdDependencyForwardingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdDependencyForwardingSceneIndex * _Nullable _fromRawPointer__ZN3pxr32HdDependencyForwardingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdDependencyForwardingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex>_nullRefPtr__ZN3pxr32HdDependencyForwardingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdDependencyForwardingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex> _asWeakPtrType(pxr::HdDependencyForwardingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>(x);
}
pxr::HdDependencyForwardingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdDependencyForwardingSceneIndex>(x));
}
pxr::HdDependencyForwardingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdDependencyForwardingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdDependencyForwardingSceneIndex * result = const_cast<pxr::HdDependencyForwardingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>_fromAnyWeakPtr__ZN3pxr32HdDependencyForwardingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>(nullptr); }
    pxr::HdDependencyForwardingSceneIndex* rawPtr = static_cast<pxr::HdDependencyForwardingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>_nullWeakPtr__ZN3pxr32HdDependencyForwardingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdDependencyForwardingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdDependencyForwardingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdFlatteningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdFlatteningSceneIndex> _asRefPtrType(pxr::HdFlatteningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdFlatteningSceneIndex>(x);
}
pxr::HdFlatteningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdFlatteningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdFlatteningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdFlatteningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdFlatteningSceneIndex* result = const_cast<pxr::HdFlatteningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdFlatteningSceneIndex * _Nullable _fromRawPointer__ZN3pxr22HdFlatteningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdFlatteningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdFlatteningSceneIndex>_nullRefPtr__ZN3pxr22HdFlatteningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdFlatteningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdFlatteningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdFlatteningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex> _asWeakPtrType(pxr::HdFlatteningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>(x);
}
pxr::HdFlatteningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdFlatteningSceneIndex>(x));
}
pxr::HdFlatteningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdFlatteningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdFlatteningSceneIndex * result = const_cast<pxr::HdFlatteningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>_fromAnyWeakPtr__ZN3pxr22HdFlatteningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>(nullptr); }
    pxr::HdFlatteningSceneIndex* rawPtr = static_cast<pxr::HdFlatteningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>_nullWeakPtr__ZN3pxr22HdFlatteningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdFlatteningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdFlatteningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdLegacyGeomSubsetSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex> _asRefPtrType(pxr::HdLegacyGeomSubsetSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex>(x);
}
pxr::HdLegacyGeomSubsetSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdLegacyGeomSubsetSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdLegacyGeomSubsetSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdLegacyGeomSubsetSceneIndex* result = const_cast<pxr::HdLegacyGeomSubsetSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdLegacyGeomSubsetSceneIndex * _Nullable _fromRawPointer__ZN3pxr28HdLegacyGeomSubsetSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdLegacyGeomSubsetSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex>_nullRefPtr__ZN3pxr28HdLegacyGeomSubsetSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdLegacyGeomSubsetSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex> _asWeakPtrType(pxr::HdLegacyGeomSubsetSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>(x);
}
pxr::HdLegacyGeomSubsetSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdLegacyGeomSubsetSceneIndex>(x));
}
pxr::HdLegacyGeomSubsetSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdLegacyGeomSubsetSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdLegacyGeomSubsetSceneIndex * result = const_cast<pxr::HdLegacyGeomSubsetSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>_fromAnyWeakPtr__ZN3pxr28HdLegacyGeomSubsetSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>(nullptr); }
    pxr::HdLegacyGeomSubsetSceneIndex* rawPtr = static_cast<pxr::HdLegacyGeomSubsetSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>_nullWeakPtr__ZN3pxr28HdLegacyGeomSubsetSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdLegacyGeomSubsetSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdLegacyGeomSubsetSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdMaterialFilteringSceneIndexBase* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase> _asRefPtrType(pxr::HdMaterialFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase>(x);
}
pxr::HdMaterialFilteringSceneIndexBase * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdMaterialFilteringSceneIndexBase * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdMaterialFilteringSceneIndexBase>& x) {
    if (!x) { return nullptr; }
    pxr::HdMaterialFilteringSceneIndexBase* result = const_cast<pxr::HdMaterialFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdMaterialFilteringSceneIndexBase * _Nullable _fromRawPointer__ZN3pxr33HdMaterialFilteringSceneIndexBaseE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdMaterialFilteringSceneIndexBase>(p);
}
pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase>_nullRefPtr__ZN3pxr33HdMaterialFilteringSceneIndexBaseE() {
    return pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdMaterialFilteringSceneIndexBase> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase> _asWeakPtrType(pxr::HdMaterialFilteringSceneIndexBase* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>(x);
}
pxr::HdMaterialFilteringSceneIndexBase * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdMaterialFilteringSceneIndexBase>(x));
}
pxr::HdMaterialFilteringSceneIndexBase * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdMaterialFilteringSceneIndexBase> & x) {
    if (!x) { return nullptr; }
    pxr::HdMaterialFilteringSceneIndexBase * result = const_cast<pxr::HdMaterialFilteringSceneIndexBase *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>_fromAnyWeakPtr__ZN3pxr33HdMaterialFilteringSceneIndexBaseE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>(nullptr); }
    pxr::HdMaterialFilteringSceneIndexBase* rawPtr = static_cast<pxr::HdMaterialFilteringSceneIndexBase*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>_nullWeakPtr__ZN3pxr33HdMaterialFilteringSceneIndexBaseE() {
    return pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdMaterialFilteringSceneIndexBase> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdMaterialFilteringSceneIndexBase> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdPrefixingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdPrefixingSceneIndex> _asRefPtrType(pxr::HdPrefixingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdPrefixingSceneIndex>(x);
}
pxr::HdPrefixingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdPrefixingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdPrefixingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdPrefixingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdPrefixingSceneIndex* result = const_cast<pxr::HdPrefixingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdPrefixingSceneIndex * _Nullable _fromRawPointer__ZN3pxr21HdPrefixingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdPrefixingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdPrefixingSceneIndex>_nullRefPtr__ZN3pxr21HdPrefixingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdPrefixingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdPrefixingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdPrefixingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex> _asWeakPtrType(pxr::HdPrefixingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>(x);
}
pxr::HdPrefixingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdPrefixingSceneIndex>(x));
}
pxr::HdPrefixingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdPrefixingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdPrefixingSceneIndex * result = const_cast<pxr::HdPrefixingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>_fromAnyWeakPtr__ZN3pxr21HdPrefixingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>(nullptr); }
    pxr::HdPrefixingSceneIndex* rawPtr = static_cast<pxr::HdPrefixingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>_nullWeakPtr__ZN3pxr21HdPrefixingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdPrefixingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdPrefixingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdRendererPluginRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::HdSceneIndexPluginRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::HdGpGenerativeProceduralPluginRegistry* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}

void* _Nonnull _address(pxr::HdGpGenerativeProceduralFilteringSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex> _asRefPtrType(pxr::HdGpGenerativeProceduralFilteringSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(x);
}
pxr::HdGpGenerativeProceduralFilteringSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdGpGenerativeProceduralFilteringSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdGpGenerativeProceduralFilteringSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdGpGenerativeProceduralFilteringSceneIndex* result = const_cast<pxr::HdGpGenerativeProceduralFilteringSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdGpGenerativeProceduralFilteringSceneIndex * _Nullable _fromRawPointer__ZN3pxr43HdGpGenerativeProceduralFilteringSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>_nullRefPtr__ZN3pxr43HdGpGenerativeProceduralFilteringSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdGpGenerativeProceduralFilteringSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex> _asWeakPtrType(pxr::HdGpGenerativeProceduralFilteringSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(x);
}
pxr::HdGpGenerativeProceduralFilteringSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(x));
}
pxr::HdGpGenerativeProceduralFilteringSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdGpGenerativeProceduralFilteringSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdGpGenerativeProceduralFilteringSceneIndex * result = const_cast<pxr::HdGpGenerativeProceduralFilteringSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>_fromAnyWeakPtr__ZN3pxr43HdGpGenerativeProceduralFilteringSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(nullptr); }
    pxr::HdGpGenerativeProceduralFilteringSceneIndex* rawPtr = static_cast<pxr::HdGpGenerativeProceduralFilteringSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>_nullWeakPtr__ZN3pxr43HdGpGenerativeProceduralFilteringSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralFilteringSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdGpGenerativeProceduralFilteringSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdGpGenerativeProceduralResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex> _asRefPtrType(pxr::HdGpGenerativeProceduralResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(x);
}
pxr::HdGpGenerativeProceduralResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdGpGenerativeProceduralResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdGpGenerativeProceduralResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdGpGenerativeProceduralResolvingSceneIndex* result = const_cast<pxr::HdGpGenerativeProceduralResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdGpGenerativeProceduralResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr43HdGpGenerativeProceduralResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>_nullRefPtr__ZN3pxr43HdGpGenerativeProceduralResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdGpGenerativeProceduralResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex> _asWeakPtrType(pxr::HdGpGenerativeProceduralResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(x);
}
pxr::HdGpGenerativeProceduralResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(x));
}
pxr::HdGpGenerativeProceduralResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdGpGenerativeProceduralResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdGpGenerativeProceduralResolvingSceneIndex * result = const_cast<pxr::HdGpGenerativeProceduralResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr43HdGpGenerativeProceduralResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(nullptr); }
    pxr::HdGpGenerativeProceduralResolvingSceneIndex* rawPtr = static_cast<pxr::HdGpGenerativeProceduralResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>_nullWeakPtr__ZN3pxr43HdGpGenerativeProceduralResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdGpGenerativeProceduralResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdGpGenerativeProceduralResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiCoordSysPrimSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex> _asRefPtrType(pxr::HdsiCoordSysPrimSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex>(x);
}
pxr::HdsiCoordSysPrimSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiCoordSysPrimSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiCoordSysPrimSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiCoordSysPrimSceneIndex* result = const_cast<pxr::HdsiCoordSysPrimSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiCoordSysPrimSceneIndex * _Nullable _fromRawPointer__ZN3pxr26HdsiCoordSysPrimSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiCoordSysPrimSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex>_nullRefPtr__ZN3pxr26HdsiCoordSysPrimSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiCoordSysPrimSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex> _asWeakPtrType(pxr::HdsiCoordSysPrimSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>(x);
}
pxr::HdsiCoordSysPrimSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiCoordSysPrimSceneIndex>(x));
}
pxr::HdsiCoordSysPrimSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiCoordSysPrimSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiCoordSysPrimSceneIndex * result = const_cast<pxr::HdsiCoordSysPrimSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>_fromAnyWeakPtr__ZN3pxr26HdsiCoordSysPrimSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>(nullptr); }
    pxr::HdsiCoordSysPrimSceneIndex* rawPtr = static_cast<pxr::HdsiCoordSysPrimSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>_nullWeakPtr__ZN3pxr26HdsiCoordSysPrimSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiCoordSysPrimSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiCoordSysPrimSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiDebuggingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex> _asRefPtrType(pxr::HdsiDebuggingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex>(x);
}
pxr::HdsiDebuggingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiDebuggingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiDebuggingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiDebuggingSceneIndex* result = const_cast<pxr::HdsiDebuggingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiDebuggingSceneIndex * _Nullable _fromRawPointer__ZN3pxr23HdsiDebuggingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiDebuggingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex>_nullRefPtr__ZN3pxr23HdsiDebuggingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiDebuggingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex> _asWeakPtrType(pxr::HdsiDebuggingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>(x);
}
pxr::HdsiDebuggingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiDebuggingSceneIndex>(x));
}
pxr::HdsiDebuggingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiDebuggingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiDebuggingSceneIndex * result = const_cast<pxr::HdsiDebuggingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>_fromAnyWeakPtr__ZN3pxr23HdsiDebuggingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>(nullptr); }
    pxr::HdsiDebuggingSceneIndex* rawPtr = static_cast<pxr::HdsiDebuggingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>_nullWeakPtr__ZN3pxr23HdsiDebuggingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiDebuggingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiDebuggingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiDomeLightCameraVisibilitySceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex> _asRefPtrType(pxr::HdsiDomeLightCameraVisibilitySceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(x);
}
pxr::HdsiDomeLightCameraVisibilitySceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiDomeLightCameraVisibilitySceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiDomeLightCameraVisibilitySceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiDomeLightCameraVisibilitySceneIndex* result = const_cast<pxr::HdsiDomeLightCameraVisibilitySceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiDomeLightCameraVisibilitySceneIndex * _Nullable _fromRawPointer__ZN3pxr39HdsiDomeLightCameraVisibilitySceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>_nullRefPtr__ZN3pxr39HdsiDomeLightCameraVisibilitySceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiDomeLightCameraVisibilitySceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex> _asWeakPtrType(pxr::HdsiDomeLightCameraVisibilitySceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(x);
}
pxr::HdsiDomeLightCameraVisibilitySceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(x));
}
pxr::HdsiDomeLightCameraVisibilitySceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiDomeLightCameraVisibilitySceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiDomeLightCameraVisibilitySceneIndex * result = const_cast<pxr::HdsiDomeLightCameraVisibilitySceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>_fromAnyWeakPtr__ZN3pxr39HdsiDomeLightCameraVisibilitySceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(nullptr); }
    pxr::HdsiDomeLightCameraVisibilitySceneIndex* rawPtr = static_cast<pxr::HdsiDomeLightCameraVisibilitySceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>_nullWeakPtr__ZN3pxr39HdsiDomeLightCameraVisibilitySceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiDomeLightCameraVisibilitySceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiDomeLightCameraVisibilitySceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiExtComputationDependencySceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex> _asRefPtrType(pxr::HdsiExtComputationDependencySceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex>(x);
}
pxr::HdsiExtComputationDependencySceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiExtComputationDependencySceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiExtComputationDependencySceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiExtComputationDependencySceneIndex* result = const_cast<pxr::HdsiExtComputationDependencySceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiExtComputationDependencySceneIndex * _Nullable _fromRawPointer__ZN3pxr38HdsiExtComputationDependencySceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiExtComputationDependencySceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex>_nullRefPtr__ZN3pxr38HdsiExtComputationDependencySceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiExtComputationDependencySceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex> _asWeakPtrType(pxr::HdsiExtComputationDependencySceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>(x);
}
pxr::HdsiExtComputationDependencySceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiExtComputationDependencySceneIndex>(x));
}
pxr::HdsiExtComputationDependencySceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiExtComputationDependencySceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiExtComputationDependencySceneIndex * result = const_cast<pxr::HdsiExtComputationDependencySceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>_fromAnyWeakPtr__ZN3pxr38HdsiExtComputationDependencySceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>(nullptr); }
    pxr::HdsiExtComputationDependencySceneIndex* rawPtr = static_cast<pxr::HdsiExtComputationDependencySceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>_nullWeakPtr__ZN3pxr38HdsiExtComputationDependencySceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiExtComputationDependencySceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiExtComputationDependencySceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdSiExtComputationPrimvarPruningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex> _asRefPtrType(pxr::HdSiExtComputationPrimvarPruningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(x);
}
pxr::HdSiExtComputationPrimvarPruningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdSiExtComputationPrimvarPruningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdSiExtComputationPrimvarPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdSiExtComputationPrimvarPruningSceneIndex* result = const_cast<pxr::HdSiExtComputationPrimvarPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdSiExtComputationPrimvarPruningSceneIndex * _Nullable _fromRawPointer__ZN3pxr42HdSiExtComputationPrimvarPruningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>_nullRefPtr__ZN3pxr42HdSiExtComputationPrimvarPruningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdSiExtComputationPrimvarPruningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex> _asWeakPtrType(pxr::HdSiExtComputationPrimvarPruningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(x);
}
pxr::HdSiExtComputationPrimvarPruningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(x));
}
pxr::HdSiExtComputationPrimvarPruningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdSiExtComputationPrimvarPruningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdSiExtComputationPrimvarPruningSceneIndex * result = const_cast<pxr::HdSiExtComputationPrimvarPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>_fromAnyWeakPtr__ZN3pxr42HdSiExtComputationPrimvarPruningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(nullptr); }
    pxr::HdSiExtComputationPrimvarPruningSceneIndex* rawPtr = static_cast<pxr::HdSiExtComputationPrimvarPruningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>_nullWeakPtr__ZN3pxr42HdSiExtComputationPrimvarPruningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdSiExtComputationPrimvarPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdSiExtComputationPrimvarPruningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiImplicitSurfaceSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex> _asRefPtrType(pxr::HdsiImplicitSurfaceSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex>(x);
}
pxr::HdsiImplicitSurfaceSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiImplicitSurfaceSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiImplicitSurfaceSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiImplicitSurfaceSceneIndex* result = const_cast<pxr::HdsiImplicitSurfaceSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiImplicitSurfaceSceneIndex * _Nullable _fromRawPointer__ZN3pxr29HdsiImplicitSurfaceSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiImplicitSurfaceSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex>_nullRefPtr__ZN3pxr29HdsiImplicitSurfaceSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiImplicitSurfaceSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex> _asWeakPtrType(pxr::HdsiImplicitSurfaceSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>(x);
}
pxr::HdsiImplicitSurfaceSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiImplicitSurfaceSceneIndex>(x));
}
pxr::HdsiImplicitSurfaceSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiImplicitSurfaceSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiImplicitSurfaceSceneIndex * result = const_cast<pxr::HdsiImplicitSurfaceSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>_fromAnyWeakPtr__ZN3pxr29HdsiImplicitSurfaceSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>(nullptr); }
    pxr::HdsiImplicitSurfaceSceneIndex* rawPtr = static_cast<pxr::HdsiImplicitSurfaceSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>_nullWeakPtr__ZN3pxr29HdsiImplicitSurfaceSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiImplicitSurfaceSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiImplicitSurfaceSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiLegacyDisplayStyleOverrideSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> _asRefPtrType(pxr::HdsiLegacyDisplayStyleOverrideSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(x);
}
pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiLegacyDisplayStyleOverrideSceneIndex* result = const_cast<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * _Nullable _fromRawPointer__ZN3pxr40HdsiLegacyDisplayStyleOverrideSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>_nullRefPtr__ZN3pxr40HdsiLegacyDisplayStyleOverrideSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> _asWeakPtrType(pxr::HdsiLegacyDisplayStyleOverrideSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(x);
}
pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(x));
}
pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiLegacyDisplayStyleOverrideSceneIndex * result = const_cast<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>_fromAnyWeakPtr__ZN3pxr40HdsiLegacyDisplayStyleOverrideSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(nullptr); }
    pxr::HdsiLegacyDisplayStyleOverrideSceneIndex* rawPtr = static_cast<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>_nullWeakPtr__ZN3pxr40HdsiLegacyDisplayStyleOverrideSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiLegacyDisplayStyleOverrideSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiLightLinkingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex> _asRefPtrType(pxr::HdsiLightLinkingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex>(x);
}
pxr::HdsiLightLinkingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiLightLinkingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiLightLinkingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiLightLinkingSceneIndex* result = const_cast<pxr::HdsiLightLinkingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiLightLinkingSceneIndex * _Nullable _fromRawPointer__ZN3pxr26HdsiLightLinkingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiLightLinkingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex>_nullRefPtr__ZN3pxr26HdsiLightLinkingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiLightLinkingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex> _asWeakPtrType(pxr::HdsiLightLinkingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>(x);
}
pxr::HdsiLightLinkingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiLightLinkingSceneIndex>(x));
}
pxr::HdsiLightLinkingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiLightLinkingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiLightLinkingSceneIndex * result = const_cast<pxr::HdsiLightLinkingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>_fromAnyWeakPtr__ZN3pxr26HdsiLightLinkingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>(nullptr); }
    pxr::HdsiLightLinkingSceneIndex* rawPtr = static_cast<pxr::HdsiLightLinkingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>_nullWeakPtr__ZN3pxr26HdsiLightLinkingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiLightLinkingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiLightLinkingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiMaterialBindingResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex> _asRefPtrType(pxr::HdsiMaterialBindingResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(x);
}
pxr::HdsiMaterialBindingResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiMaterialBindingResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiMaterialBindingResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialBindingResolvingSceneIndex* result = const_cast<pxr::HdsiMaterialBindingResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiMaterialBindingResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr38HdsiMaterialBindingResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiMaterialBindingResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>_nullRefPtr__ZN3pxr38HdsiMaterialBindingResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiMaterialBindingResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex> _asWeakPtrType(pxr::HdsiMaterialBindingResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(x);
}
pxr::HdsiMaterialBindingResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(x));
}
pxr::HdsiMaterialBindingResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiMaterialBindingResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialBindingResolvingSceneIndex * result = const_cast<pxr::HdsiMaterialBindingResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr38HdsiMaterialBindingResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(nullptr); }
    pxr::HdsiMaterialBindingResolvingSceneIndex* rawPtr = static_cast<pxr::HdsiMaterialBindingResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>_nullWeakPtr__ZN3pxr38HdsiMaterialBindingResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiMaterialBindingResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiMaterialBindingResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiMaterialOverrideResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex> _asRefPtrType(pxr::HdsiMaterialOverrideResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(x);
}
pxr::HdsiMaterialOverrideResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiMaterialOverrideResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiMaterialOverrideResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialOverrideResolvingSceneIndex* result = const_cast<pxr::HdsiMaterialOverrideResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiMaterialOverrideResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr39HdsiMaterialOverrideResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiMaterialOverrideResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>_nullRefPtr__ZN3pxr39HdsiMaterialOverrideResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiMaterialOverrideResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex> _asWeakPtrType(pxr::HdsiMaterialOverrideResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(x);
}
pxr::HdsiMaterialOverrideResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(x));
}
pxr::HdsiMaterialOverrideResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiMaterialOverrideResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialOverrideResolvingSceneIndex * result = const_cast<pxr::HdsiMaterialOverrideResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr39HdsiMaterialOverrideResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(nullptr); }
    pxr::HdsiMaterialOverrideResolvingSceneIndex* rawPtr = static_cast<pxr::HdsiMaterialOverrideResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>_nullWeakPtr__ZN3pxr39HdsiMaterialOverrideResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiMaterialOverrideResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiMaterialOverrideResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiMaterialPrimvarTransferSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex> _asRefPtrType(pxr::HdsiMaterialPrimvarTransferSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(x);
}
pxr::HdsiMaterialPrimvarTransferSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiMaterialPrimvarTransferSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiMaterialPrimvarTransferSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialPrimvarTransferSceneIndex* result = const_cast<pxr::HdsiMaterialPrimvarTransferSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiMaterialPrimvarTransferSceneIndex * _Nullable _fromRawPointer__ZN3pxr37HdsiMaterialPrimvarTransferSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiMaterialPrimvarTransferSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>_nullRefPtr__ZN3pxr37HdsiMaterialPrimvarTransferSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiMaterialPrimvarTransferSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex> _asWeakPtrType(pxr::HdsiMaterialPrimvarTransferSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(x);
}
pxr::HdsiMaterialPrimvarTransferSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(x));
}
pxr::HdsiMaterialPrimvarTransferSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiMaterialPrimvarTransferSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiMaterialPrimvarTransferSceneIndex * result = const_cast<pxr::HdsiMaterialPrimvarTransferSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>_fromAnyWeakPtr__ZN3pxr37HdsiMaterialPrimvarTransferSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(nullptr); }
    pxr::HdsiMaterialPrimvarTransferSceneIndex* rawPtr = static_cast<pxr::HdsiMaterialPrimvarTransferSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>_nullWeakPtr__ZN3pxr37HdsiMaterialPrimvarTransferSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiMaterialPrimvarTransferSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiMaterialPrimvarTransferSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdSiNodeIdentifierResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex> _asRefPtrType(pxr::HdSiNodeIdentifierResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(x);
}
pxr::HdSiNodeIdentifierResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdSiNodeIdentifierResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdSiNodeIdentifierResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdSiNodeIdentifierResolvingSceneIndex* result = const_cast<pxr::HdSiNodeIdentifierResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdSiNodeIdentifierResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr37HdSiNodeIdentifierResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdSiNodeIdentifierResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>_nullRefPtr__ZN3pxr37HdSiNodeIdentifierResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdSiNodeIdentifierResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex> _asWeakPtrType(pxr::HdSiNodeIdentifierResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(x);
}
pxr::HdSiNodeIdentifierResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(x));
}
pxr::HdSiNodeIdentifierResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdSiNodeIdentifierResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdSiNodeIdentifierResolvingSceneIndex * result = const_cast<pxr::HdSiNodeIdentifierResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr37HdSiNodeIdentifierResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(nullptr); }
    pxr::HdSiNodeIdentifierResolvingSceneIndex* rawPtr = static_cast<pxr::HdSiNodeIdentifierResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>_nullWeakPtr__ZN3pxr37HdSiNodeIdentifierResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdSiNodeIdentifierResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdSiNodeIdentifierResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiNurbsApproximatingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex> _asRefPtrType(pxr::HdsiNurbsApproximatingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex>(x);
}
pxr::HdsiNurbsApproximatingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiNurbsApproximatingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiNurbsApproximatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiNurbsApproximatingSceneIndex* result = const_cast<pxr::HdsiNurbsApproximatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiNurbsApproximatingSceneIndex * _Nullable _fromRawPointer__ZN3pxr32HdsiNurbsApproximatingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiNurbsApproximatingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex>_nullRefPtr__ZN3pxr32HdsiNurbsApproximatingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiNurbsApproximatingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex> _asWeakPtrType(pxr::HdsiNurbsApproximatingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>(x);
}
pxr::HdsiNurbsApproximatingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiNurbsApproximatingSceneIndex>(x));
}
pxr::HdsiNurbsApproximatingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiNurbsApproximatingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiNurbsApproximatingSceneIndex * result = const_cast<pxr::HdsiNurbsApproximatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>_fromAnyWeakPtr__ZN3pxr32HdsiNurbsApproximatingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>(nullptr); }
    pxr::HdsiNurbsApproximatingSceneIndex* rawPtr = static_cast<pxr::HdsiNurbsApproximatingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>_nullWeakPtr__ZN3pxr32HdsiNurbsApproximatingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiNurbsApproximatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiNurbsApproximatingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPrefixPathPruningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex> _asRefPtrType(pxr::HdsiPrefixPathPruningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex>(x);
}
pxr::HdsiPrefixPathPruningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPrefixPathPruningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPrefixPathPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrefixPathPruningSceneIndex* result = const_cast<pxr::HdsiPrefixPathPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPrefixPathPruningSceneIndex * _Nullable _fromRawPointer__ZN3pxr31HdsiPrefixPathPruningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPrefixPathPruningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex>_nullRefPtr__ZN3pxr31HdsiPrefixPathPruningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPrefixPathPruningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex> _asWeakPtrType(pxr::HdsiPrefixPathPruningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>(x);
}
pxr::HdsiPrefixPathPruningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPrefixPathPruningSceneIndex>(x));
}
pxr::HdsiPrefixPathPruningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPrefixPathPruningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrefixPathPruningSceneIndex * result = const_cast<pxr::HdsiPrefixPathPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>_fromAnyWeakPtr__ZN3pxr31HdsiPrefixPathPruningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>(nullptr); }
    pxr::HdsiPrefixPathPruningSceneIndex* rawPtr = static_cast<pxr::HdsiPrefixPathPruningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>_nullWeakPtr__ZN3pxr31HdsiPrefixPathPruningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPrefixPathPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPrefixPathPruningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPinnedCurveExpandingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex> _asRefPtrType(pxr::HdsiPinnedCurveExpandingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(x);
}
pxr::HdsiPinnedCurveExpandingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPinnedCurveExpandingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPinnedCurveExpandingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPinnedCurveExpandingSceneIndex* result = const_cast<pxr::HdsiPinnedCurveExpandingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPinnedCurveExpandingSceneIndex * _Nullable _fromRawPointer__ZN3pxr34HdsiPinnedCurveExpandingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPinnedCurveExpandingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>_nullRefPtr__ZN3pxr34HdsiPinnedCurveExpandingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPinnedCurveExpandingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex> _asWeakPtrType(pxr::HdsiPinnedCurveExpandingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(x);
}
pxr::HdsiPinnedCurveExpandingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(x));
}
pxr::HdsiPinnedCurveExpandingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPinnedCurveExpandingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPinnedCurveExpandingSceneIndex * result = const_cast<pxr::HdsiPinnedCurveExpandingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>_fromAnyWeakPtr__ZN3pxr34HdsiPinnedCurveExpandingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(nullptr); }
    pxr::HdsiPinnedCurveExpandingSceneIndex* rawPtr = static_cast<pxr::HdsiPinnedCurveExpandingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>_nullWeakPtr__ZN3pxr34HdsiPinnedCurveExpandingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPinnedCurveExpandingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPinnedCurveExpandingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPrimManagingSceneIndexObserver* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver> _asRefPtrType(pxr::HdsiPrimManagingSceneIndexObserver* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver>(x);
}
pxr::HdsiPrimManagingSceneIndexObserver * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPrimManagingSceneIndexObserver * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPrimManagingSceneIndexObserver>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimManagingSceneIndexObserver* result = const_cast<pxr::HdsiPrimManagingSceneIndexObserver *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPrimManagingSceneIndexObserver * _Nullable _fromRawPointer__ZN3pxr34HdsiPrimManagingSceneIndexObserverE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPrimManagingSceneIndexObserver>(p);
}
pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver>_nullRefPtr__ZN3pxr34HdsiPrimManagingSceneIndexObserverE() {
    return pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPrimManagingSceneIndexObserver> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver> _asWeakPtrType(pxr::HdsiPrimManagingSceneIndexObserver* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>(x);
}
pxr::HdsiPrimManagingSceneIndexObserver * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPrimManagingSceneIndexObserver>(x));
}
pxr::HdsiPrimManagingSceneIndexObserver * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPrimManagingSceneIndexObserver> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimManagingSceneIndexObserver * result = const_cast<pxr::HdsiPrimManagingSceneIndexObserver *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>_fromAnyWeakPtr__ZN3pxr34HdsiPrimManagingSceneIndexObserverE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>(nullptr); }
    pxr::HdsiPrimManagingSceneIndexObserver* rawPtr = static_cast<pxr::HdsiPrimManagingSceneIndexObserver*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>_nullWeakPtr__ZN3pxr34HdsiPrimManagingSceneIndexObserverE() {
    return pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPrimManagingSceneIndexObserver> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPrimManagingSceneIndexObserver> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPrimTypeAndPathPruningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex> _asRefPtrType(pxr::HdsiPrimTypeAndPathPruningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(x);
}
pxr::HdsiPrimTypeAndPathPruningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPrimTypeAndPathPruningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPrimTypeAndPathPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypeAndPathPruningSceneIndex* result = const_cast<pxr::HdsiPrimTypeAndPathPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPrimTypeAndPathPruningSceneIndex * _Nullable _fromRawPointer__ZN3pxr36HdsiPrimTypeAndPathPruningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>_nullRefPtr__ZN3pxr36HdsiPrimTypeAndPathPruningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPrimTypeAndPathPruningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex> _asWeakPtrType(pxr::HdsiPrimTypeAndPathPruningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(x);
}
pxr::HdsiPrimTypeAndPathPruningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(x));
}
pxr::HdsiPrimTypeAndPathPruningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPrimTypeAndPathPruningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypeAndPathPruningSceneIndex * result = const_cast<pxr::HdsiPrimTypeAndPathPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>_fromAnyWeakPtr__ZN3pxr36HdsiPrimTypeAndPathPruningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(nullptr); }
    pxr::HdsiPrimTypeAndPathPruningSceneIndex* rawPtr = static_cast<pxr::HdsiPrimTypeAndPathPruningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>_nullWeakPtr__ZN3pxr36HdsiPrimTypeAndPathPruningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPrimTypeAndPathPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPrimTypeAndPathPruningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPrimTypeNoticeBatchingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex> _asRefPtrType(pxr::HdsiPrimTypeNoticeBatchingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(x);
}
pxr::HdsiPrimTypeNoticeBatchingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPrimTypeNoticeBatchingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPrimTypeNoticeBatchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypeNoticeBatchingSceneIndex* result = const_cast<pxr::HdsiPrimTypeNoticeBatchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPrimTypeNoticeBatchingSceneIndex * _Nullable _fromRawPointer__ZN3pxr36HdsiPrimTypeNoticeBatchingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>_nullRefPtr__ZN3pxr36HdsiPrimTypeNoticeBatchingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPrimTypeNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex> _asWeakPtrType(pxr::HdsiPrimTypeNoticeBatchingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(x);
}
pxr::HdsiPrimTypeNoticeBatchingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(x));
}
pxr::HdsiPrimTypeNoticeBatchingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPrimTypeNoticeBatchingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypeNoticeBatchingSceneIndex * result = const_cast<pxr::HdsiPrimTypeNoticeBatchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>_fromAnyWeakPtr__ZN3pxr36HdsiPrimTypeNoticeBatchingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(nullptr); }
    pxr::HdsiPrimTypeNoticeBatchingSceneIndex* rawPtr = static_cast<pxr::HdsiPrimTypeNoticeBatchingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>_nullWeakPtr__ZN3pxr36HdsiPrimTypeNoticeBatchingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPrimTypeNoticeBatchingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiPrimTypePruningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex> _asRefPtrType(pxr::HdsiPrimTypePruningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex>(x);
}
pxr::HdsiPrimTypePruningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiPrimTypePruningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiPrimTypePruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypePruningSceneIndex* result = const_cast<pxr::HdsiPrimTypePruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiPrimTypePruningSceneIndex * _Nullable _fromRawPointer__ZN3pxr29HdsiPrimTypePruningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiPrimTypePruningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex>_nullRefPtr__ZN3pxr29HdsiPrimTypePruningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiPrimTypePruningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex> _asWeakPtrType(pxr::HdsiPrimTypePruningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>(x);
}
pxr::HdsiPrimTypePruningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiPrimTypePruningSceneIndex>(x));
}
pxr::HdsiPrimTypePruningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiPrimTypePruningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiPrimTypePruningSceneIndex * result = const_cast<pxr::HdsiPrimTypePruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>_fromAnyWeakPtr__ZN3pxr29HdsiPrimTypePruningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>(nullptr); }
    pxr::HdsiPrimTypePruningSceneIndex* rawPtr = static_cast<pxr::HdsiPrimTypePruningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>_nullWeakPtr__ZN3pxr29HdsiPrimTypePruningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiPrimTypePruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiPrimTypePruningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiRenderSettingsFilteringSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex> _asRefPtrType(pxr::HdsiRenderSettingsFilteringSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(x);
}
pxr::HdsiRenderSettingsFilteringSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiRenderSettingsFilteringSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiRenderSettingsFilteringSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiRenderSettingsFilteringSceneIndex* result = const_cast<pxr::HdsiRenderSettingsFilteringSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiRenderSettingsFilteringSceneIndex * _Nullable _fromRawPointer__ZN3pxr37HdsiRenderSettingsFilteringSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiRenderSettingsFilteringSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>_nullRefPtr__ZN3pxr37HdsiRenderSettingsFilteringSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiRenderSettingsFilteringSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex> _asWeakPtrType(pxr::HdsiRenderSettingsFilteringSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(x);
}
pxr::HdsiRenderSettingsFilteringSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(x));
}
pxr::HdsiRenderSettingsFilteringSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiRenderSettingsFilteringSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiRenderSettingsFilteringSceneIndex * result = const_cast<pxr::HdsiRenderSettingsFilteringSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>_fromAnyWeakPtr__ZN3pxr37HdsiRenderSettingsFilteringSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(nullptr); }
    pxr::HdsiRenderSettingsFilteringSceneIndex* rawPtr = static_cast<pxr::HdsiRenderSettingsFilteringSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>_nullWeakPtr__ZN3pxr37HdsiRenderSettingsFilteringSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiRenderSettingsFilteringSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiRenderSettingsFilteringSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiSceneGlobalsSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex> _asRefPtrType(pxr::HdsiSceneGlobalsSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex>(x);
}
pxr::HdsiSceneGlobalsSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiSceneGlobalsSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiSceneGlobalsSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiSceneGlobalsSceneIndex* result = const_cast<pxr::HdsiSceneGlobalsSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiSceneGlobalsSceneIndex * _Nullable _fromRawPointer__ZN3pxr26HdsiSceneGlobalsSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiSceneGlobalsSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex>_nullRefPtr__ZN3pxr26HdsiSceneGlobalsSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiSceneGlobalsSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex> _asWeakPtrType(pxr::HdsiSceneGlobalsSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>(x);
}
pxr::HdsiSceneGlobalsSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiSceneGlobalsSceneIndex>(x));
}
pxr::HdsiSceneGlobalsSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiSceneGlobalsSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiSceneGlobalsSceneIndex * result = const_cast<pxr::HdsiSceneGlobalsSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>_fromAnyWeakPtr__ZN3pxr26HdsiSceneGlobalsSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>(nullptr); }
    pxr::HdsiSceneGlobalsSceneIndex* rawPtr = static_cast<pxr::HdsiSceneGlobalsSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>_nullWeakPtr__ZN3pxr26HdsiSceneGlobalsSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiSceneGlobalsSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiSceneGlobalsSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiSwitchingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex> _asRefPtrType(pxr::HdsiSwitchingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex>(x);
}
pxr::HdsiSwitchingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiSwitchingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiSwitchingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiSwitchingSceneIndex* result = const_cast<pxr::HdsiSwitchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiSwitchingSceneIndex * _Nullable _fromRawPointer__ZN3pxr23HdsiSwitchingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiSwitchingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex>_nullRefPtr__ZN3pxr23HdsiSwitchingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiSwitchingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex> _asWeakPtrType(pxr::HdsiSwitchingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>(x);
}
pxr::HdsiSwitchingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiSwitchingSceneIndex>(x));
}
pxr::HdsiSwitchingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiSwitchingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiSwitchingSceneIndex * result = const_cast<pxr::HdsiSwitchingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>_fromAnyWeakPtr__ZN3pxr23HdsiSwitchingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>(nullptr); }
    pxr::HdsiSwitchingSceneIndex* rawPtr = static_cast<pxr::HdsiSwitchingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>_nullWeakPtr__ZN3pxr23HdsiSwitchingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiSwitchingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiSwitchingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiTetMeshConversionSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex> _asRefPtrType(pxr::HdsiTetMeshConversionSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex>(x);
}
pxr::HdsiTetMeshConversionSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiTetMeshConversionSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiTetMeshConversionSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiTetMeshConversionSceneIndex* result = const_cast<pxr::HdsiTetMeshConversionSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiTetMeshConversionSceneIndex * _Nullable _fromRawPointer__ZN3pxr31HdsiTetMeshConversionSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiTetMeshConversionSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex>_nullRefPtr__ZN3pxr31HdsiTetMeshConversionSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiTetMeshConversionSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex> _asWeakPtrType(pxr::HdsiTetMeshConversionSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>(x);
}
pxr::HdsiTetMeshConversionSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiTetMeshConversionSceneIndex>(x));
}
pxr::HdsiTetMeshConversionSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiTetMeshConversionSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiTetMeshConversionSceneIndex * result = const_cast<pxr::HdsiTetMeshConversionSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>_fromAnyWeakPtr__ZN3pxr31HdsiTetMeshConversionSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>(nullptr); }
    pxr::HdsiTetMeshConversionSceneIndex* rawPtr = static_cast<pxr::HdsiTetMeshConversionSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>_nullWeakPtr__ZN3pxr31HdsiTetMeshConversionSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiTetMeshConversionSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiTetMeshConversionSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiUnboundMaterialPruningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex> _asRefPtrType(pxr::HdsiUnboundMaterialPruningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(x);
}
pxr::HdsiUnboundMaterialPruningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiUnboundMaterialPruningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiUnboundMaterialPruningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiUnboundMaterialPruningSceneIndex* result = const_cast<pxr::HdsiUnboundMaterialPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiUnboundMaterialPruningSceneIndex * _Nullable _fromRawPointer__ZN3pxr36HdsiUnboundMaterialPruningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiUnboundMaterialPruningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>_nullRefPtr__ZN3pxr36HdsiUnboundMaterialPruningSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiUnboundMaterialPruningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex> _asWeakPtrType(pxr::HdsiUnboundMaterialPruningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(x);
}
pxr::HdsiUnboundMaterialPruningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(x));
}
pxr::HdsiUnboundMaterialPruningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiUnboundMaterialPruningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiUnboundMaterialPruningSceneIndex * result = const_cast<pxr::HdsiUnboundMaterialPruningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>_fromAnyWeakPtr__ZN3pxr36HdsiUnboundMaterialPruningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(nullptr); }
    pxr::HdsiUnboundMaterialPruningSceneIndex* rawPtr = static_cast<pxr::HdsiUnboundMaterialPruningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>_nullWeakPtr__ZN3pxr36HdsiUnboundMaterialPruningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiUnboundMaterialPruningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiUnboundMaterialPruningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdsiVelocityMotionResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex> _asRefPtrType(pxr::HdsiVelocityMotionResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(x);
}
pxr::HdsiVelocityMotionResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdsiVelocityMotionResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdsiVelocityMotionResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdsiVelocityMotionResolvingSceneIndex* result = const_cast<pxr::HdsiVelocityMotionResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdsiVelocityMotionResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr37HdsiVelocityMotionResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdsiVelocityMotionResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>_nullRefPtr__ZN3pxr37HdsiVelocityMotionResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdsiVelocityMotionResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex> _asWeakPtrType(pxr::HdsiVelocityMotionResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(x);
}
pxr::HdsiVelocityMotionResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(x));
}
pxr::HdsiVelocityMotionResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdsiVelocityMotionResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdsiVelocityMotionResolvingSceneIndex * result = const_cast<pxr::HdsiVelocityMotionResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr37HdsiVelocityMotionResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(nullptr); }
    pxr::HdsiVelocityMotionResolvingSceneIndex* rawPtr = static_cast<pxr::HdsiVelocityMotionResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>_nullWeakPtr__ZN3pxr37HdsiVelocityMotionResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdsiVelocityMotionResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdsiVelocityMotionResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::HdxTaskControllerSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex> _asRefPtrType(pxr::HdxTaskControllerSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex>(x);
}
pxr::HdxTaskControllerSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::HdxTaskControllerSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::HdxTaskControllerSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::HdxTaskControllerSceneIndex* result = const_cast<pxr::HdxTaskControllerSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::HdxTaskControllerSceneIndex * _Nullable _fromRawPointer__ZN3pxr27HdxTaskControllerSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::HdxTaskControllerSceneIndex>(p);
}
pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex>_nullRefPtr__ZN3pxr27HdxTaskControllerSceneIndexE() {
    return pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::HdxTaskControllerSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex> _asWeakPtrType(pxr::HdxTaskControllerSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>(x);
}
pxr::HdxTaskControllerSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::HdxTaskControllerSceneIndex>(x));
}
pxr::HdxTaskControllerSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::HdxTaskControllerSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::HdxTaskControllerSceneIndex * result = const_cast<pxr::HdxTaskControllerSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>_fromAnyWeakPtr__ZN3pxr27HdxTaskControllerSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>(nullptr); }
    pxr::HdxTaskControllerSceneIndex* rawPtr = static_cast<pxr::HdxTaskControllerSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>_nullWeakPtr__ZN3pxr27HdxTaskControllerSceneIndexE() {
    return pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::HdxTaskControllerSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::HdxTaskControllerSceneIndex> & p) {
    return (bool)p;}
#endif // #if SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT
#if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT

void* _Nonnull _address(pxr::UsdImagingDrawModeSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex> _asRefPtrType(pxr::UsdImagingDrawModeSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex>(x);
}
pxr::UsdImagingDrawModeSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingDrawModeSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingDrawModeSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingDrawModeSceneIndex* result = const_cast<pxr::UsdImagingDrawModeSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingDrawModeSceneIndex * _Nullable _fromRawPointer__ZN3pxr28UsdImagingDrawModeSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingDrawModeSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex>_nullRefPtr__ZN3pxr28UsdImagingDrawModeSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingDrawModeSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex> _asWeakPtrType(pxr::UsdImagingDrawModeSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>(x);
}
pxr::UsdImagingDrawModeSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingDrawModeSceneIndex>(x));
}
pxr::UsdImagingDrawModeSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingDrawModeSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingDrawModeSceneIndex * result = const_cast<pxr::UsdImagingDrawModeSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>_fromAnyWeakPtr__ZN3pxr28UsdImagingDrawModeSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>(nullptr); }
    pxr::UsdImagingDrawModeSceneIndex* rawPtr = static_cast<pxr::UsdImagingDrawModeSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>_nullWeakPtr__ZN3pxr28UsdImagingDrawModeSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingDrawModeSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingDrawModeSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingExtentResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex> _asRefPtrType(pxr::UsdImagingExtentResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex>(x);
}
pxr::UsdImagingExtentResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingExtentResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingExtentResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingExtentResolvingSceneIndex* result = const_cast<pxr::UsdImagingExtentResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingExtentResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr35UsdImagingExtentResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingExtentResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex>_nullRefPtr__ZN3pxr35UsdImagingExtentResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingExtentResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex> _asWeakPtrType(pxr::UsdImagingExtentResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>(x);
}
pxr::UsdImagingExtentResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingExtentResolvingSceneIndex>(x));
}
pxr::UsdImagingExtentResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingExtentResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingExtentResolvingSceneIndex * result = const_cast<pxr::UsdImagingExtentResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr35UsdImagingExtentResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>(nullptr); }
    pxr::UsdImagingExtentResolvingSceneIndex* rawPtr = static_cast<pxr::UsdImagingExtentResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>_nullWeakPtr__ZN3pxr35UsdImagingExtentResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingExtentResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingExtentResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingStageSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex> _asRefPtrType(pxr::UsdImagingStageSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex>(x);
}
pxr::UsdImagingStageSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingStageSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingStageSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingStageSceneIndex* result = const_cast<pxr::UsdImagingStageSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingStageSceneIndex * _Nullable _fromRawPointer__ZN3pxr25UsdImagingStageSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingStageSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex>_nullRefPtr__ZN3pxr25UsdImagingStageSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingStageSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex> _asWeakPtrType(pxr::UsdImagingStageSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>(x);
}
pxr::UsdImagingStageSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingStageSceneIndex>(x));
}
pxr::UsdImagingStageSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingStageSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingStageSceneIndex * result = const_cast<pxr::UsdImagingStageSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>_fromAnyWeakPtr__ZN3pxr25UsdImagingStageSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>(nullptr); }
    pxr::UsdImagingStageSceneIndex* rawPtr = static_cast<pxr::UsdImagingStageSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>_nullWeakPtr__ZN3pxr25UsdImagingStageSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingStageSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingSelectionSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex> _asRefPtrType(pxr::UsdImagingSelectionSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex>(x);
}
pxr::UsdImagingSelectionSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingSelectionSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingSelectionSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingSelectionSceneIndex* result = const_cast<pxr::UsdImagingSelectionSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingSelectionSceneIndex * _Nullable _fromRawPointer__ZN3pxr29UsdImagingSelectionSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingSelectionSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex>_nullRefPtr__ZN3pxr29UsdImagingSelectionSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingSelectionSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex> _asWeakPtrType(pxr::UsdImagingSelectionSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>(x);
}
pxr::UsdImagingSelectionSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingSelectionSceneIndex>(x));
}
pxr::UsdImagingSelectionSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingSelectionSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingSelectionSceneIndex * result = const_cast<pxr::UsdImagingSelectionSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>_fromAnyWeakPtr__ZN3pxr29UsdImagingSelectionSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>(nullptr); }
    pxr::UsdImagingSelectionSceneIndex* rawPtr = static_cast<pxr::UsdImagingSelectionSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>_nullWeakPtr__ZN3pxr29UsdImagingSelectionSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingSelectionSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingSelectionSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingMaterialBindingsResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex> _asRefPtrType(pxr::UsdImagingMaterialBindingsResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(x);
}
pxr::UsdImagingMaterialBindingsResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingMaterialBindingsResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingMaterialBindingsResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingMaterialBindingsResolvingSceneIndex* result = const_cast<pxr::UsdImagingMaterialBindingsResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingMaterialBindingsResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr45UsdImagingMaterialBindingsResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>_nullRefPtr__ZN3pxr45UsdImagingMaterialBindingsResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingMaterialBindingsResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex> _asWeakPtrType(pxr::UsdImagingMaterialBindingsResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(x);
}
pxr::UsdImagingMaterialBindingsResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(x));
}
pxr::UsdImagingMaterialBindingsResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingMaterialBindingsResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingMaterialBindingsResolvingSceneIndex * result = const_cast<pxr::UsdImagingMaterialBindingsResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr45UsdImagingMaterialBindingsResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(nullptr); }
    pxr::UsdImagingMaterialBindingsResolvingSceneIndex* rawPtr = static_cast<pxr::UsdImagingMaterialBindingsResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>_nullWeakPtr__ZN3pxr45UsdImagingMaterialBindingsResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingMaterialBindingsResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingMaterialBindingsResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingNiPrototypePropagatingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex> _asRefPtrType(pxr::UsdImagingNiPrototypePropagatingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(x);
}
pxr::UsdImagingNiPrototypePropagatingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingNiPrototypePropagatingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingNiPrototypePropagatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingNiPrototypePropagatingSceneIndex* result = const_cast<pxr::UsdImagingNiPrototypePropagatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingNiPrototypePropagatingSceneIndex * _Nullable _fromRawPointer__ZN3pxr42UsdImagingNiPrototypePropagatingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>_nullRefPtr__ZN3pxr42UsdImagingNiPrototypePropagatingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingNiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex> _asWeakPtrType(pxr::UsdImagingNiPrototypePropagatingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(x);
}
pxr::UsdImagingNiPrototypePropagatingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(x));
}
pxr::UsdImagingNiPrototypePropagatingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingNiPrototypePropagatingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingNiPrototypePropagatingSceneIndex * result = const_cast<pxr::UsdImagingNiPrototypePropagatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>_fromAnyWeakPtr__ZN3pxr42UsdImagingNiPrototypePropagatingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(nullptr); }
    pxr::UsdImagingNiPrototypePropagatingSceneIndex* rawPtr = static_cast<pxr::UsdImagingNiPrototypePropagatingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>_nullWeakPtr__ZN3pxr42UsdImagingNiPrototypePropagatingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingNiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingNiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingPiPrototypePropagatingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex> _asRefPtrType(pxr::UsdImagingPiPrototypePropagatingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(x);
}
pxr::UsdImagingPiPrototypePropagatingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingPiPrototypePropagatingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingPiPrototypePropagatingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingPiPrototypePropagatingSceneIndex* result = const_cast<pxr::UsdImagingPiPrototypePropagatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingPiPrototypePropagatingSceneIndex * _Nullable _fromRawPointer__ZN3pxr42UsdImagingPiPrototypePropagatingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>_nullRefPtr__ZN3pxr42UsdImagingPiPrototypePropagatingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingPiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex> _asWeakPtrType(pxr::UsdImagingPiPrototypePropagatingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(x);
}
pxr::UsdImagingPiPrototypePropagatingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(x));
}
pxr::UsdImagingPiPrototypePropagatingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingPiPrototypePropagatingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingPiPrototypePropagatingSceneIndex * result = const_cast<pxr::UsdImagingPiPrototypePropagatingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>_fromAnyWeakPtr__ZN3pxr42UsdImagingPiPrototypePropagatingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(nullptr); }
    pxr::UsdImagingPiPrototypePropagatingSceneIndex* rawPtr = static_cast<pxr::UsdImagingPiPrototypePropagatingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>_nullWeakPtr__ZN3pxr42UsdImagingPiPrototypePropagatingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingPiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingPiPrototypePropagatingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingRootOverridesSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex> _asRefPtrType(pxr::UsdImagingRootOverridesSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex>(x);
}
pxr::UsdImagingRootOverridesSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingRootOverridesSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingRootOverridesSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRootOverridesSceneIndex* result = const_cast<pxr::UsdImagingRootOverridesSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingRootOverridesSceneIndex * _Nullable _fromRawPointer__ZN3pxr33UsdImagingRootOverridesSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingRootOverridesSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex>_nullRefPtr__ZN3pxr33UsdImagingRootOverridesSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingRootOverridesSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex> _asWeakPtrType(pxr::UsdImagingRootOverridesSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>(x);
}
pxr::UsdImagingRootOverridesSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingRootOverridesSceneIndex>(x));
}
pxr::UsdImagingRootOverridesSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingRootOverridesSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRootOverridesSceneIndex * result = const_cast<pxr::UsdImagingRootOverridesSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>_fromAnyWeakPtr__ZN3pxr33UsdImagingRootOverridesSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>(nullptr); }
    pxr::UsdImagingRootOverridesSceneIndex* rawPtr = static_cast<pxr::UsdImagingRootOverridesSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>_nullWeakPtr__ZN3pxr33UsdImagingRootOverridesSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingRootOverridesSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingRootOverridesSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingUnloadedDrawModeSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex> _asRefPtrType(pxr::UsdImagingUnloadedDrawModeSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(x);
}
pxr::UsdImagingUnloadedDrawModeSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingUnloadedDrawModeSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingUnloadedDrawModeSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingUnloadedDrawModeSceneIndex* result = const_cast<pxr::UsdImagingUnloadedDrawModeSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingUnloadedDrawModeSceneIndex * _Nullable _fromRawPointer__ZN3pxr36UsdImagingUnloadedDrawModeSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingUnloadedDrawModeSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>_nullRefPtr__ZN3pxr36UsdImagingUnloadedDrawModeSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingUnloadedDrawModeSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex> _asWeakPtrType(pxr::UsdImagingUnloadedDrawModeSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(x);
}
pxr::UsdImagingUnloadedDrawModeSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(x));
}
pxr::UsdImagingUnloadedDrawModeSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingUnloadedDrawModeSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingUnloadedDrawModeSceneIndex * result = const_cast<pxr::UsdImagingUnloadedDrawModeSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>_fromAnyWeakPtr__ZN3pxr36UsdImagingUnloadedDrawModeSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(nullptr); }
    pxr::UsdImagingUnloadedDrawModeSceneIndex* rawPtr = static_cast<pxr::UsdImagingUnloadedDrawModeSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>_nullWeakPtr__ZN3pxr36UsdImagingUnloadedDrawModeSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingUnloadedDrawModeSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingUnloadedDrawModeSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingRenderSettingsFlatteningSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex> _asRefPtrType(pxr::UsdImagingRenderSettingsFlatteningSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(x);
}
pxr::UsdImagingRenderSettingsFlatteningSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingRenderSettingsFlatteningSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingRenderSettingsFlatteningSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRenderSettingsFlatteningSceneIndex* result = const_cast<pxr::UsdImagingRenderSettingsFlatteningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingRenderSettingsFlatteningSceneIndex * _Nullable _fromRawPointer__ZN3pxr44UsdImagingRenderSettingsFlatteningSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>_nullRefPtr__ZN3pxr44UsdImagingRenderSettingsFlatteningSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingRenderSettingsFlatteningSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex> _asWeakPtrType(pxr::UsdImagingRenderSettingsFlatteningSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(x);
}
pxr::UsdImagingRenderSettingsFlatteningSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(x));
}
pxr::UsdImagingRenderSettingsFlatteningSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingRenderSettingsFlatteningSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRenderSettingsFlatteningSceneIndex * result = const_cast<pxr::UsdImagingRenderSettingsFlatteningSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>_fromAnyWeakPtr__ZN3pxr44UsdImagingRenderSettingsFlatteningSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(nullptr); }
    pxr::UsdImagingRenderSettingsFlatteningSceneIndex* rawPtr = static_cast<pxr::UsdImagingRenderSettingsFlatteningSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>_nullWeakPtr__ZN3pxr44UsdImagingRenderSettingsFlatteningSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingRenderSettingsFlatteningSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingRenderSettingsFlatteningSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdImagingRerootingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex> _asRefPtrType(pxr::UsdImagingRerootingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex>(x);
}
pxr::UsdImagingRerootingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdImagingRerootingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdImagingRerootingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRerootingSceneIndex* result = const_cast<pxr::UsdImagingRerootingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdImagingRerootingSceneIndex * _Nullable _fromRawPointer__ZN3pxr29UsdImagingRerootingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdImagingRerootingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex>_nullRefPtr__ZN3pxr29UsdImagingRerootingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdImagingRerootingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex> _asWeakPtrType(pxr::UsdImagingRerootingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>(x);
}
pxr::UsdImagingRerootingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdImagingRerootingSceneIndex>(x));
}
pxr::UsdImagingRerootingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdImagingRerootingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdImagingRerootingSceneIndex * result = const_cast<pxr::UsdImagingRerootingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>_fromAnyWeakPtr__ZN3pxr29UsdImagingRerootingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>(nullptr); }
    pxr::UsdImagingRerootingSceneIndex* rawPtr = static_cast<pxr::UsdImagingRerootingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>_nullWeakPtr__ZN3pxr29UsdImagingRerootingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdImagingRerootingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdImagingRerootingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdSkelImagingPointsResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex> _asRefPtrType(pxr::UsdSkelImagingPointsResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(x);
}
pxr::UsdSkelImagingPointsResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdSkelImagingPointsResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdSkelImagingPointsResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdSkelImagingPointsResolvingSceneIndex* result = const_cast<pxr::UsdSkelImagingPointsResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdSkelImagingPointsResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr39UsdSkelImagingPointsResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdSkelImagingPointsResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>_nullRefPtr__ZN3pxr39UsdSkelImagingPointsResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdSkelImagingPointsResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex> _asWeakPtrType(pxr::UsdSkelImagingPointsResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(x);
}
pxr::UsdSkelImagingPointsResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(x));
}
pxr::UsdSkelImagingPointsResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdSkelImagingPointsResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdSkelImagingPointsResolvingSceneIndex * result = const_cast<pxr::UsdSkelImagingPointsResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr39UsdSkelImagingPointsResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(nullptr); }
    pxr::UsdSkelImagingPointsResolvingSceneIndex* rawPtr = static_cast<pxr::UsdSkelImagingPointsResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>_nullWeakPtr__ZN3pxr39UsdSkelImagingPointsResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdSkelImagingPointsResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdSkelImagingPointsResolvingSceneIndex> & p) {
    return (bool)p;}

void* _Nonnull _address(pxr::UsdSkelImagingSkeletonResolvingSceneIndex* _Nonnull x) {
    return reinterpret_cast<void*>(x);
}
pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex> _asRefPtrType(pxr::UsdSkelImagingSkeletonResolvingSceneIndex* _Nonnull x) {
    return pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(x);
}
pxr::UsdSkelImagingSkeletonResolvingSceneIndex * _Nullable _fromRefPtrType(const pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::Tf_RetainReleaseHelper::retain(x.operator->());
    return x.operator->();
}
pxr::UsdSkelImagingSkeletonResolvingSceneIndex * _Nullable _fromConstRefPtrType(const pxr::TfRefPtr<const pxr::UsdSkelImagingSkeletonResolvingSceneIndex>& x) {
    if (!x) { return nullptr; }
    pxr::UsdSkelImagingSkeletonResolvingSceneIndex* result = const_cast<pxr::UsdSkelImagingSkeletonResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::UsdSkelImagingSkeletonResolvingSceneIndex * _Nullable _fromRawPointer__ZN3pxr41UsdSkelImagingSkeletonResolvingSceneIndexE(void* _Nullable p) {
    return __Overlay::dynamic_cast_raw_to_frt<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(p);
}
pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>_nullRefPtr__ZN3pxr41UsdSkelImagingSkeletonResolvingSceneIndexE() {
    return pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfRefPtr<const pxr::UsdSkelImagingSkeletonResolvingSceneIndex> & p) {
    return (bool)p;
}
pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex> _asWeakPtrType(pxr::UsdSkelImagingSkeletonResolvingSceneIndex* _Nonnull x) {
    return pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(x);
}
pxr::UsdSkelImagingSkeletonResolvingSceneIndex * _Nullable _fromWeakPtrType(const pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>& x) {
    return _fromRefPtrType(pxr::TfRefPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(x));
}
pxr::UsdSkelImagingSkeletonResolvingSceneIndex * _Nullable _fromConstWeakPtrType(const pxr::TfWeakPtr<const pxr::UsdSkelImagingSkeletonResolvingSceneIndex> & x) {
    if (!x) { return nullptr; }
    pxr::UsdSkelImagingSkeletonResolvingSceneIndex * result = const_cast<pxr::UsdSkelImagingSkeletonResolvingSceneIndex *>(x.operator->());
    pxr::Tf_RetainReleaseHelper::retain(result);
    return result;
}
pxr::TfAnyWeakPtr _asAnyWeakPtr(const pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>& x) {
    return pxr::TfAnyWeakPtr(x);
}
pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>_fromAnyWeakPtr__ZN3pxr41UsdSkelImagingSkeletonResolvingSceneIndexE(const pxr::TfAnyWeakPtr& x) {
    if (!x) { return pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(nullptr); }
    pxr::UsdSkelImagingSkeletonResolvingSceneIndex* rawPtr = static_cast<pxr::UsdSkelImagingSkeletonResolvingSceneIndex*>(const_cast<pxr::TfWeakBase*>(x.GetWeakBase()));
    return pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(rawPtr);
}
pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>_nullWeakPtr__ZN3pxr41UsdSkelImagingSkeletonResolvingSceneIndexE() {
    return pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex>(nullptr);
}
bool _isNonnull(const pxr::TfWeakPtr<pxr::UsdSkelImagingSkeletonResolvingSceneIndex> & p) {
    return (bool)p;
}
bool _isNonnull(const pxr::TfWeakPtr<const pxr::UsdSkelImagingSkeletonResolvingSceneIndex> & p) {
    return (bool)p;}
#endif // #if SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT
