// ===-------------------------------------------------------------------===//
// This source file is part of github.com/apple/SwiftUsd-ast-answerer
//
// Copyright Â© 2025 Apple Inc. and the SwiftUsd-ast-answerer authors. All Rights Reserved. 
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at: 
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.     
// 
// SPDX-License-Identifier: Apache-2.0
// ===-------------------------------------------------------------------===//

// This file was generated by SwiftUsd-ast-answerer. Do not edit!
#include "swiftUsd/generated/SchemaUtil.h"

pxr::UsdPrim Overlay::GetPrim(const pxr::UsdAPISchemaBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSchemaBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdClipsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdCollectionAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdColorSpaceAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdColorSpaceDefinitionAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdModelAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdTyped& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomBasisCurves& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCurves& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomPointBased& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomGprim& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomBoundable& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomXformable& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomImageable& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCamera& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCapsule& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCapsule_1& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCone& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCube& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCylinder& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomCylinder_1& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomHermiteCurves& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomMesh& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomModelAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomPointInstancer& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomMotionAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomNurbsCurves& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomNurbsPatch& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomPlane& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomPoints& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomPrimvarsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomScope& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomSphere& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomSubset& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomTetMesh& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomVisibilityAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomXform& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdGeomXformCommonAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdVolField3DAsset& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdVolFieldAsset& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdVolFieldBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdVolOpenVDBAsset& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdVolVolume& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdMediaAssetPreviewsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdMediaSpatialAudio& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeConnectableAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeCoordSysAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeMaterial& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeNodeGraph& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeShader& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeMaterialBindingAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdShadeNodeDefAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxBoundableLightBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxLightAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxCylinderLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxDiskLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxDistantLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxNonboundableLightBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxDomeLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxDomeLight_1& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxGeometryLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxLightFilter& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxLightListAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxListAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxMeshLightAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxPluginLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxPluginLightFilter& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxPortalLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxRectLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxShadowAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxShapingAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxSphereLight& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdLuxVolumeLightAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdProcGenerativeProcedural& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRenderPass& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRenderProduct& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRenderSettingsBase& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRenderSettings& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRenderVar& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdHydraGenerativeProceduralAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRiMaterialAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRiSplineAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdRiStatementsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSemanticsLabelsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSkelAnimation& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSkelBindingAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSkelSkeleton& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSkelBlendShape& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdSkelRoot& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdUIAccessibilityAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdUIBackdrop& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdUINodeGraphNodeAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdUISceneGraphPrimAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsArticulationRootAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsCollisionAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsCollisionGroup& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsDistanceJoint& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsJoint& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsDriveAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsFilteredPairsAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsFixedJoint& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsLimitAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsMassAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsMaterialAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsMeshCollisionAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsPrismaticJoint& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsRevoluteJoint& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsRigidBodyAPI& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsScene& x) { return x.GetPrim(); }
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdPhysicsSphericalJoint& x) { return x.GetPrim(); }
#if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
pxr::UsdPrim Overlay::GetPrim(const pxr::UsdMtlxMaterialXConfigAPI& x) { return x.GetPrim(); }
#endif // #if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
bool __Overlay::convertToBool(const pxr::UsdAPISchemaBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSchemaBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdClipsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdCollectionAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdColorSpaceAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdColorSpaceDefinitionAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdModelAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdTyped& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomBasisCurves& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCurves& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomPointBased& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomGprim& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomBoundable& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomXformable& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomImageable& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCamera& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCapsule& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCapsule_1& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCone& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCube& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCylinder& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomCylinder_1& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomHermiteCurves& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomMesh& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomModelAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomPointInstancer& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomMotionAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomNurbsCurves& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomNurbsPatch& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomPlane& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomPoints& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomPrimvarsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomScope& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomSphere& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomSubset& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomTetMesh& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomVisibilityAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomXform& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdGeomXformCommonAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdVolField3DAsset& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdVolFieldAsset& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdVolFieldBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdVolOpenVDBAsset& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdVolVolume& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdMediaAssetPreviewsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdMediaSpatialAudio& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeConnectableAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeCoordSysAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeMaterial& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeNodeGraph& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeShader& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeMaterialBindingAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdShadeNodeDefAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxBoundableLightBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxLightAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxCylinderLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxDiskLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxDistantLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxNonboundableLightBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxDomeLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxDomeLight_1& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxGeometryLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxLightFilter& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxLightListAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxListAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxMeshLightAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxPluginLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxPluginLightFilter& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxPortalLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxRectLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxShadowAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxShapingAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxSphereLight& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdLuxVolumeLightAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdProcGenerativeProcedural& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRenderPass& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRenderProduct& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRenderSettingsBase& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRenderSettings& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRenderVar& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdHydraGenerativeProceduralAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRiMaterialAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRiSplineAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdRiStatementsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSemanticsLabelsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSkelAnimation& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSkelBindingAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSkelSkeleton& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSkelBlendShape& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdSkelRoot& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdUIAccessibilityAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdUIBackdrop& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdUINodeGraphNodeAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdUISceneGraphPrimAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsArticulationRootAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsCollisionAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsCollisionGroup& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsDistanceJoint& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsJoint& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsDriveAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsFilteredPairsAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsFixedJoint& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsLimitAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsMassAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsMaterialAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsMeshCollisionAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsPrismaticJoint& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsRevoluteJoint& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsRigidBodyAPI& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsScene& x) { return (bool)x; }
bool __Overlay::convertToBool(const pxr::UsdPhysicsSphericalJoint& x) { return (bool)x; }
#if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
bool __Overlay::convertToBool(const pxr::UsdMtlxMaterialXConfigAPI& x) { return (bool)x; }
#endif // #if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
