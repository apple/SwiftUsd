//
//  SchemaUtil.h
//  swiftUsd
//
//  Created by Maddy Adams on 4/17/24.
//

// This file was generated by ast-answerer. Do not edit!
#ifndef SWIFTUSD_GENERATED_SCHEMAUTIL_H
#define SWIFTUSD_GENERATED_SCHEMAUTIL_H

#include "swiftUsd/defines.h"

#include "pxr/usd/usd/apiSchemaBase.h"
#include "pxr/usd/usd/clipsAPI.h"
#include "pxr/usd/usd/collectionAPI.h"
#include "pxr/usd/usd/colorSpaceAPI.h"
#include "pxr/usd/usd/colorSpaceDefinitionAPI.h"
#include "pxr/usd/usd/modelAPI.h"
#include "pxr/usd/usd/schemaBase.h"
#include "pxr/usd/usd/typed.h"
#include "pxr/usd/usdGeom/basisCurves.h"
#include "pxr/usd/usdGeom/boundable.h"
#include "pxr/usd/usdGeom/camera.h"
#include "pxr/usd/usdGeom/capsule.h"
#include "pxr/usd/usdGeom/capsule_1.h"
#include "pxr/usd/usdGeom/cone.h"
#include "pxr/usd/usdGeom/cube.h"
#include "pxr/usd/usdGeom/curves.h"
#include "pxr/usd/usdGeom/cylinder.h"
#include "pxr/usd/usdGeom/cylinder_1.h"
#include "pxr/usd/usdGeom/gprim.h"
#include "pxr/usd/usdGeom/hermiteCurves.h"
#include "pxr/usd/usdGeom/imageable.h"
#include "pxr/usd/usdGeom/mesh.h"
#include "pxr/usd/usdGeom/modelAPI.h"
#include "pxr/usd/usdGeom/motionAPI.h"
#include "pxr/usd/usdGeom/nurbsCurves.h"
#include "pxr/usd/usdGeom/nurbsPatch.h"
#include "pxr/usd/usdGeom/plane.h"
#include "pxr/usd/usdGeom/pointBased.h"
#include "pxr/usd/usdGeom/pointInstancer.h"
#include "pxr/usd/usdGeom/points.h"
#include "pxr/usd/usdGeom/primvarsAPI.h"
#include "pxr/usd/usdGeom/scope.h"
#include "pxr/usd/usdGeom/sphere.h"
#include "pxr/usd/usdGeom/subset.h"
#include "pxr/usd/usdGeom/tetMesh.h"
#include "pxr/usd/usdGeom/visibilityAPI.h"
#include "pxr/usd/usdGeom/xform.h"
#include "pxr/usd/usdGeom/xformCommonAPI.h"
#include "pxr/usd/usdGeom/xformable.h"
#include "pxr/usd/usdHydra/generativeProceduralAPI.h"
#include "pxr/usd/usdLux/boundableLightBase.h"
#include "pxr/usd/usdLux/cylinderLight.h"
#include "pxr/usd/usdLux/diskLight.h"
#include "pxr/usd/usdLux/distantLight.h"
#include "pxr/usd/usdLux/domeLight.h"
#include "pxr/usd/usdLux/domeLight_1.h"
#include "pxr/usd/usdLux/geometryLight.h"
#include "pxr/usd/usdLux/lightAPI.h"
#include "pxr/usd/usdLux/lightFilter.h"
#include "pxr/usd/usdLux/lightListAPI.h"
#include "pxr/usd/usdLux/listAPI.h"
#include "pxr/usd/usdLux/meshLightAPI.h"
#include "pxr/usd/usdLux/nonboundableLightBase.h"
#include "pxr/usd/usdLux/pluginLight.h"
#include "pxr/usd/usdLux/pluginLightFilter.h"
#include "pxr/usd/usdLux/portalLight.h"
#include "pxr/usd/usdLux/rectLight.h"
#include "pxr/usd/usdLux/shadowAPI.h"
#include "pxr/usd/usdLux/shapingAPI.h"
#include "pxr/usd/usdLux/sphereLight.h"
#include "pxr/usd/usdLux/volumeLightAPI.h"
#include "pxr/usd/usdMedia/assetPreviewsAPI.h"
#include "pxr/usd/usdMedia/spatialAudio.h"
#if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
#include "pxr/usd/usdMtlx/materialXConfigAPI.h"
#endif // #if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
#include "pxr/usd/usdPhysics/articulationRootAPI.h"
#include "pxr/usd/usdPhysics/collisionAPI.h"
#include "pxr/usd/usdPhysics/collisionGroup.h"
#include "pxr/usd/usdPhysics/distanceJoint.h"
#include "pxr/usd/usdPhysics/driveAPI.h"
#include "pxr/usd/usdPhysics/filteredPairsAPI.h"
#include "pxr/usd/usdPhysics/fixedJoint.h"
#include "pxr/usd/usdPhysics/joint.h"
#include "pxr/usd/usdPhysics/limitAPI.h"
#include "pxr/usd/usdPhysics/massAPI.h"
#include "pxr/usd/usdPhysics/materialAPI.h"
#include "pxr/usd/usdPhysics/meshCollisionAPI.h"
#include "pxr/usd/usdPhysics/prismaticJoint.h"
#include "pxr/usd/usdPhysics/revoluteJoint.h"
#include "pxr/usd/usdPhysics/rigidBodyAPI.h"
#include "pxr/usd/usdPhysics/scene.h"
#include "pxr/usd/usdPhysics/sphericalJoint.h"
#include "pxr/usd/usdProc/generativeProcedural.h"
#include "pxr/usd/usdRender/pass.h"
#include "pxr/usd/usdRender/product.h"
#include "pxr/usd/usdRender/settings.h"
#include "pxr/usd/usdRender/settingsBase.h"
#include "pxr/usd/usdRender/var.h"
#include "pxr/usd/usdRi/materialAPI.h"
#include "pxr/usd/usdRi/splineAPI.h"
#include "pxr/usd/usdRi/statementsAPI.h"
#include "pxr/usd/usdSemantics/labelsAPI.h"
#include "pxr/usd/usdShade/connectableAPI.h"
#include "pxr/usd/usdShade/coordSysAPI.h"
#include "pxr/usd/usdShade/material.h"
#include "pxr/usd/usdShade/materialBindingAPI.h"
#include "pxr/usd/usdShade/nodeDefAPI.h"
#include "pxr/usd/usdShade/nodeGraph.h"
#include "pxr/usd/usdShade/shader.h"
#include "pxr/usd/usdSkel/animation.h"
#include "pxr/usd/usdSkel/bindingAPI.h"
#include "pxr/usd/usdSkel/blendShape.h"
#include "pxr/usd/usdSkel/root.h"
#include "pxr/usd/usdSkel/skeleton.h"
#include "pxr/usd/usdUI/accessibilityAPI.h"
#include "pxr/usd/usdUI/backdrop.h"
#include "pxr/usd/usdUI/nodeGraphNodeAPI.h"
#include "pxr/usd/usdUI/sceneGraphPrimAPI.h"
#include "pxr/usd/usdVol/field3DAsset.h"
#include "pxr/usd/usdVol/fieldAsset.h"
#include "pxr/usd/usdVol/fieldBase.h"
#include "pxr/usd/usdVol/openVDBAsset.h"
#include "pxr/usd/usdVol/volume.h"

namespace Overlay {
    pxr::UsdPrim GetPrim(const pxr::UsdAPISchemaBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSchemaBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdClipsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdCollectionAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdColorSpaceAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdColorSpaceDefinitionAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdModelAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdTyped& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomBasisCurves& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCurves& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomPointBased& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomGprim& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomBoundable& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomXformable& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomImageable& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCamera& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCapsule& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCapsule_1& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCone& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCube& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCylinder& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomCylinder_1& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomHermiteCurves& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomMesh& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomModelAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomPointInstancer& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomMotionAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomNurbsCurves& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomNurbsPatch& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomPlane& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomPoints& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomPrimvarsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomScope& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomSphere& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomSubset& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomTetMesh& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomVisibilityAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomXform& x);
    pxr::UsdPrim GetPrim(const pxr::UsdGeomXformCommonAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdVolField3DAsset& x);
    pxr::UsdPrim GetPrim(const pxr::UsdVolFieldAsset& x);
    pxr::UsdPrim GetPrim(const pxr::UsdVolFieldBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdVolOpenVDBAsset& x);
    pxr::UsdPrim GetPrim(const pxr::UsdVolVolume& x);
    pxr::UsdPrim GetPrim(const pxr::UsdMediaAssetPreviewsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdMediaSpatialAudio& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeConnectableAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeCoordSysAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeMaterial& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeNodeGraph& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeShader& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeMaterialBindingAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdShadeNodeDefAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxBoundableLightBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxLightAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxCylinderLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxDiskLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxDistantLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxNonboundableLightBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxDomeLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxDomeLight_1& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxGeometryLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxLightFilter& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxLightListAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxListAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxMeshLightAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxPluginLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxPluginLightFilter& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxPortalLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxRectLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxShadowAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxShapingAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxSphereLight& x);
    pxr::UsdPrim GetPrim(const pxr::UsdLuxVolumeLightAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdProcGenerativeProcedural& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRenderPass& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRenderProduct& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRenderSettingsBase& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRenderSettings& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRenderVar& x);
    pxr::UsdPrim GetPrim(const pxr::UsdHydraGenerativeProceduralAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRiMaterialAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRiSplineAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdRiStatementsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSemanticsLabelsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSkelAnimation& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSkelBindingAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSkelSkeleton& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSkelBlendShape& x);
    pxr::UsdPrim GetPrim(const pxr::UsdSkelRoot& x);
    pxr::UsdPrim GetPrim(const pxr::UsdUIAccessibilityAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdUIBackdrop& x);
    pxr::UsdPrim GetPrim(const pxr::UsdUINodeGraphNodeAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdUISceneGraphPrimAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsArticulationRootAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsCollisionAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsCollisionGroup& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsDistanceJoint& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsJoint& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsDriveAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsFilteredPairsAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsFixedJoint& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsLimitAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsMassAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsMaterialAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsMeshCollisionAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsPrismaticJoint& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsRevoluteJoint& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsRigidBodyAPI& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsScene& x);
    pxr::UsdPrim GetPrim(const pxr::UsdPhysicsSphericalJoint& x);
#if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
    pxr::UsdPrim GetPrim(const pxr::UsdMtlxMaterialXConfigAPI& x);
#endif // #if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
}

namespace __Overlay {
    bool convertToBool(const pxr::UsdAPISchemaBase& x);
    bool convertToBool(const pxr::UsdSchemaBase& x);
    bool convertToBool(const pxr::UsdClipsAPI& x);
    bool convertToBool(const pxr::UsdCollectionAPI& x);
    bool convertToBool(const pxr::UsdColorSpaceAPI& x);
    bool convertToBool(const pxr::UsdColorSpaceDefinitionAPI& x);
    bool convertToBool(const pxr::UsdModelAPI& x);
    bool convertToBool(const pxr::UsdTyped& x);
    bool convertToBool(const pxr::UsdGeomBasisCurves& x);
    bool convertToBool(const pxr::UsdGeomCurves& x);
    bool convertToBool(const pxr::UsdGeomPointBased& x);
    bool convertToBool(const pxr::UsdGeomGprim& x);
    bool convertToBool(const pxr::UsdGeomBoundable& x);
    bool convertToBool(const pxr::UsdGeomXformable& x);
    bool convertToBool(const pxr::UsdGeomImageable& x);
    bool convertToBool(const pxr::UsdGeomCamera& x);
    bool convertToBool(const pxr::UsdGeomCapsule& x);
    bool convertToBool(const pxr::UsdGeomCapsule_1& x);
    bool convertToBool(const pxr::UsdGeomCone& x);
    bool convertToBool(const pxr::UsdGeomCube& x);
    bool convertToBool(const pxr::UsdGeomCylinder& x);
    bool convertToBool(const pxr::UsdGeomCylinder_1& x);
    bool convertToBool(const pxr::UsdGeomHermiteCurves& x);
    bool convertToBool(const pxr::UsdGeomMesh& x);
    bool convertToBool(const pxr::UsdGeomModelAPI& x);
    bool convertToBool(const pxr::UsdGeomPointInstancer& x);
    bool convertToBool(const pxr::UsdGeomMotionAPI& x);
    bool convertToBool(const pxr::UsdGeomNurbsCurves& x);
    bool convertToBool(const pxr::UsdGeomNurbsPatch& x);
    bool convertToBool(const pxr::UsdGeomPlane& x);
    bool convertToBool(const pxr::UsdGeomPoints& x);
    bool convertToBool(const pxr::UsdGeomPrimvarsAPI& x);
    bool convertToBool(const pxr::UsdGeomScope& x);
    bool convertToBool(const pxr::UsdGeomSphere& x);
    bool convertToBool(const pxr::UsdGeomSubset& x);
    bool convertToBool(const pxr::UsdGeomTetMesh& x);
    bool convertToBool(const pxr::UsdGeomVisibilityAPI& x);
    bool convertToBool(const pxr::UsdGeomXform& x);
    bool convertToBool(const pxr::UsdGeomXformCommonAPI& x);
    bool convertToBool(const pxr::UsdVolField3DAsset& x);
    bool convertToBool(const pxr::UsdVolFieldAsset& x);
    bool convertToBool(const pxr::UsdVolFieldBase& x);
    bool convertToBool(const pxr::UsdVolOpenVDBAsset& x);
    bool convertToBool(const pxr::UsdVolVolume& x);
    bool convertToBool(const pxr::UsdMediaAssetPreviewsAPI& x);
    bool convertToBool(const pxr::UsdMediaSpatialAudio& x);
    bool convertToBool(const pxr::UsdShadeConnectableAPI& x);
    bool convertToBool(const pxr::UsdShadeCoordSysAPI& x);
    bool convertToBool(const pxr::UsdShadeMaterial& x);
    bool convertToBool(const pxr::UsdShadeNodeGraph& x);
    bool convertToBool(const pxr::UsdShadeShader& x);
    bool convertToBool(const pxr::UsdShadeMaterialBindingAPI& x);
    bool convertToBool(const pxr::UsdShadeNodeDefAPI& x);
    bool convertToBool(const pxr::UsdLuxBoundableLightBase& x);
    bool convertToBool(const pxr::UsdLuxLightAPI& x);
    bool convertToBool(const pxr::UsdLuxCylinderLight& x);
    bool convertToBool(const pxr::UsdLuxDiskLight& x);
    bool convertToBool(const pxr::UsdLuxDistantLight& x);
    bool convertToBool(const pxr::UsdLuxNonboundableLightBase& x);
    bool convertToBool(const pxr::UsdLuxDomeLight& x);
    bool convertToBool(const pxr::UsdLuxDomeLight_1& x);
    bool convertToBool(const pxr::UsdLuxGeometryLight& x);
    bool convertToBool(const pxr::UsdLuxLightFilter& x);
    bool convertToBool(const pxr::UsdLuxLightListAPI& x);
    bool convertToBool(const pxr::UsdLuxListAPI& x);
    bool convertToBool(const pxr::UsdLuxMeshLightAPI& x);
    bool convertToBool(const pxr::UsdLuxPluginLight& x);
    bool convertToBool(const pxr::UsdLuxPluginLightFilter& x);
    bool convertToBool(const pxr::UsdLuxPortalLight& x);
    bool convertToBool(const pxr::UsdLuxRectLight& x);
    bool convertToBool(const pxr::UsdLuxShadowAPI& x);
    bool convertToBool(const pxr::UsdLuxShapingAPI& x);
    bool convertToBool(const pxr::UsdLuxSphereLight& x);
    bool convertToBool(const pxr::UsdLuxVolumeLightAPI& x);
    bool convertToBool(const pxr::UsdProcGenerativeProcedural& x);
    bool convertToBool(const pxr::UsdRenderPass& x);
    bool convertToBool(const pxr::UsdRenderProduct& x);
    bool convertToBool(const pxr::UsdRenderSettingsBase& x);
    bool convertToBool(const pxr::UsdRenderSettings& x);
    bool convertToBool(const pxr::UsdRenderVar& x);
    bool convertToBool(const pxr::UsdHydraGenerativeProceduralAPI& x);
    bool convertToBool(const pxr::UsdRiMaterialAPI& x);
    bool convertToBool(const pxr::UsdRiSplineAPI& x);
    bool convertToBool(const pxr::UsdRiStatementsAPI& x);
    bool convertToBool(const pxr::UsdSemanticsLabelsAPI& x);
    bool convertToBool(const pxr::UsdSkelAnimation& x);
    bool convertToBool(const pxr::UsdSkelBindingAPI& x);
    bool convertToBool(const pxr::UsdSkelSkeleton& x);
    bool convertToBool(const pxr::UsdSkelBlendShape& x);
    bool convertToBool(const pxr::UsdSkelRoot& x);
    bool convertToBool(const pxr::UsdUIAccessibilityAPI& x);
    bool convertToBool(const pxr::UsdUIBackdrop& x);
    bool convertToBool(const pxr::UsdUINodeGraphNodeAPI& x);
    bool convertToBool(const pxr::UsdUISceneGraphPrimAPI& x);
    bool convertToBool(const pxr::UsdPhysicsArticulationRootAPI& x);
    bool convertToBool(const pxr::UsdPhysicsCollisionAPI& x);
    bool convertToBool(const pxr::UsdPhysicsCollisionGroup& x);
    bool convertToBool(const pxr::UsdPhysicsDistanceJoint& x);
    bool convertToBool(const pxr::UsdPhysicsJoint& x);
    bool convertToBool(const pxr::UsdPhysicsDriveAPI& x);
    bool convertToBool(const pxr::UsdPhysicsFilteredPairsAPI& x);
    bool convertToBool(const pxr::UsdPhysicsFixedJoint& x);
    bool convertToBool(const pxr::UsdPhysicsLimitAPI& x);
    bool convertToBool(const pxr::UsdPhysicsMassAPI& x);
    bool convertToBool(const pxr::UsdPhysicsMaterialAPI& x);
    bool convertToBool(const pxr::UsdPhysicsMeshCollisionAPI& x);
    bool convertToBool(const pxr::UsdPhysicsPrismaticJoint& x);
    bool convertToBool(const pxr::UsdPhysicsRevoluteJoint& x);
    bool convertToBool(const pxr::UsdPhysicsRigidBodyAPI& x);
    bool convertToBool(const pxr::UsdPhysicsScene& x);
    bool convertToBool(const pxr::UsdPhysicsSphericalJoint& x);
#if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
    bool convertToBool(const pxr::UsdMtlxMaterialXConfigAPI& x);
#endif // #if SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT
}
#endif /* SWIFTUSD_GENERATED_SCHEMAUTIL_H */
