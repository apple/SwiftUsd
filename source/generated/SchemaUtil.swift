// ===-------------------------------------------------------------------===//
// This source file is part of github.com/apple/SwiftUsd-ast-answerer
//
// Copyright Â© 2025 Apple Inc. and the SwiftUsd-ast-answerer authors. All Rights Reserved. 
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at: 
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.     
// 
// SPDX-License-Identifier: Apache-2.0
// ===-------------------------------------------------------------------===//

// This file was generated by SwiftUsd-ast-answerer. Do not edit!


extension Bool {
    public init(_ x: pxr.UsdAPISchemaBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSchemaBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdClipsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdCollectionAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdColorSpaceAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdColorSpaceDefinitionAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdModelAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdTyped) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomBasisCurves) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCurves) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomPointBased) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomGprim) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomBoundable) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomXformable) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomImageable) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCamera) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCapsule) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCapsule_1) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCone) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCube) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCylinder) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomCylinder_1) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomHermiteCurves) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomMesh) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomModelAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomPointInstancer) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomMotionAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomNurbsCurves) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomNurbsPatch) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomPlane) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomPoints) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomPrimvarsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomScope) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomSphere) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomSubset) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomTetMesh) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomVisibilityAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomXform) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdGeomXformCommonAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdVolField3DAsset) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdVolFieldAsset) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdVolFieldBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdVolOpenVDBAsset) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdVolVolume) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdMediaAssetPreviewsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdMediaSpatialAudio) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeConnectableAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeCoordSysAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeMaterial) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeNodeGraph) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeShader) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeMaterialBindingAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdShadeNodeDefAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxBoundableLightBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxLightAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxCylinderLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxDiskLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxDistantLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxNonboundableLightBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxDomeLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxDomeLight_1) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxGeometryLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxLightFilter) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxLightListAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxListAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxMeshLightAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxPluginLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxPluginLightFilter) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxPortalLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxRectLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxShadowAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxShapingAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxSphereLight) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdLuxVolumeLightAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdProcGenerativeProcedural) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRenderPass) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRenderProduct) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRenderSettingsBase) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRenderSettings) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRenderVar) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdHydraGenerativeProceduralAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRiMaterialAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRiSplineAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdRiStatementsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSemanticsLabelsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSkelAnimation) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSkelBindingAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSkelSkeleton) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSkelBlendShape) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdSkelRoot) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdUIAccessibilityAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdUIBackdrop) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdUINodeGraphNodeAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdUISceneGraphPrimAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsArticulationRootAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsCollisionAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsCollisionGroup) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsDistanceJoint) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsJoint) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsDriveAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsFilteredPairsAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsFixedJoint) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsLimitAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsMassAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsMaterialAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsMeshCollisionAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsPrismaticJoint) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsRevoluteJoint) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsRigidBodyAPI) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsScene) { self.init(__Overlay.convertToBool(x)) }
    public init(_ x: pxr.UsdPhysicsSphericalJoint) { self.init(__Overlay.convertToBool(x)) }
#if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
    public init(_ x: pxr.UsdMtlxMaterialXConfigAPI) { self.init(__Overlay.convertToBool(x)) }
#endif // #if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
}
