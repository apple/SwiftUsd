//===----------------------------------------------------------------------===//
// This source file is part of github.com/apple/SwiftUsd
//
// Copyright Â© 2025 Apple Inc. and the SwiftUsd project authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//===----------------------------------------------------------------------===//

// This file was generated by SwiftUsd-ast-answerer. Do not edit!


// Conformance blocked by no Swift type name:

// MARK: Available (blocked by no Swift type name)

// std::optional<std::allocator<pxr::TfType>>
// std::optional<std::allocator<std::pair<pxr::TfType const, unsigned char>>>
// std::optional<std::allocator<std::pair<pxr::TfType const, unsigned long>>>
// std::optional<std::allocator<std::pair<std::string const, pxr::TfType>>>
// std::optional<std::allocator<std::pair<unsigned char const, pxr::TfType>>>
// std::vector<std::pair<pxr::TfDiagnosticType, std::string>, std::allocator<std::pair<pxr::TfDiagnosticType, std::string>>>
// std::pair<pxr::TfDiagnosticType, std::string>
// std::unordered_map<int, unsigned long, pxr::TfHash, std::equal_to<int>, std::allocator<std::pair<int const, unsigned long>>>
// std::unordered_map<long long, unsigned long, pxr::TfHash, std::equal_to<long long>, std::allocator<std::pair<long long const, unsigned long>>>
// std::unordered_map<std::string, std::variant<<int, _Bool, std::string>>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::variant<<int, _Bool, std::string>>>>>
// std::unordered_map<std::string, std::vector<std::string, std::allocator<std::string>>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::vector<std::string, std::allocator<std::string>>>>>
// std::unordered_map<std::string, unsigned long, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, unsigned long>>>
// std::unordered_map<unsigned int, unsigned long, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned long>>>
// std::unordered_map<unsigned long long, unsigned long, pxr::TfHash, std::equal_to<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long>>>
// pxr::TfRefPtr<pxr::TfRefBase>
// std::optional<std::allocator<std::pair<pxr::VdfConnection const *, pxr::TfCompressedBits>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::TfNotice::Probe>
// std::optional<std::allocator<pxr::TfWeakPtr<pxr::TfNotice::Probe>>>
// pxr::TfHashMap<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int>>>
// pxr::TfHashMap<int, unsigned long, pxr::TfHash, std::equal_to<int>, std::allocator<std::pair<int const, unsigned long>>>
// pxr::TfHashMap<long long, unsigned long, pxr::TfHash, std::equal_to<long long>, std::allocator<std::pair<long long const, unsigned long>>>
// pxr::TfHashMap<std::string, std::variant<<int, _Bool, std::string>>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::variant<<int, _Bool, std::string>>>>>
// pxr::TfHashMap<std::string, std::vector<std::string, std::allocator<std::string>>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::vector<std::string, std::allocator<std::string>>>>>
// pxr::TfHashMap<std::string, unsigned long, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, unsigned long>>>
// pxr::TfHashMap<unsigned int, std::vector<unsigned int, std::allocator<unsigned int>>, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<unsigned int, std::allocator<unsigned int>>>>>
// pxr::TfHashMap<unsigned int, unsigned long, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned long>>>
// pxr::TfHashMap<unsigned long long, unsigned long, pxr::TfHash, std::equal_to<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long>>>
// pxr::TfSingleton<pxr::TfDiagnosticMgr>
// std::vector<pxr::TfMallocTag::CallTree::PathNode, std::allocator<pxr::TfMallocTag::CallTree::PathNode>>
// std::vector<pxr::TfMallocTag::CallTree::CallSite, std::allocator<pxr::TfMallocTag::CallTree::CallSite>>
// std::vector<pxr::TfMallocTag::CallStackInfo, std::allocator<pxr::TfMallocTag::CallStackInfo>>
// std::optional<std::allocator<std::pair<void const *, pxr::TfRefPtrTracker::Trace>>>
// pxr::TfSingleton<pxr::TfRefPtrTracker>
// pxr::TfSingleton<pxr::TfRegTest>
// pxr::TfHashSet<int, std::hash<int>, std::equal_to<int>, std::allocator<int>>
// pxr::TfHashSet<std::string, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::string>>
// std::unordered_set<std::string, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::string>>
// pxr::TfHashMap<pxr::TfToken, pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::list<pxr::TfToken, std::allocator<pxr::TfToken>>
// std::map<pxr::TfToken, pxr::TfToken, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// std::map<pxr::TfToken, std::set<std::string, std::less<std::string>, std::allocator<std::string>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::set<std::string, std::less<std::string>, std::allocator<std::string>>>>>
// std::map<pxr::TfToken, int, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, int>>>
// std::map<pxr::TfToken, unsigned long, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::map<std::string, pxr::TfToken, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::TfToken>>>
// std::map<std::string, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::multimap<unsigned long long, pxr::TfToken, std::less<unsigned long long>, std::allocator<std::pair<unsigned long long const, pxr::TfToken>>>
// std::optional<pxr::TfToken>
// std::optional<std::allocator<pxr::TfToken>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::SdrParserPlugin *>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::function<void, <const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet &, unsigned int *>>>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::function<void, <unsigned int, class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet *>>>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::vector<std::pair<unsigned long long, double>, std::allocator<std::pair<unsigned long long, double>>>>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::SdrShaderProperty const *>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::HdVolumeFieldDescriptor const *>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, double>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, int>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::string>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::optional<std::allocator<std::pair<pxr::TfType const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::optional<std::allocator<std::pair<std::string const, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<unsigned long long const, pxr::TfToken>>>
// std::set<pxr::TfToken, std::less<pxr::TfToken>, std::allocator<pxr::TfToken>>
// std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// std::unordered_map<pxr::TfToken, int, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, int>>>
// std::unordered_map<pxr::TfToken, std::atomic<int>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::atomic<int>>>>
// std::unordered_map<pxr::TfToken, unsigned long, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::unordered_map<std::pair<pxr::TfToken, pxr::TfToken>, unsigned int, pxr::TfHash, std::equal_to<std::pair<pxr::TfToken, pxr::TfToken>>, std::allocator<std::pair<std::pair<pxr::TfToken, pxr::TfToken> const, unsigned int>>>
// std::unordered_set<pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<pxr::TfToken>>
// std::vector<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, std::allocator<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>
// std::vector<std::pair<pxr::TfToken, bool>, std::allocator<std::pair<pxr::TfToken, bool>>>
// std::pair<pxr::TfToken, bool>
// std::pair<pxr::TfToken, double>
// std::pair<pxr::TfToken, int>
// std::pair<pxr::TfToken, nullptr_t>
// std::pair<pxr::TfToken, unsigned int>
// std::pair<pxr::TfToken, unsigned long>
// std::pair<pxr::TfToken const, std::set<std::string, std::less<std::string>, std::allocator<std::string>>>
// std::pair<pxr::TfToken const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::pair<pxr::TfToken const, std::vector<std::pair<unsigned long long, double>, std::allocator<std::pair<unsigned long long, double>>>>
// std::pair<pxr::TfToken const, std::string>
// std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>
// std::pair<pxr::TfToken const, unsigned long long>
// std::pair<std::string const, pxr::TfToken>
// std::pair<std::string const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::pair<std::pair<pxr::TfToken, pxr::TfToken> const, unsigned int>
// std::pair<unsigned long long const, pxr::TfToken>
// pxr::TfHashMap<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// pxr::TfHashMap<pxr::TfToken, unsigned int, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned int>>>
// pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>
// std::unordered_map<pxr::TfToken, std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>>>>
// std::unordered_map<pxr::TfToken, std::unordered_map<pxr::TfToken, std::pair<pxr::TfToken, unsigned long>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>>>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::unordered_map<pxr::TfToken, std::pair<pxr::TfToken, unsigned long>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>>>>>>
// std::unordered_map<pxr::TfToken, int, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, int>>>
// std::unordered_map<pxr::TfToken, std::pair<pxr::TfToken, unsigned long>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>>>
// std::unordered_map<pxr::TfToken, unsigned int, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned int>>>
// std::unordered_map<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>
// std::pair<pxr::TfToken const, std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>>
// std::pair<pxr::TfToken const, std::unordered_map<pxr::TfToken, std::pair<pxr::TfToken, unsigned long>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::pair<pxr::TfToken, unsigned long>>>>>
// pxr::TfHashMap<pxr::TfToken, std::set<pxr::TfToken, pxr::TfTokenFastArbitraryLessThan, std::allocator<pxr::TfToken>>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::set<pxr::TfToken, pxr::TfTokenFastArbitraryLessThan, std::allocator<pxr::TfToken>>>>>
// std::unordered_map<pxr::TfToken, std::set<pxr::TfToken, pxr::TfTokenFastArbitraryLessThan, std::allocator<pxr::TfToken>>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::set<pxr::TfToken, pxr::TfTokenFastArbitraryLessThan, std::allocator<pxr::TfToken>>>>>
// std::pair<pxr::TfToken const, std::set<pxr::TfToken, pxr::TfTokenFastArbitraryLessThan, std::allocator<pxr::TfToken>>>
// std::map<pxr::TfToken, pxr::GfBBox3d, pxr::TfTokenFastArbitraryLessThan, std::allocator<std::pair<pxr::TfToken const, pxr::GfBBox3d>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::GfBBox3d>>>
// std::pair<pxr::GfBBox3d, float>
// std::pair<pxr::TfToken const, pxr::GfBBox3d>
// std::vector<pxr::GfMatrix4d, std::allocator<pxr::GfMatrix4d>>
// std::vector<std::pair<pxr::GfMatrix4d, int>, std::allocator<std::pair<pxr::GfMatrix4d, int>>>
// std::pair<pxr::GfMatrix4d, int>
// std::vector<pxr::GfVec4f, std::allocator<pxr::GfVec4f>>
// std::vector<std::pair<unsigned int, pxr::GfVec4f>, std::allocator<std::pair<unsigned int, pxr::GfVec4f>>>
// std::pair<unsigned int, pxr::GfVec4f>
// std::optional<pxr::pxr_half::half>
// std::vector<pxr::pxr_half::half, std::allocator<pxr::pxr_half::half>>
// std::pair<pxr::pxr_half::half, pxr::pxr_half::half>
// std::vector<pxr::GfVec4i, std::allocator<pxr::GfVec4i>>
// std::vector<pxr::GfVec3d, std::allocator<pxr::GfVec3d>>
// std::vector<pxr::GfVec3f, std::allocator<pxr::GfVec3f>>
// std::pair<pxr::GfVec3i const, std::pair<unsigned long, pxr::GfVec3i>>
// std::pair<unsigned long, pxr::GfVec3i>
// std::vector<pxr::GfRange3d, std::allocator<pxr::GfRange3d>>
// std::optional<pxr::GfVec2f>
// std::vector<pxr::GfVec2f, std::allocator<pxr::GfVec2f>>
// std::vector<std::vector<pxr::GfVec2f, std::allocator<pxr::GfVec2f>>, std::allocator<std::vector<pxr::GfVec2f, std::allocator<pxr::GfVec2f>>>>
// std::vector<pxr::GfVec2d, std::allocator<pxr::GfVec2d>>
// std::vector<std::vector<pxr::GfVec2d, std::allocator<pxr::GfVec2d>>, std::allocator<std::vector<pxr::GfVec2d, std::allocator<pxr::GfVec2d>>>>
// std::vector<pxr::GfVec2h, std::allocator<pxr::GfVec2h>>
// std::vector<std::vector<pxr::GfVec2h, std::allocator<pxr::GfVec2h>>, std::allocator<std::vector<pxr::GfVec2h, std::allocator<pxr::GfVec2h>>>>
// std::optional<std::allocator<pxr::GfVec2i>>
// std::optional<std::allocator<std::pair<unsigned long const, pxr::GfVec2i>>>
// std::unordered_map<unsigned long, pxr::GfVec2i, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, pxr::GfVec2i>>>
// std::vector<pxr::GfVec2i, std::allocator<pxr::GfVec2i>>
// std::pair<unsigned long, pxr::GfVec2i>
// std::vector<pxr::GfMatrix3f, std::allocator<pxr::GfMatrix3f>>
// std::vector<pxr::GfDualQuatd, std::allocator<pxr::GfDualQuatd>>
// std::vector<pxr::GfQuatd, std::allocator<pxr::GfQuatd>>
// std::optional<std::allocator<pxr::GfInterval>>
// std::vector<pxr::GfInterval, std::allocator<pxr::GfInterval>>
// std::vector<pxr::GfMatrix3d, std::allocator<pxr::GfMatrix3d>>
// std::vector<pxr::GfMatrix4f, std::allocator<pxr::GfMatrix4f>>
// std::optional<std::allocator<std::pair<std::string const, pxr::JsValue>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::TraceAggregateNode>
// pxr::TfSingleton<pxr::TraceCategory>
// std::optional<std::allocator<std::pair<pxr::TraceKey const, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::vector<std::pair<unsigned long long, pxr::TraceThreadId>, std::allocator<std::pair<unsigned long long, pxr::TraceThreadId>>>>>>
// std::pair<pxr::TfToken const, std::vector<std::pair<unsigned long long, pxr::TraceThreadId>, std::allocator<std::pair<unsigned long long, pxr::TraceThreadId>>>>
// std::pair<unsigned long long, pxr::TraceThreadId>
// std::optional<std::allocator<pxr::TraceDynamicKey>>
// pxr::TfSingleton<pxr::TraceCollector>
// std::pair<pxr::TfToken const, pxr::TraceEventData>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::TraceReporter>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::TraceReporterDataSourceCollector>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::PlugPlugin>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::PlugRegistry>
// pxr::TfSingleton<pxr::PlugRegistry>
// pxr::VtArray<pxr::GfFrustum>
// pxr::VtArray<pxr::GfMultiInterval>
// pxr::VtArray<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>>
// pxr::VtArray<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// pxr::VtArray<std::vector<double, std::allocator<double>>>
// pxr::VtArray<std::vector<std::string, std::allocator<std::string>>>
// pxr::VtArray<pxr::VtArray<int>>
// std::optional<pxr::VtArray<pxr::GfVec2d>>
// std::optional<pxr::VtArray<pxr::GfVec4f>>
// std::optional<pxr::VtArray<pxr::TfToken>>
// std::vector<pxr::VtArray<pxr::GfMatrix4d>, std::allocator<pxr::VtArray<pxr::GfMatrix4d>>>
// std::vector<pxr::VtArray<pxr::GfVec3f>, std::allocator<pxr::VtArray<pxr::GfVec3f>>>
// std::vector<pxr::VtArray<pxr::TfToken>, std::allocator<pxr::VtArray<pxr::TfToken>>>
// std::vector<pxr::VtArray<int>, std::allocator<pxr::VtArray<int>>>
// std::pair<pxr::VtArray<int>, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::optional<std::allocator<std::pair<double const, pxr::VtDictionary>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>
// std::optional<std::allocator<std::pair<double const, pxr::VtValue>>>
// std::optional<std::allocator<std::pair<std::string const, pxr::VtValue>>>
// std::vector<pxr::TsSplineSampleSource, std::allocator<pxr::TsSplineSampleSource>>
// pxr::TsSplineSamples<pxr::GfVec2d>
// pxr::TsSplineSamples<pxr::GfVec2f>
// pxr::TsSplineSamples<pxr::GfVec2h>
// pxr::TsSplineSamplesWithSources<pxr::GfVec2d>
// pxr::TsSplineSamplesWithSources<pxr::GfVec2f>
// pxr::TsSplineSamplesWithSources<pxr::GfVec2h>
// std::pair<std::string, pxr::ArResolvedPath>
// pxr::TfSingleton<pxr::KindRegistry>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfAbstractData>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfAbstractData const>
// pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// pxr::VtArray<pxr::SdfPath>
// pxr::VtArray<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// pxr::VtArray<std::vector<std::pair<pxr::SdfPath, pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>>
// std::list<pxr::SdfPath, std::allocator<pxr::SdfPath>>
// std::map<pxr::SdfPath, bool, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, bool>>>
// std::map<pxr::SdfPath, pxr::GfMatrix4d, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::GfMatrix4d>>>
// std::map<pxr::SdfPath, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::map<pxr::SdfPath, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::map<pxr::SdfPath, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::map<pxr::SdfPath, int, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>
// std::map<pxr::SdfPath, unsigned long, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// std::map<pxr::TfToken, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::map<std::tuple<<class pxrInternal_v0_25_8__pxrReserved__::SdfPath, class pxrInternal_v0_25_8__pxrReserved__::SdfPath, int>>, pxr::VtArray<int>, std::less<std::tuple<<class pxrInternal_v0_25_8__pxrReserved__::SdfPath, class pxrInternal_v0_25_8__pxrReserved__::SdfPath, int>>>, std::allocator<std::pair<std::tuple<<class pxrInternal_v0_25_8__pxrReserved__::SdfPath, class pxrInternal_v0_25_8__pxrReserved__::SdfPath, int>> const, pxr::VtArray<int>>>>
// std::map<std::string, pxr::SdfPath, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::SdfPath>>>
// std::multimap<pxr::SdfPath, pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::optional<pxr::SdfPath>
// std::optional<std::allocator<pxr::SdfPath>>
// std::optional<std::allocator<std::pair<pxr::SdfPath, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, bool>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::UsdPhysicsJointDesc *>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::UsdPhysicsRigidBodyDesc *>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// std::optional<std::map<pxr::SdfPath, pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>>
// std::optional<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::optional<std::pair<pxr::SdfPath, pxr::TfToken>>
// std::unordered_map<pxr::SdfPath, pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::unordered_map<pxr::SdfPath, std::unordered_set<pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<pxr::TfToken>>, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::unordered_set<pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<pxr::TfToken>>>>>
// std::unordered_map<pxr::SdfPath, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// std::unordered_map<pxr::TfToken, std::unordered_set<std::pair<pxr::SdfPath, pxr::TfToken>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::TfToken>>, std::allocator<std::pair<pxr::SdfPath, pxr::TfToken>>>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::unordered_set<std::pair<pxr::SdfPath, pxr::TfToken>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::TfToken>>, std::allocator<std::pair<pxr::SdfPath, pxr::TfToken>>>>>>
// std::unordered_map<std::pair<pxr::SdfPath, pxr::TfToken>, pxr::TfToken, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::TfToken>>, std::allocator<std::pair<std::pair<pxr::SdfPath, pxr::TfToken> const, pxr::TfToken>>>
// std::unordered_set<pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>
// std::unordered_set<std::pair<pxr::SdfPath, pxr::SdfPath>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::SdfPath>>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>
// std::unordered_set<std::pair<pxr::SdfPath, pxr::TfToken>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::TfToken>>, std::allocator<std::pair<pxr::SdfPath, pxr::TfToken>>>
// std::vector<std::vector<std::pair<pxr::SdfPath, int>, std::allocator<std::pair<pxr::SdfPath, int>>>, std::allocator<std::vector<std::pair<pxr::SdfPath, int>, std::allocator<std::pair<pxr::SdfPath, int>>>>>
// std::vector<std::pair<pxr::SdfPath, std::vector<double, std::allocator<double>>>, std::allocator<std::pair<pxr::SdfPath, std::vector<double, std::allocator<double>>>>>
// std::vector<std::pair<pxr::TfToken, pxr::SdfPath>, std::allocator<std::pair<pxr::TfToken, pxr::SdfPath>>>
// std::vector<std::pair<pxr::TfToken, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::allocator<std::pair<pxr::TfToken, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::vector<std::pair<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>, std::allocator<std::pair<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::vector<std::pair<pxr::SdfPath const, pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::pair<pxr::SdfPath, bool>
// std::pair<pxr::SdfPath, pxr::TfToken>
// std::pair<pxr::SdfPath, std::optional<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::pair<pxr::SdfPath, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::SdfPath, std::vector<double, std::allocator<double>>>
// std::pair<pxr::SdfPath, int>
// std::pair<pxr::SdfPath, unsigned long>
// std::pair<pxr::TfToken, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::pair<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::SdfPath const, pxr::GfMatrix4d>
// std::pair<pxr::SdfPath const, std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::SdfPath const, std::unordered_map<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>>
// std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::SdfPath const, std::unordered_set<pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<pxr::TfToken>>>
// std::pair<pxr::SdfPath const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::pair<pxr::SdfPath const, std::vector<std::string, std::allocator<std::string>>>
// std::pair<pxr::SdfPath const, unsigned int>
// std::pair<pxr::TfToken const, std::unordered_set<std::pair<pxr::SdfPath, pxr::TfToken>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::TfToken>>, std::allocator<std::pair<pxr::SdfPath, pxr::TfToken>>>>
// std::pair<pxr::TfToken const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::pair<std::tuple<<class pxrInternal_v0_25_8__pxrReserved__::SdfPath, class pxrInternal_v0_25_8__pxrReserved__::SdfPath, int>> const, pxr::VtArray<int>>
// std::pair<std::string const, pxr::SdfPath>
// std::pair<std::pair<pxr::SdfPath, pxr::TfToken> const, pxr::TfToken>
// pxr::TfHashMap<pxr::SdfPath, pxr::GfMatrix4d, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::GfMatrix4d>>>
// pxr::TfHashMap<pxr::SdfPath, pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// pxr::TfHashMap<pxr::SdfPath, pxr::TfHashSet<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfHashSet<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// pxr::TfHashMap<pxr::SdfPath, pxr::TfToken, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfToken>>>
// pxr::TfHashMap<pxr::SdfPath, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// pxr::TfHashMap<pxr::SdfPath, int, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>
// pxr::TfHashMap<pxr::SdfPath, unsigned int, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned int>>>
// pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// pxr::TfHashMultiMap<pxr::SdfPath, pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::map<pxr::SdfPath, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::SdfPath, pxr::GfMatrix4d, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::GfMatrix4d>>>
// std::unordered_map<pxr::SdfPath, pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::unordered_map<pxr::SdfPath, pxr::TfHashSet<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfHashSet<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::SdfPath, pxr::TfToken, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfToken>>>
// std::unordered_map<pxr::SdfPath, std::unordered_map<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::unordered_map<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>>>>
// std::unordered_map<pxr::SdfPath, std::unordered_set<pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::SdfPath, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::SdfPath, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::SdfPath, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::unordered_map<pxr::SdfPath, int, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>
// std::unordered_map<pxr::SdfPath, unsigned int, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned int>>>
// std::unordered_map<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>
// std::unordered_multimap<pxr::SdfPath, pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>
// std::pair<pxr::SdfPath const, pxr::TfHashSet<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::SdfPath const, std::unordered_set<pxr::SdfPath, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::map<pxr::SdfPath, std::vector<std::string, std::allocator<std::string>>, pxr::SdfPath::FastLessThan, std::allocator<std::pair<pxr::SdfPath const, std::vector<std::string, std::allocator<std::string>>>>>
// std::map<pxr::SdfPath, int, pxr::SdfPath::FastLessThan, std::allocator<std::pair<pxr::SdfPath const, int>>>
// pxr::VtArray<pxr::SdfSpecifier>
// pxr::VtArray<pxr::SdfPermission>
// pxr::VtArray<pxr::SdfVariability>
// std::optional<std::allocator<pxr::SdfUnregisteredValue>>
// std::optional<std::allocator<std::pair<pxr::SdfUnregisteredValue const, unsigned long>>>
// pxr::VtArray<pxr::SdfValueBlock>
// pxr::VtArray<pxr::SdfAnimationBlock>
// pxr::VtArray<pxr::SdfAssetPath>
// std::optional<pxr::SdfAssetPath>
// std::optional<pxr::VtArray<pxr::SdfAssetPath>>
// std::pair<pxr::SdfAssetPath, pxr::TfToken>
// std::pair<pxr::SdfListOpType const, bool>
// pxr::VtArray<pxr::SdfOpaqueValue>
// std::optional<std::allocator<pxr::SdfPathExpression>>
// std::vector<pxr::SdfPathExpression::ExpressionReference, std::allocator<pxr::SdfPathExpression::ExpressionReference>>
// std::vector<pxr::SdfPathExpression::Op, std::allocator<pxr::SdfPathExpression::Op>>
// std::vector<std::pair<pxr::SdfPathExpression::Op, int>, std::allocator<std::pair<pxr::SdfPathExpression::Op, int>>>
// std::pair<pxr::SdfPathExpression::Op, int>
// std::vector<pxr::SdfPathPattern::Component, std::allocator<pxr::SdfPathPattern::Component>>
// std::vector<pxr::SdfPredicateExpression::Op, std::allocator<pxr::SdfPredicateExpression::Op>>
// std::vector<std::pair<pxr::SdfPredicateExpression::Op, int>, std::allocator<std::pair<pxr::SdfPredicateExpression::Op, int>>>
// std::pair<pxr::SdfPredicateExpression::Op, int>
// pxr::VtArray<pxr::SdfTimeCode>
// pxr::SdfHandleTo<pxr::SdfAttributeSpec>
// pxr::SdfHandleTo<pxr::SdfPropertySpec>
// pxr::SdfHandleTo<pxr::SdfSpec>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfSchemaBase>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::SdfSchemaBase::FieldDefinition>>>
// std::pair<pxr::SdfSchemaBase::SpecDefinition, bool>
// pxr::TfSingleton<pxr::SdfSchema>
// pxr::SdfChildrenViewTrivialPredicate<pxr::SdfHandle<pxr::SdfPropertySpec>>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfAttributeSpec>>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfPropertySpec>>
// pxr::SdfIdentityMapEditProxyValuePolicy<pxr::VtDictionary>
// pxr::SdfIdentityMapEditProxyValuePolicy<std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string>>>>
// std::vector<std::pair<std::string, pxr::SdfChangeList::SubLayerChangeType>, std::allocator<std::pair<std::string, pxr::SdfChangeList::SubLayerChangeType>>>
// std::vector<pxr::SdfCrateInfo::Section, std::allocator<pxr::SdfCrateInfo::Section>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfData const>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfFileFormat const>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfLayer>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfLayer const>
// std::optional<std::allocator<pxr::TfRefPtr<pxr::SdfLayer>>>
// std::optional<std::allocator<pxr::TfWeakPtr<pxr::SdfLayer>>>
// std::optional<std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, std::string>>>
// std::optional<std::allocator<std::pair<pxr::TfRefPtr<pxr::SdfLayer> const, pxr::TfRefPtr<pxr::SdfLayer>>>>
// std::optional<std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, pxr::UsdStage *>>>
// std::optional<std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::vector<std::pair<pxr::SdfPath, pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>>>>
// pxr::SdfHandleTo<pxr::SdfLayer>
// pxr::VtArray<std::vector<pxr::SdfLayerOffset, std::allocator<pxr::SdfLayerOffset>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfLayerStateDelegateBase>
// pxr::TfHashMap<pxr::SdfPayload, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPayload>, std::allocator<std::pair<pxr::SdfPayload const, unsigned long>>>
// pxr::VtArray<pxr::SdfPayload>
// std::list<pxr::SdfPayload, std::allocator<pxr::SdfPayload>>
// std::optional<pxr::SdfPayload>
// std::optional<std::allocator<pxr::SdfPayload>>
// std::optional<std::allocator<std::pair<pxr::SdfPayload const, unsigned long>>>
// std::set<pxr::SdfPayload, std::less<pxr::SdfPayload>, std::allocator<pxr::SdfPayload>>
// std::unordered_map<pxr::SdfPayload, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPayload>, std::allocator<std::pair<pxr::SdfPayload const, unsigned long>>>
// std::pair<pxr::SdfPayload, unsigned long>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfPrimSpec>>
// pxr::SdfChildrenViewTrivialPredicate<pxr::SdfHandle<pxr::SdfPrimSpec>>
// pxr::SdfHandleTo<pxr::SdfPrimSpec>
// pxr::SdfHandleTo<pxr::SdfPseudoRootSpec>
// std::optional<std::allocator<pxr::SdfReference>>
// std::optional<std::allocator<std::pair<pxr::SdfReference const, unsigned long>>>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfRelationshipSpec>>
// pxr::SdfHandleTo<pxr::SdfRelationshipSpec>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfUsdFileFormat const>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfUsdaData const>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfUsdaFileFormat const>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::SdfUsdcFileFormat const>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfVariantSetSpec>>
// pxr::SdfChildrenViewTrivialPredicate<pxr::SdfHandle<pxr::SdfVariantSetSpec>>
// pxr::SdfHandleTo<pxr::SdfVariantSetSpec>
// pxr::SdfChildrenViewTrivialAdapter<pxr::SdfHandle<pxr::SdfVariantSpec>>
// pxr::SdfChildrenViewTrivialPredicate<pxr::SdfHandle<pxr::SdfVariantSpec>>
// pxr::SdfHandleTo<pxr::SdfVariantSpec>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::AbsPathPattern>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::BracedPredExpr>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::DotDots>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PathPatSep>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PathPattern>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PathPatternElems>
// pxr::SdfPathPatternActions::PathPatternAction<void>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::AbsoluteStart>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PathPatStretch>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PrimPathPatternElemText>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PropPathPatternElemText>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PrimPathPatternElem>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::PropPathPatternElem>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::ReflexiveRelative>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPathPatternParser::DotDot>
// pxr::SdfPathPatternActions::PathPatternAction<pxr::SdfPredicateExpressionParser::PredExpr>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::Digits>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::Exp>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::False>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::Frac>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::Inf>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredArgVal>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredAtom>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredColonArgs>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredExpr>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredFactor>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredKWArg>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredKWArgPrefix>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredOperator>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredParenArgs>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredParenPosArg>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::QuotedString>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::ReservedWord>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::True>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::UnquotedString>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::UnquotedStringChar>
// pxr::SdfPredicateExpressionParser::PredAction<void>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::NotKW>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::AndKW>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::OrKW>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::ImpliedAnd>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredOpenGroup>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredCloseGroup>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredFuncName>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredArgInt>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredArgBool>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredArgFloat>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredArgString>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredKWArgName>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredBareCall>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredParenCall>
// pxr::SdfPredicateExpressionParser::PredAction<pxr::SdfPredicateExpressionParser::PredColonCall>
// std::unordered_multimap<pxr::TfToken, pxr::SdrShaderNodeDiscoveryResult, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdrShaderNodeDiscoveryResult>>>
// std::vector<std::vector<pxr::SdrShaderNodeDiscoveryResult, std::allocator<pxr::SdrShaderNodeDiscoveryResult>>, std::allocator<std::vector<pxr::SdrShaderNodeDiscoveryResult, std::allocator<pxr::SdrShaderNodeDiscoveryResult>>>>
// std::pair<pxr::TfToken const, pxr::SdrShaderNodeDiscoveryResult>
// pxr::TfTypeFunctions<pxr::SdrParserPlugin, void>
// std::optional<std::allocator<pxr::PcpMapFunction>>
// std::optional<std::allocator<pxr::PcpNodeRef>>
// std::optional<std::allocator<std::pair<unsigned long, pxr::PcpNodeRef>>>
// std::map<pxr::PcpArcType, unsigned long, std::less<pxr::PcpArcType>, std::allocator<std::pair<pxr::PcpArcType const, unsigned long>>>
// std::optional<std::allocator<std::pair<pxr::PcpArcType const, unsigned long>>>
// std::pair<pxr::PcpArcType const, unsigned long>
// std::optional<std::allocator<pxr::PcpLayerStackSite>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::PcpLayerStack>
// std::optional<std::allocator<pxr::TfRefPtr<pxr::PcpLayerStack>>>
// std::optional<std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>
// std::optional<std::allocator<std::pair<pxr::UsdPrim const, pxr::GfMatrix4d>>>
// std::optional<std::allocator<std::pair<pxr::UsdPrim const, pxr::SdfPath>>>
// std::optional<std::allocator<std::pair<pxr::UsdPrim const, pxr::TfToken>>>
// std::optional<std::allocator<std::pair<pxr::UsdPrim const, pxr::VtArray<pxr::VtArray<int>>>>>
// std::optional<std::allocator<std::pair<pxr::UsdPrim const, int>>>
// std::optional<pxr::UsdTimeCode>
// std::vector<pxr::UsdTimeCode, std::allocator<pxr::UsdTimeCode>>
// std::optional<std::allocator<pxr::UsdObject>>
// pxr::TfSingleton<pxr::UsdSchemaRegistry>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::UsdStage>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::UsdStage const>
// std::optional<std::allocator<pxr::TfRefPtr<pxr::UsdStage>>>
// std::vector<std::pair<pxr::SdfPath, pxr::UsdStageLoadRules::Rule>, std::allocator<std::pair<pxr::SdfPath, pxr::UsdStageLoadRules::Rule>>>
// std::pair<pxr::SdfPath, pxr::UsdStageLoadRules::Rule>
// std::optional<std::allocator<std::pair<pxr::UsdStage *, pxr::UsdStageCache::Id>>>
// std::optional<std::allocator<std::pair<pxr::UsdStageCache::Id const, pxr::TfRefPtr<pxr::UsdStage>>>>
// std::pair<pxr::UsdStageCache::Id, bool>
// std::vector<pxr::UsdGeomXformOp::Type, std::allocator<pxr::UsdGeomXformOp::Type>>
// std::pair<pxr::TfToken, pxr::UsdShadeAttributeType>
// std::optional<std::allocator<std::pair<std::string const, std::vector<pxr::UsdShadeOutput, std::allocator<pxr::UsdShadeOutput>>>>>
// pxr::SdrParserPluginFactory<pxr::UsdShadeShaderDefParserPlugin>
// pxr::SdrDiscoveryPluginFactory<pxr::UsdHydraDiscoveryPlugin>
// std::optional<std::allocator<std::pair<pxr::UsdUtilsCoalescingDiagnosticDelegateSharedItem const, unsigned long>>>
// std::pair<pxr::UsdUtilsCoalescingDiagnosticDelegateSharedItem, unsigned long>
// std::set<pxr::UsdUtilsRegisteredVariantSet, std::less<pxr::UsdUtilsRegisteredVariantSet>, std::allocator<pxr::UsdUtilsRegisteredVariantSet>>
// std::vector<pxr::UsdPhysicsObjectType, std::allocator<pxr::UsdPhysicsObjectType>>
// std::pair<pxr::UsdPhysicsJointDOF, pxr::TfToken>
// std::vector<pxr::UsdPhysicsRigidBodyMaterialDesc, std::allocator<pxr::UsdPhysicsRigidBodyMaterialDesc>>
// std::vector<pxr::UsdPhysicsSceneDesc, std::allocator<pxr::UsdPhysicsSceneDesc>>
// std::vector<pxr::UsdPhysicsCollisionGroupDesc, std::allocator<pxr::UsdPhysicsCollisionGroupDesc>>
// std::vector<pxr::UsdPhysicsSphereShapeDesc, std::allocator<pxr::UsdPhysicsSphereShapeDesc>>
// std::vector<pxr::UsdPhysicsCapsuleShapeDesc, std::allocator<pxr::UsdPhysicsCapsuleShapeDesc>>
// std::vector<pxr::UsdPhysicsCapsule1ShapeDesc, std::allocator<pxr::UsdPhysicsCapsule1ShapeDesc>>
// std::vector<pxr::UsdPhysicsCylinderShapeDesc, std::allocator<pxr::UsdPhysicsCylinderShapeDesc>>
// std::vector<pxr::UsdPhysicsCylinder1ShapeDesc, std::allocator<pxr::UsdPhysicsCylinder1ShapeDesc>>
// std::vector<pxr::UsdPhysicsConeShapeDesc, std::allocator<pxr::UsdPhysicsConeShapeDesc>>
// std::vector<pxr::UsdPhysicsPlaneShapeDesc, std::allocator<pxr::UsdPhysicsPlaneShapeDesc>>
// std::vector<pxr::UsdPhysicsCustomShapeDesc, std::allocator<pxr::UsdPhysicsCustomShapeDesc>>
// std::vector<pxr::UsdPhysicsCubeShapeDesc, std::allocator<pxr::UsdPhysicsCubeShapeDesc>>
// std::vector<pxr::UsdPhysicsMeshShapeDesc, std::allocator<pxr::UsdPhysicsMeshShapeDesc>>
// std::vector<pxr::UsdPhysicsSpherePoint, std::allocator<pxr::UsdPhysicsSpherePoint>>
// std::vector<pxr::UsdPhysicsSpherePointsShapeDesc, std::allocator<pxr::UsdPhysicsSpherePointsShapeDesc>>
// std::vector<pxr::UsdPhysicsRigidBodyDesc, std::allocator<pxr::UsdPhysicsRigidBodyDesc>>
// std::pair<pxr::UsdPhysicsJointDOF, pxr::UsdPhysicsJointLimit>
// std::pair<pxr::UsdPhysicsJointDOF, pxr::UsdPhysicsJointDrive>
// std::vector<pxr::UsdPhysicsArticulationDesc, std::allocator<pxr::UsdPhysicsArticulationDesc>>
// std::vector<pxr::UsdPhysicsCustomJointDesc, std::allocator<pxr::UsdPhysicsCustomJointDesc>>
// std::vector<pxr::UsdPhysicsFixedJointDesc, std::allocator<pxr::UsdPhysicsFixedJointDesc>>
// std::vector<pxr::UsdPhysicsD6JointDesc, std::allocator<pxr::UsdPhysicsD6JointDesc>>
// std::vector<pxr::UsdPhysicsPrismaticJointDesc, std::allocator<pxr::UsdPhysicsPrismaticJointDesc>>
// std::vector<pxr::UsdPhysicsSphericalJointDesc, std::allocator<pxr::UsdPhysicsSphericalJointDesc>>
// std::vector<pxr::UsdPhysicsRevoluteJointDesc, std::allocator<pxr::UsdPhysicsRevoluteJointDesc>>
// std::vector<pxr::UsdPhysicsDistanceJointDesc, std::allocator<pxr::UsdPhysicsDistanceJointDesc>>
// std::vector<pxr::UsdPhysicsMassProperties, std::allocator<pxr::UsdPhysicsMassProperties>>
// std::optional<std::allocator<std::pair<pxr::VdfMask const, unsigned long>>>
// std::optional<std::allocator<std::pair<std::pair<pxr::VdfMask, pxr::VdfMask> const, pxr::VdfMask>>>
// std::unique_ptr<pxr::VdfMask, std::default_delete<pxr::VdfMask>>::_CheckArrayPointerConversion<pxr::VdfMask>
// std::unique_ptr<pxr::VdfMask, std::default_delete<pxr::VdfMask>>::_CheckArrayPointerConversion<std::unique_ptr<pxr::VdfMask, std::default_delete<pxr::VdfMask>>>
// std::optional<std::allocator<std::pair<pxr::VdfMaskedOutput const, unsigned long>>>
// pxr::VdfTypedVector<bool>
// pxr::VdfTypedVector<char>
// pxr::VdfTypedVector<pxr::GfDualQuatd>
// pxr::VdfTypedVector<pxr::GfDualQuatf>
// pxr::VdfTypedVector<pxr::GfDualQuath>
// pxr::VdfTypedVector<pxr::GfFrustum>
// pxr::VdfTypedVector<pxr::GfInterval>
// pxr::VdfTypedVector<pxr::GfMatrix2d>
// pxr::VdfTypedVector<pxr::GfMatrix2f>
// pxr::VdfTypedVector<pxr::GfMatrix3d>
// pxr::VdfTypedVector<pxr::GfMatrix3f>
// pxr::VdfTypedVector<pxr::GfMatrix4d>
// pxr::VdfTypedVector<pxr::GfMatrix4f>
// pxr::VdfTypedVector<pxr::GfMultiInterval>
// pxr::VdfTypedVector<pxr::GfQuatd>
// pxr::VdfTypedVector<pxr::GfQuaternion>
// pxr::VdfTypedVector<pxr::GfQuatf>
// pxr::VdfTypedVector<pxr::GfQuath>
// pxr::VdfTypedVector<pxr::GfRange1d>
// pxr::VdfTypedVector<pxr::GfRange1f>
// pxr::VdfTypedVector<pxr::GfRange2d>
// pxr::VdfTypedVector<pxr::GfRange2f>
// pxr::VdfTypedVector<pxr::GfRange3d>
// pxr::VdfTypedVector<pxr::GfRange3f>
// pxr::VdfTypedVector<pxr::GfRect2i>
// pxr::VdfTypedVector<pxr::GfVec2d>
// pxr::VdfTypedVector<pxr::GfVec2f>
// pxr::VdfTypedVector<pxr::GfVec2h>
// pxr::VdfTypedVector<pxr::GfVec2i>
// pxr::VdfTypedVector<pxr::GfVec3d>
// pxr::VdfTypedVector<pxr::GfVec3f>
// pxr::VdfTypedVector<pxr::GfVec3h>
// pxr::VdfTypedVector<pxr::GfVec3i>
// pxr::VdfTypedVector<pxr::GfVec4d>
// pxr::VdfTypedVector<pxr::GfVec4f>
// pxr::VdfTypedVector<pxr::GfVec4h>
// pxr::VdfTypedVector<pxr::GfVec4i>
// pxr::VdfTypedVector<pxr::SdfAssetPath>
// pxr::VdfTypedVector<pxr::SdfOpaqueValue>
// pxr::VdfTypedVector<pxr::SdfPath>
// pxr::VdfTypedVector<pxr::SdfPathExpression>
// pxr::VdfTypedVector<pxr::SdfTimeCode>
// pxr::VdfTypedVector<pxr::TfToken>
// pxr::VdfTypedVector<pxr::VtArray<pxr::pxr_half::half>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfMatrix2d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfMatrix3d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfMatrix4d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfQuatd>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfQuatf>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfQuath>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec2d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec2f>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec2h>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec2i>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec3d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec3f>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec3h>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec3i>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec4d>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec4f>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec4h>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::GfVec4i>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::TfToken>>
// pxr::VdfTypedVector<pxr::VtArray<bool>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::SdfAssetPath>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::SdfOpaqueValue>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::SdfPath>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::SdfPathExpression>>
// pxr::VdfTypedVector<pxr::VtArray<pxr::SdfTimeCode>>
// pxr::VdfTypedVector<pxr::VtArray<double>>
// pxr::VdfTypedVector<pxr::VtArray<float>>
// pxr::VdfTypedVector<pxr::VtArray<long long>>
// pxr::VdfTypedVector<pxr::VtArray<int>>
// pxr::VdfTypedVector<pxr::VtArray<std::string>>
// pxr::VdfTypedVector<pxr::VtArray<unsigned long long>>
// pxr::VdfTypedVector<pxr::VtArray<unsigned char>>
// pxr::VdfTypedVector<pxr::VtArray<unsigned int>>
// pxr::VdfTypedVector<pxr::pxr_half::half>
// pxr::VdfTypedVector<double>
// pxr::VdfTypedVector<float>
// pxr::VdfTypedVector<int>
// pxr::VdfTypedVector<long long>
// pxr::VdfTypedVector<short>
// pxr::VdfTypedVector<std::string>
// pxr::VdfTypedVector<unsigned char>
// pxr::VdfTypedVector<unsigned int>
// pxr::VdfTypedVector<unsigned long long>
// pxr::VdfTypedVector<unsigned short>
// std::optional<std::allocator<std::pair<pxr::VdfPoolChainIndex const, pxr::VdfMaskedOutput>>>
// std::vector<pxr::VdfScheduleNodeTasks, std::allocator<pxr::VdfScheduleNodeTasks>>
// std::vector<pxr::VdfExecutionStats::Event, std::allocator<pxr::VdfExecutionStats::Event>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfSpeculationExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfSpeculationExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfSpeculationExecutorEngine, pxr::VdfDataManagerHashTable>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfSpeculationExecutorEngine, pxr::VdfDataManagerHashTable>>
// std::map<std::string, pxr::VdfNetworkStats::NodeTypeStats, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::VdfNetworkStats::NodeTypeStats>>>
// std::pair<std::string const, pxr::VdfNetworkStats::NodeTypeStats>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelSpeculationExecutorEngine, pxr::VdfParallelDataManagerVector>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelSpeculationExecutorEngine, pxr::VdfParallelDataManagerVector>>
// pxr::VdfExecutorFactory<pxr::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, pxr::VdfParallelDataManagerVector>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>>
// pxr::VdfExecutorFactory<pxr::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfExecutorFactory<pxr::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, pxr::VdfParallelDataManagerVector>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>>
// pxr::VdfExecutorFactory<pxr::EfSubExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfParallelDataManagerVector>::SpeculationEngineType, pxr::VdfParallelDataManagerVector>>
// pxr::VdfExecutorFactory<pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, class pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background> >::SpeculationEngineType, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfExecutorFactory<pxr::EfMaskedSubExecutor, pxr::VdfSpeculationExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfSpeculationExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>
// pxr::VdfTypedVector<pxr::EfTime>
// std::optional<pxr::EsfObject>
// std::vector<pxr::ExecValueKey, std::allocator<pxr::ExecValueKey>>
// pxr::TfTypeFunctions<pxr::HfPluginBase>
// std::optional<pxr::CameraUtilConformWindowPolicy>
// std::pair<bool, pxr::CameraUtilConformWindowPolicy>
// std::vector<pxr::PxOsdMeshTopologyValidation::Invalidation, std::allocator<pxr::PxOsdMeshTopologyValidation::Invalidation>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::GlfBindingMap>
// pxr::TfSingleton<pxr::GlfContextCaps>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::GlfDrawTarget>
// std::optional<std::allocator<std::pair<std::string const, pxr::TfRefPtr<pxr::GlfDrawTarget::Attachment>>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::GlfSimpleLightingContext>
// std::vector<pxr::HgiMipInfo, std::allocator<pxr::HgiMipInfo>>
// pxr::HgiFactory<pxr::HgiGL>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::HgiGLTexture const>
// pxr::HgiFactory<pxr::HgiMetal>
// std::pair<pxr::HdWrap, pxr::HdWrap>
// pxr::VtArray<pxr::HdVec4f_2_10_10_10_REV>
// std::vector<std::pair<pxr::TfToken, std::array<pxr::HdBasisCurvesReprDesc, 1UL>>, std::allocator<std::pair<pxr::TfToken, std::array<pxr::HdBasisCurvesReprDesc, 1UL>>>>
// std::pair<pxr::TfToken, std::array<pxr::HdBasisCurvesReprDesc, 1UL>>
// pxr::TfSingleton<pxr::HdPerfLog>
// std::map<pxr::SdfPath, std::vector<pxr::HdExtComputationPrimvarDescriptor, std::allocator<pxr::HdExtComputationPrimvarDescriptor>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::HdExtComputationPrimvarDescriptor, std::allocator<pxr::HdExtComputationPrimvarDescriptor>>>>>
// std::pair<pxr::SdfPath const, std::vector<pxr::HdExtComputationPrimvarDescriptor, std::allocator<pxr::HdExtComputationPrimvarDescriptor>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::HdSceneIndexBase>
// std::optional<std::allocator<pxr::TfWeakPtr<pxr::HdSceneIndexBase>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdDataSourceBase>>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSource>>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::HdSceneIndexObserver>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::HdFilteringSceneIndexBase>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSourceEditor>>>>
// std::vector<pxr::HdMaterialRelationship, std::allocator<pxr::HdMaterialRelationship>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, pxr::HdMaterialNetwork>>>
// std::map<pxr::TfToken, std::vector<pxr::HdMaterialConnection2, std::allocator<pxr::HdMaterialConnection2>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::vector<pxr::HdMaterialConnection2, std::allocator<pxr::HdMaterialConnection2>>>>>
// std::map<pxr::TfToken, pxr::HdMaterialConnection2, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::HdMaterialConnection2>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::vector<pxr::HdMaterialConnection2, std::allocator<pxr::HdMaterialConnection2>>>>>
// std::vector<pxr::HdMaterialConnection2, std::allocator<pxr::HdMaterialConnection2>>
// std::pair<pxr::TfToken const, std::vector<pxr::HdMaterialConnection2, std::allocator<pxr::HdMaterialConnection2>>>
// std::pair<pxr::TfToken const, pxr::HdMaterialConnection2>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::HdMaterialNode2>>>
// std::vector<std::pair<pxr::TfToken, std::array<pxr::HdMeshReprDesc, 2UL>>, std::allocator<std::pair<pxr::TfToken, std::array<pxr::HdMeshReprDesc, 2UL>>>>
// std::pair<pxr::TfToken, std::array<pxr::HdMeshReprDesc, 2UL>>
// std::vector<std::pair<pxr::TfToken, std::array<pxr::HdPointsReprDesc, 1UL>>, std::allocator<std::pair<pxr::TfToken, std::array<pxr::HdPointsReprDesc, 1UL>>>>
// std::pair<pxr::TfToken, std::array<pxr::HdPointsReprDesc, 1UL>>
// std::vector<pxr::HdRenderPassState::ColorMask, std::allocator<pxr::HdRenderPassState::ColorMask>>
// std::optional<std::allocator<std::pair<pxr::SdfPath const, pxr::HdSelection::PrimSelectionState>>>
// std::unordered_map<pxr::SdfPath, pxr::HdSelection::PrimSelectionState, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::HdSelection::PrimSelectionState>>>
// std::pair<pxr::SdfPath const, pxr::HdSelection::PrimSelectionState>
// std::optional<std::allocator<std::shared_ptr<pxr::HdStTextureObject>>>
// std::map<pxr::HdStTextureType, unsigned long, std::less<pxr::HdStTextureType>, std::allocator<std::pair<pxr::HdStTextureType const, unsigned long>>>
// std::pair<pxr::HdStTextureType const, unsigned long>
// std::optional<std::allocator<std::shared_ptr<pxr::HdStShaderCode>>>
// std::optional<std::allocator<std::shared_ptr<pxr::HdStTextureHandle>>>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxAovInputTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxBoundingBoxTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxColorizeSelectionTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxColorCorrectionTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxDrawTargetTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitRenderTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxRenderTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxRenderSetupTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitResolveTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitVolumeRenderTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxPickTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxPickFromRenderBufferTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxPresentTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxSelectionTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxShadowTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxSimpleLightTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxSkydomeTask>
// pxr::HdLegacyTaskFactory_Impl<pxr::HdxVisualizeAovTask>
// pxr::TfSingleton<pxr::UsdImagingAdapterRegistry>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::UsdImagingDelegate>
// std::pair<pxr::UsdImagingPrimvarDescCache::Key, std::vector<pxr::HdPrimvarDescriptor, std::allocator<pxr::HdPrimvarDescriptor>>>
// std::optional<std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::UsdImagingPrimAdapter>>>>
// pxr::TfWeakPtrFacade<pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr, pxr::UsdImagingStageSceneIndex>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdImagingCollectionAPIAdapter>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdImagingCoordSysAPIAdapter>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdImagingGeomModelAPIAdapter>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdImagingLightAPIAdapter>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdImagingMaterialBindingAPIAdapter>
// std::vector<pxr::UsdImagingGLEngine::IntersectionResult, std::allocator<pxr::UsdImagingGLEngine::IntersectionResult>>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdRiPxrImagingCameraAPIAdapter>
// pxr::UsdImagingAPISchemaAdapterFactory<pxr::UsdSkelImagingBindingAPIAdapter>
// std::map<pxr::TfToken, std::vector<pxr::UsdSkelImagingWeightAndSubShapeIndex, std::allocator<pxr::UsdSkelImagingWeightAndSubShapeIndex>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::vector<pxr::UsdSkelImagingWeightAndSubShapeIndex, std::allocator<pxr::UsdSkelImagingWeightAndSubShapeIndex>>>>>
// std::pair<pxr::TfToken const, std::vector<pxr::UsdSkelImagingWeightAndSubShapeIndex, std::allocator<pxr::UsdSkelImagingWeightAndSubShapeIndex>>>
// pxr::UsdImagingSceneIndexPlugin::Factory<pxr::UsdSkelImagingResolvingSceneIndexPlugin>

// MARK: Unavailable (blocked by no Swift type name)

// std::vector<pxr::ArchRegex, std::allocator<pxr::ArchRegex>>
// std::vector<std::pair<std::string, pxr::ArchRegex>, std::allocator<std::pair<std::string, pxr::ArchRegex>>>
// std::pair<std::string, pxr::ArchRegex>
// std::set<pxr::TfType, std::less<pxr::TfType>, std::allocator<pxr::TfType>>
// std::vector<std::vector<pxr::TfType, std::allocator<pxr::TfType>>, std::allocator<std::vector<pxr::TfType, std::allocator<pxr::TfType>>>>
// std::pair<pxr::TfType, pxr::TfType>
// std::pair<pxr::TfType, void *>
// std::pair<pxr::TfType const, _Bool (class pxrInternal_v0_25_8__pxrReserved__::VtValue *, class std::vector<std::string> *, const class std::vector<std::string> *) *>
// std::pair<pxr::TfType const, _Bool (const class pxrInternal_v0_25_8__pxrReserved__::UsdGeomBoundable &, const class pxrInternal_v0_25_8__pxrReserved__::UsdTimeCode &, const class pxrInternal_v0_25_8__pxrReserved__::GfMatrix4d *, class pxrInternal_v0_25_8__pxrReserved__::VtArray<GfVec3f> *) *>
// std::pair<pxr::TfType const, bool>
// std::pair<pxr::TfType const, std::vector<pxr::TfType, std::allocator<pxr::TfType>>>
// std::pair<pxr::TfType const, unsigned char>
// std::pair<pxr::TfType const, unsigned long>
// std::pair<unsigned char const, pxr::TfType>
// std::pair<std::string, pxr::TfType>
// std::unique_ptr<pxr::TfType::FactoryBase, std::default_delete<pxr::TfType::FactoryBase>>
// pxr::TfWeakPtr<void>
// std::unique_ptr<std::vector<std::pair<pxr::TfDiagnosticType, std::string>, std::allocator<std::pair<pxr::TfDiagnosticType, std::string>>>, std::default_delete<std::vector<std::pair<pxr::TfDiagnosticType, std::string>, std::allocator<std::pair<pxr::TfDiagnosticType, std::string>>>>>
// std::unordered_map<pxr::TfType, _Bool (class pxrInternal_v0_25_8__pxrReserved__::VtValue *, class std::vector<std::string> *, const class std::vector<std::string> *) *, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, _Bool (class pxrInternal_v0_25_8__pxrReserved__::VtValue *, class std::vector<std::string> *, const class std::vector<std::string> *) *>>>
// std::unordered_map<pxr::TfType, _Bool (const class pxrInternal_v0_25_8__pxrReserved__::UsdGeomBoundable &, const class pxrInternal_v0_25_8__pxrReserved__::UsdTimeCode &, const class pxrInternal_v0_25_8__pxrReserved__::GfMatrix4d *, class pxrInternal_v0_25_8__pxrReserved__::VtArray<GfVec3f> *) *, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, _Bool (const class pxrInternal_v0_25_8__pxrReserved__::UsdGeomBoundable &, const class pxrInternal_v0_25_8__pxrReserved__::UsdTimeCode &, const class pxrInternal_v0_25_8__pxrReserved__::GfMatrix4d *, class pxrInternal_v0_25_8__pxrReserved__::VtArray<GfVec3f> *) *>>>
// std::unordered_map<pxr::TfType, std::vector<pxr::TfType, std::allocator<pxr::TfType>>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, std::vector<pxr::TfType, std::allocator<pxr::TfType>>>>>
// std::unordered_map<pxr::TfType, unsigned long, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, unsigned long>>>
// std::unordered_map<pxr::TfErrorMark const *, std::vector<unsigned long, std::allocator<unsigned long>>, pxr::TfHash, std::equal_to<pxr::TfErrorMark const *>, std::allocator<std::pair<pxr::TfErrorMark const *, std::vector<unsigned long, std::allocator<unsigned long>>>>>
// std::unordered_map<pxr::TfRefBase const *, unsigned long, pxr::TfHash, std::equal_to<pxr::TfRefBase const *>, std::allocator<std::pair<pxr::TfRefBase const *, unsigned long>>>
// std::unordered_map<pxr::VdfNode const *, std::vector<pxr::VdfInput const *, std::allocator<pxr::VdfInput const *>>, pxr::TfHash, std::equal_to<pxr::VdfNode const *>, std::allocator<std::pair<pxr::VdfNode const *, std::vector<pxr::VdfInput const *, std::allocator<pxr::VdfInput const *>>>>>
// std::unordered_map<pxr::VdfOutput const *, pxr::VdfMask const *, pxr::TfHash, std::equal_to<pxr::VdfOutput const *>, std::allocator<std::pair<pxr::VdfOutput const *, pxr::VdfMask const *>>>
// std::unordered_map<std::string, _Bool (int, char **) *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, _Bool (int, char **) *>>>
// std::unordered_map<std::string, _Bool (void) *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, _Bool (void) *>>>
// std::unordered_map<std::string, pxr::TfType, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfType>>>
// std::unordered_map<std::string, std::type_info const *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::type_info const *>>>
// std::unordered_map<unsigned int, pxr::VdfInput const *, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, pxr::VdfInput const *>>>
// std::unordered_multimap<std::string, pxr::SdrShaderNodeDiscoveryResult const *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::SdrShaderNodeDiscoveryResult const *>>>
// std::map<pxr::TfType, unsigned char, std::less<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, unsigned char>>>
// std::map<unsigned char, pxr::TfType, std::less<unsigned char>, std::allocator<std::pair<unsigned char const, pxr::TfType>>>
// std::vector<pxr::TfBits, std::allocator<pxr::TfBits>>
// std::pair<pxr::TfBits const, pxr::TfBits>
// std::unordered_map<pxr::TfBits, pxr::TfBits, pxr::TfBits::FastHash, std::equal_to<pxr::TfBits>, std::allocator<std::pair<pxr::TfBits const, pxr::TfBits>>>
// std::shared_ptr<pxr::TfCompressedBits>
// std::unordered_map<pxr::VdfConnection const *, pxr::TfCompressedBits, pxr::TfHash, std::equal_to<pxr::VdfConnection const *>, std::allocator<std::pair<pxr::VdfConnection const *, pxr::TfCompressedBits>>>
// std::pair<pxr::VdfConnection const *, pxr::TfCompressedBits>
// std::map<std::string, pxr::TfEnum, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::TfEnum>>>
// std::unordered_map<pxr::TfEnum, std::string, pxr::TfHash, std::equal_to<pxr::TfEnum>, std::allocator<std::pair<pxr::TfEnum const, std::string>>>
// std::unordered_map<std::string, pxr::TfEnum, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfEnum>>>
// std::pair<pxr::TfEnum const, std::string>
// std::pair<std::string const, pxr::TfEnum>
// std::vector<pxr::TfWeakPtr<pxr::TfNotice::Probe>, std::allocator<pxr::TfWeakPtr<pxr::TfNotice::Probe>>>
// std::unordered_map<unsigned long, std::list<std::function<void, <>>, std::allocator<std::function<void, <>>>>, pxr::TfHash, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::list<std::function<void, <>>, std::allocator<std::function<void, <>>>>>>>
// pxr::TfHashMap<pxr::TfBits, pxr::TfBits, pxr::TfBits::FastHash, std::equal_to<pxr::TfBits>, std::allocator<std::pair<pxr::TfBits const, pxr::TfBits>>>
// pxr::TfHashMap<pxr::TfEnum, std::string, pxr::TfHash, std::equal_to<pxr::TfEnum>, std::allocator<std::pair<pxr::TfEnum const, std::string>>>
// pxr::TfHashMap<pxr::TfType, std::vector<pxr::TfType, std::allocator<pxr::TfType>>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, std::vector<pxr::TfType, std::allocator<pxr::TfType>>>>>
// pxr::TfHashMap<pxr::TfType, unsigned long, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, unsigned long>>>
// pxr::TfHashMap<std::type_index, std::string, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, std::string>>>
// pxr::TfHashMap<pxr::TfErrorMark const *, std::vector<unsigned long, std::allocator<unsigned long>>, pxr::TfHash, std::equal_to<pxr::TfErrorMark const *>, std::allocator<std::pair<pxr::TfErrorMark const *, std::vector<unsigned long, std::allocator<unsigned long>>>>>
// pxr::TfHashMap<pxr::VdfConnection const *, pxr::TfCompressedBits, pxr::TfHash, std::equal_to<pxr::VdfConnection const *>, std::allocator<std::pair<pxr::VdfConnection const *, pxr::TfCompressedBits>>>
// pxr::TfHashMap<pxr::VdfOutput const *, pxr::VdfMask const *, pxr::TfHash, std::equal_to<pxr::VdfOutput const *>, std::allocator<std::pair<pxr::VdfOutput const *, pxr::VdfMask const *>>>
// pxr::TfHashMap<std::string, _Bool (int, char **) *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, _Bool (int, char **) *>>>
// pxr::TfHashMap<std::string, _Bool (void) *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, _Bool (void) *>>>
// pxr::TfHashMap<std::string, pxr::TfEnum, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfEnum>>>
// pxr::TfHashMap<std::string, pxr::TfType, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfType>>>
// pxr::TfHashMap<std::string, std::type_info const *, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::type_info const *>>>
// pxr::TfHashMap<unsigned int, pxr::VdfInput const *, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, pxr::VdfInput const *>>>
// pxr::TfHashMap<unsigned long, std::list<std::function<void, <>>, std::allocator<std::function<void, <>>>>, pxr::TfHash, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::list<std::function<void, <>>, std::allocator<std::function<void, <>>>>>>>
// std::unique_ptr<pxr::TfHashMap<int, unsigned long, pxr::TfHash, std::equal_to<int>, std::allocator<std::pair<int const, unsigned long>>>, std::default_delete<pxr::TfHashMap<int, unsigned long, pxr::TfHash, std::equal_to<int>, std::allocator<std::pair<int const, unsigned long>>>>>
// std::unique_ptr<pxr::TfHashMap<long long, unsigned long, pxr::TfHash, std::equal_to<long long>, std::allocator<std::pair<long long const, unsigned long>>>, std::default_delete<pxr::TfHashMap<long long, unsigned long, pxr::TfHash, std::equal_to<long long>, std::allocator<std::pair<long long const, unsigned long>>>>>
// std::unique_ptr<pxr::TfHashMap<std::string, pxr::TfType, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfType>>>, std::default_delete<pxr::TfHashMap<std::string, pxr::TfType, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfType>>>>>
// std::unique_ptr<pxr::TfHashMap<std::string, unsigned long, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, unsigned long>>>, std::default_delete<pxr::TfHashMap<std::string, unsigned long, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, unsigned long>>>>>
// std::unique_ptr<pxr::TfHashMap<unsigned int, unsigned long, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned long>>>, std::default_delete<pxr::TfHashMap<unsigned int, unsigned long, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned long>>>>>
// std::unique_ptr<pxr::TfHashMap<unsigned long long, unsigned long, pxr::TfHash, std::equal_to<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long>>>, std::default_delete<pxr::TfHashMap<unsigned long long, unsigned long, pxr::TfHash, std::equal_to<unsigned long long>, std::allocator<std::pair<unsigned long long const, unsigned long>>>>>
// std::unique_ptr<pxr::TfDiagnosticBase, std::default_delete<pxr::TfDiagnosticBase>>
// std::vector<std::unique_ptr<pxr::TfDiagnosticBase, std::default_delete<pxr::TfDiagnosticBase>>, std::allocator<std::unique_ptr<pxr::TfDiagnosticBase, std::default_delete<pxr::TfDiagnosticBase>>>>
// pxr::TfEnvSetting<bool>
// pxr::TfEnvSetting<int>
// pxr::TfEnvSetting<std::string>
// std::pair<void const *, pxr::TfMallocTag::CallStackInfo>
// pxr::TfHashMap<unsigned int, pxr::TfSmallVector<pxr::VdfConnection const *, 1U>, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, pxr::TfSmallVector<pxr::VdfConnection const *, 1U>>>>
// std::unique_ptr<pxr::TfSmallVector<pxr::TfType, 1U>, std::default_delete<pxr::TfSmallVector<pxr::TfType, 1U>>>
// std::unordered_map<unsigned int, pxr::TfSmallVector<pxr::VdfConnection const *, 1U>, pxr::TfHash, std::equal_to<unsigned int>, std::allocator<std::pair<unsigned int const, pxr::TfSmallVector<pxr::VdfConnection const *, 1U>>>>
// std::vector<pxr::TfSmallVector<pxr::VdfConnection const *, 1U>, std::allocator<pxr::TfSmallVector<pxr::VdfConnection const *, 1U>>>
// std::pair<unsigned int const, pxr::TfSmallVector<pxr::VdfConnection const *, 1U>>
// std::vector<pxr::TfPatternMatcher, std::allocator<pxr::TfPatternMatcher>>
// std::unordered_map<void const *, pxr::TfRefPtrTracker::Trace, pxr::TfHash, std::equal_to<void const *>, std::allocator<std::pair<void const *, pxr::TfRefPtrTracker::Trace>>>
// std::pair<void const *, pxr::TfRefPtrTracker::Trace>
// pxr::TfHashSet<pxr::TfWeakPtr<pxr::TfNotice::Probe>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::TfNotice::Probe>>, std::allocator<pxr::TfWeakPtr<pxr::TfNotice::Probe>>>
// pxr::TfHashSet<pxr::VdfExecutorObserver const *, pxr::TfHash, std::equal_to<pxr::VdfExecutorObserver const *>, std::allocator<pxr::VdfExecutorObserver const *>>
// std::unordered_set<pxr::TfWeakPtr<pxr::TfNotice::Probe>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::TfNotice::Probe>>, std::allocator<pxr::TfWeakPtr<pxr::TfNotice::Probe>>>
// std::unordered_set<pxr::VdfExecutorObserver const *, pxr::TfHash, std::equal_to<pxr::VdfExecutorObserver const *>, std::allocator<pxr::VdfExecutorObserver const *>>
// std::unordered_set<pxr::VdfNode const *, pxr::TfHash, std::equal_to<pxr::VdfNode const *>, std::allocator<pxr::VdfNode const *>>
// std::unordered_set<pxr::VdfOutput const *, pxr::TfHash, std::equal_to<pxr::VdfOutput const *>, std::allocator<pxr::VdfOutput const *>>
// pxr::TfHashMap<pxr::TfType, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::back_insert_iterator<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::insert_iterator<std::unordered_set<pxr::TfToken, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<pxr::TfToken>>>
// std::map<std::string, std::vector<std::pair<pxr::TfToken, pxr::TraceEvent const *>, std::allocator<std::pair<pxr::TfToken, pxr::TraceEvent const *>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::vector<std::pair<pxr::TfToken, pxr::TraceEvent const *>, std::allocator<std::pair<pxr::TfToken, pxr::TraceEvent const *>>>>>>
// std::shared_ptr<std::set<pxr::TfToken, std::less<pxr::TfToken>, std::allocator<pxr::TfToken>>>
// std::unique_ptr<pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>>>
// std::unique_ptr<std::pair<pxr::TfToken, pxr::TfToken>, std::default_delete<std::pair<pxr::TfToken, pxr::TfToken>>>
// std::unordered_map<pxr::TfToken, std::function<void, <const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet &, unsigned int *>>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::function<void, <const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet &, unsigned int *>>>>>
// std::unordered_map<pxr::TfToken, std::function<void, <unsigned int, class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet *>>, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::function<void, <unsigned int, class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet *>>>>>
// std::unordered_map<pxr::TfToken, pxr::UsdSchemaRegistry::SchemaInfo const *, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::UsdSchemaRegistry::SchemaInfo const *>>>
// std::unordered_map<pxr::TfType, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::vector<std::pair<pxr::TfToken, pxr::TraceEvent const *>, std::allocator<std::pair<pxr::TfToken, pxr::TraceEvent const *>>>
// std::pair<pxr::TfToken, pxr::VdfInput *>
// std::pair<pxr::TfToken, pxr::VdfOutput *>
// std::pair<pxr::TfToken, pxr::TraceEvent const *>
// std::pair<pxr::TfType, pxr::TfToken>
// std::pair<pxr::TfToken const *, std::back_insert_iterator<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>
// std::pair<pxr::TfToken const, pxr::SdrParserPlugin *>
// std::pair<pxr::TfToken const, pxr::TfType>
// std::pair<pxr::TfToken const, std::function<void, <const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet &, unsigned int *>>>
// std::pair<pxr::TfToken const, std::function<void, <unsigned int, class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocatorSet *>>>
// std::pair<pxr::TfToken const, pxr::SdrShaderProperty const *>
// std::pair<pxr::TfToken const, pxr::HdVolumeFieldDescriptor const *>
// std::pair<pxr::TfToken const, pxr::UsdSchemaRegistry::SchemaInfo const *>
// std::pair<pxr::TfType const, std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>
// std::pair<std::string const, std::vector<std::pair<pxr::TfToken, pxr::TraceEvent const *>, std::allocator<std::pair<pxr::TfToken, pxr::TraceEvent const *>>>>
// std::shared_ptr<std::unordered_map<pxr::TfToken, std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::unordered_map<pxr::TfToken, pxr::TfToken, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfToken>>>>>>>
// std::unique_ptr<pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::TfToken, unsigned long, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, unsigned long>>>>>
// std::unordered_map<pxr::TfToken, pxr::SdrParserPlugin *, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdrParserPlugin *>>>
// std::unordered_map<pxr::TfToken, pxr::TfType, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::TfType>>>
// std::unordered_map<pxr::TfToken, pxr::HdVolumeFieldDescriptor const *, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::HdVolumeFieldDescriptor const *>>>
// pxr::TfSpan<bool>
// pxr::TfSpan<pxr::TfToken>
// pxr::TfSpan<pxr::VdfNode const *>
// pxr::TfSpan<unsigned long const>
// pxr::TfSpan<double>
// pxr::TfSpan<float>
// pxr::TfSpan<int>
// pxr::TfSpan<long long>
// pxr::TfSpan<std::string>
// pxr::TfSpan<unsigned char>
// pxr::TfSpan<unsigned int>
// pxr::TfSpan<unsigned long long>
// pxr::TfSpan<pxr::GfMatrix4d>
// std::reference_wrapper<pxr::GfMatrix4d const>
// std::unique_ptr<pxr::GfMatrix4d, std::default_delete<pxr::GfMatrix4d>>
// pxr::TfSpan<pxr::GfVec4d>
// pxr::TfSpan<pxr::GfVec4f>
// pxr::TfSpan<pxr::GfVec4h>
// pxr::TfSpan<pxr::pxr_half::half>
// pxr::TfSpan<pxr::GfVec4i>
// pxr::TfSpan<pxr::GfVec3d>
// pxr::TfSpan<pxr::GfVec3f>
// pxr::TfSpan<pxr::GfVec3h>
// pxr::TfSpan<pxr::GfVec3i>
// std::unique_ptr<pxr::GfRange3d, std::default_delete<pxr::GfRange3d>>
// pxr::TfSpan<pxr::GfVec2f>
// pxr::TfSpan<pxr::GfVec2d>
// pxr::TfSpan<pxr::GfVec2h>
// pxr::TfSpan<pxr::GfVec2i>
// std::insert_iterator<std::vector<pxr::GfVec2i, std::allocator<pxr::GfVec2i>>>
// pxr::TfSpan<pxr::GfMatrix3f>
// std::unique_ptr<pxr::GfMatrix3f, std::default_delete<pxr::GfMatrix3f>>
// pxr::TfSpan<pxr::GfDualQuatd>
// std::unique_ptr<pxr::GfDualQuatd, std::default_delete<pxr::GfDualQuatd>>
// pxr::TfSpan<pxr::GfQuatd>
// pxr::TfSpan<pxr::GfQuatf>
// pxr::TfSpan<pxr::GfQuath>
// std::unique_ptr<pxr::GfFrustum, std::default_delete<pxr::GfFrustum>>
// std::unique_ptr<std::array<pxr::GfPlane, 6UL>, std::default_delete<std::array<pxr::GfPlane, 6UL>>>
// pxr::TfSpan<pxr::GfMatrix2d>
// pxr::TfSpan<pxr::GfMatrix3d>
// std::unique_ptr<pxr::GfMatrix3d, std::default_delete<pxr::GfMatrix3d>>
// pxr::TfSpan<pxr::GfMatrix4f>
// std::unique_ptr<pxr::GfMatrix4f, std::default_delete<pxr::GfMatrix4f>>
// std::unique_ptr<std::map<std::string, pxr::JsValue, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::JsValue>>>, std::default_delete<std::map<std::string, pxr::JsValue, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::JsValue>>>>>
// std::unique_ptr<std::vector<pxr::JsValue, std::allocator<pxr::JsValue>>, std::default_delete<std::vector<pxr::JsValue, std::allocator<pxr::JsValue>>>>
// std::vector<std::pair<pxr::TfToken, pxr::JsValue>, std::allocator<std::pair<pxr::TfToken, pxr::JsValue>>>
// std::pair<pxr::TfToken, pxr::JsValue>
// std::pair<std::string, pxr::JsValue>
// std::deque<pxr::TfWeakPtr<pxr::TraceAggregateNode>, std::allocator<pxr::TfWeakPtr<pxr::TraceAggregateNode>>>
// std::stack<pxr::TfWeakPtr<pxr::TraceAggregateNode>, std::deque<pxr::TfWeakPtr<pxr::TraceAggregateNode>, std::allocator<pxr::TfWeakPtr<pxr::TraceAggregateNode>>>>
// std::vector<pxr::TraceEvent, std::allocator<pxr::TraceEvent>>
// std::pair<pxr::TraceKey, pxr::TfToken>
// std::unordered_map<pxr::TraceKey, pxr::TfToken, pxr::TraceKey::HashFunctor, std::equal_to<pxr::TraceKey>, std::allocator<std::pair<pxr::TraceKey const, pxr::TfToken>>>
// std::unique_ptr<pxr::TraceCollection, std::default_delete<pxr::TraceCollection>>
// std::vector<std::shared_ptr<pxr::TraceCollection>, std::allocator<std::shared_ptr<pxr::TraceCollection>>>
// std::map<pxr::TraceThreadId, std::unique_ptr<pxr::TraceEventList, std::default_delete<pxr::TraceEventList>>, std::less<pxr::TraceThreadId>, std::allocator<std::pair<pxr::TraceThreadId const, std::unique_ptr<pxr::TraceEventList, std::default_delete<pxr::TraceEventList>>>>>
// std::pair<pxr::TraceThreadId const, std::unique_ptr<pxr::TraceEventList, std::default_delete<pxr::TraceEventList>>>
// std::list<std::unordered_set<pxr::TraceDynamicKey, pxr::TraceDynamicKey::HashFunctor, std::equal_to<pxr::TraceDynamicKey>, std::allocator<pxr::TraceDynamicKey>>, std::allocator<std::unordered_set<pxr::TraceDynamicKey, pxr::TraceDynamicKey::HashFunctor, std::equal_to<pxr::TraceDynamicKey>, std::allocator<pxr::TraceDynamicKey>>>>
// std::unordered_set<pxr::TraceDynamicKey, pxr::TraceDynamicKey::HashFunctor, std::equal_to<pxr::TraceDynamicKey>, std::allocator<pxr::TraceDynamicKey>>
// std::deque<std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>, std::allocator<std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>>>
// std::stack<std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>, std::deque<std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>, std::allocator<std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>>>>
// std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, int>
// std::pair<pxr::TfRefPtr<pxr::TraceEventNode>, unsigned long>
// std::vector<pxr::TraceReporter::ParsedTree, std::allocator<pxr::TraceReporter::ParsedTree>>
// std::unique_ptr<pxr::WorkDispatcher, std::default_delete<pxr::WorkDispatcher>>
// std::reference_wrapper<pxr::WorkTaskGraph_DefaultImpl::BaseTask>
// pxr::TfHashMap<pxr::TfType, pxr::TfWeakPtr<pxr::PlugPlugin>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, pxr::TfWeakPtr<pxr::PlugPlugin>>>>
// pxr::TfHashMap<std::string, pxr::TfWeakPtr<pxr::PlugPlugin>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfWeakPtr<pxr::PlugPlugin>>>>
// std::unique_ptr<pxr::PlugPlugin, std::default_delete<pxr::PlugPlugin>>
// std::unordered_map<pxr::TfType, pxr::TfWeakPtr<pxr::PlugPlugin>, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, pxr::TfWeakPtr<pxr::PlugPlugin>>>>
// std::unordered_map<std::string, pxr::TfWeakPtr<pxr::PlugPlugin>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfWeakPtr<pxr::PlugPlugin>>>>
// std::vector<std::pair<pxr::TfWeakPtr<pxr::PlugPlugin>, unsigned long>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PlugPlugin>, unsigned long>>>
// std::pair<pxr::TfWeakPtr<pxr::PlugPlugin>, bool>
// std::pair<pxr::TfWeakPtr<pxr::PlugPlugin>, unsigned long>
// std::pair<pxr::TfType const, pxr::TfWeakPtr<pxr::PlugPlugin>>
// std::pair<std::string const, pxr::TfWeakPtr<pxr::PlugPlugin>>
// std::pair<std::string, std::unique_ptr<pxr::PlugPlugin, std::default_delete<pxr::PlugPlugin>>>
// pxr::TfWeakPtr<pxr::PlugRegistry>
// std::back_insert_iterator<pxr::VtArray<pxr::GfVec2i>>
// std::back_insert_iterator<pxr::VtArray<int>>
// std::shared_ptr<pxr::VtArray<pxr::GfMatrix4f>>
// std::unique_ptr<pxr::VtArray<pxr::pxr_half::half>, std::default_delete<pxr::VtArray<pxr::pxr_half::half>>>
// std::unique_ptr<pxr::VtArray<pxr::GfMatrix2d>, std::default_delete<pxr::VtArray<pxr::GfMatrix2d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfMatrix3d>, std::default_delete<pxr::VtArray<pxr::GfMatrix3d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfMatrix4d>, std::default_delete<pxr::VtArray<pxr::GfMatrix4d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfQuatd>, std::default_delete<pxr::VtArray<pxr::GfQuatd>>>
// std::unique_ptr<pxr::VtArray<pxr::GfQuatf>, std::default_delete<pxr::VtArray<pxr::GfQuatf>>>
// std::unique_ptr<pxr::VtArray<pxr::GfQuath>, std::default_delete<pxr::VtArray<pxr::GfQuath>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec2d>, std::default_delete<pxr::VtArray<pxr::GfVec2d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec2f>, std::default_delete<pxr::VtArray<pxr::GfVec2f>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec2h>, std::default_delete<pxr::VtArray<pxr::GfVec2h>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec2i>, std::default_delete<pxr::VtArray<pxr::GfVec2i>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec3d>, std::default_delete<pxr::VtArray<pxr::GfVec3d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec3f>, std::default_delete<pxr::VtArray<pxr::GfVec3f>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec3h>, std::default_delete<pxr::VtArray<pxr::GfVec3h>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec3i>, std::default_delete<pxr::VtArray<pxr::GfVec3i>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec4d>, std::default_delete<pxr::VtArray<pxr::GfVec4d>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec4f>, std::default_delete<pxr::VtArray<pxr::GfVec4f>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec4h>, std::default_delete<pxr::VtArray<pxr::GfVec4h>>>
// std::unique_ptr<pxr::VtArray<pxr::GfVec4i>, std::default_delete<pxr::VtArray<pxr::GfVec4i>>>
// std::unique_ptr<pxr::VtArray<pxr::TfToken>, std::default_delete<pxr::VtArray<pxr::TfToken>>>
// std::unique_ptr<pxr::VtArray<bool>, std::default_delete<pxr::VtArray<bool>>>
// std::unique_ptr<pxr::VtArray<double>, std::default_delete<pxr::VtArray<double>>>
// std::unique_ptr<pxr::VtArray<float>, std::default_delete<pxr::VtArray<float>>>
// std::unique_ptr<pxr::VtArray<long long>, std::default_delete<pxr::VtArray<long long>>>
// std::unique_ptr<pxr::VtArray<int>, std::default_delete<pxr::VtArray<int>>>
// std::unique_ptr<pxr::VtArray<std::string>, std::default_delete<pxr::VtArray<std::string>>>
// std::unique_ptr<pxr::VtArray<unsigned long long>, std::default_delete<pxr::VtArray<unsigned long long>>>
// std::unique_ptr<pxr::VtArray<unsigned char>, std::default_delete<pxr::VtArray<unsigned char>>>
// std::unique_ptr<pxr::VtArray<unsigned int>, std::default_delete<pxr::VtArray<unsigned int>>>
// std::pair<pxr::GfVec2i *, std::back_insert_iterator<pxr::VtArray<pxr::GfVec2i>>>
// std::pair<int *, std::back_insert_iterator<pxr::VtArray<int>>>
// pxr::VtArray<pxr::VtDictionary>
// std::unordered_map<double, pxr::VtDictionary, std::hash<double>, std::equal_to<double>, std::allocator<std::pair<double const, pxr::VtDictionary>>>
// std::vector<pxr::VtDictionary, std::allocator<pxr::VtDictionary>>
// std::pair<double const, pxr::VtDictionary>
// pxr::TfSpan<pxr::VtValue>
// pxr::VtArray<pxr::VtValue>
// std::map<pxr::TfToken, pxr::VtValue, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>
// std::map<std::string, pxr::VtValue, std::less<void>, std::allocator<std::pair<std::string const, pxr::VtValue>>>
// std::optional<pxr::VtValue>
// std::unique_ptr<std::map<std::string, pxr::VtValue, std::less<void>, std::allocator<std::pair<std::string const, pxr::VtValue>>>, std::default_delete<std::map<std::string, pxr::VtValue, std::less<void>, std::allocator<std::pair<std::string const, pxr::VtValue>>>>>
// std::vector<std::pair<pxr::TfToken, pxr::VtValue>, std::allocator<std::pair<pxr::TfToken, pxr::VtValue>>>
// std::vector<std::pair<pxr::PcpDynamicFileFormatInterface const *, pxr::VtValue>, std::allocator<std::pair<pxr::PcpDynamicFileFormatInterface const *, pxr::VtValue>>>
// std::pair<pxr::TfToken, pxr::VtValue>
// std::pair<pxr::TfToken, std::pair<pxr::VtValue, pxr::VtValue>>
// std::pair<pxr::VtValue, pxr::VtArray<int>>
// std::pair<pxr::PcpDynamicFileFormatInterface const *, pxr::VtValue>
// std::pair<double const, pxr::VtValue>
// std::pair<std::string, pxr::VtValue>
// pxr::VtArray<pxr::TsSpline>
// std::optional<pxr::TsSpline>
// std::reference_wrapper<pxr::TsKnotMap const>
// std::optional<pxr::TsKnot>
// std::shared_ptr<pxr::ArAsset>
// std::optional<pxr::ArResolverContext>
// std::vector<pxr::ArResolverContext, std::allocator<pxr::ArResolverContext>>
// std::shared_ptr<pxr::ArResolver>
// std::unique_ptr<pxr::ArResolver, std::default_delete<pxr::ArResolver>>
// std::shared_ptr<pxr::ArPackageResolver>
// std::unique_ptr<pxr::ArPackageResolver, std::default_delete<pxr::ArPackageResolver>>
// std::shared_ptr<pxr::ArFilesystemAsset>
// std::shared_ptr<pxr::ArFilesystemWritableAsset>
// std::shared_ptr<pxr::ArWritableAsset>
// std::shared_ptr<pxr::ArInMemoryAsset>
// std::optional<pxr::ArResolverContextBinder>
// std::unique_ptr<pxr::ArResolverContextBinder, std::default_delete<pxr::ArResolverContextBinder>>
// std::map<std::string, pxr::TfRefPtr<pxr::SdfAbstractData>, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::TfRefPtr<pxr::SdfAbstractData>>>>
// std::pair<std::string const, pxr::TfRefPtr<pxr::SdfAbstractData>>
// pxr::TfSpan<pxr::SdfPath>
// std::back_insert_iterator<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::deque<pxr::SdfPath, std::allocator<pxr::SdfPath>>
// std::insert_iterator<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::map<pxr::PcpCache *, std::map<pxr::SdfPath, pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>, std::less<pxr::PcpCache *>, std::allocator<std::pair<pxr::PcpCache *, std::map<pxr::SdfPath, pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>>>>
// std::map<pxr::SdfPath, pxr::VtValue, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::VtValue>>>
// std::map<pxr::SdfPath, std::map<pxr::TfToken, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>>>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::map<pxr::TfToken, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>>>>>>>
// std::map<pxr::SdfPath, std::shared_ptr<std::map<pxr::SdfPath, int, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<std::map<pxr::SdfPath, int, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>>>>>
// std::map<pxr::SdfPath, std::vector<pxr::SdfChangeList::Entry const *, std::allocator<pxr::SdfChangeList::Entry const *>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfChangeList::Entry const *, std::allocator<pxr::SdfChangeList::Entry const *>>>>>
// std::map<pxr::SdfPath, pxr::UsdPhysicsArticulationDesc *, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::UsdPhysicsArticulationDesc *>>>
// std::map<pxr::SdfPath, pxr::UsdPhysicsJointDesc *, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::UsdPhysicsJointDesc *>>>
// std::map<pxr::SdfPath, pxr::UsdPhysicsRigidBodyDesc *, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::UsdPhysicsRigidBodyDesc *>>>
// std::map<pxr::TfToken, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>>>>
// std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>
// std::queue<pxr::SdfPath, std::deque<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::reference_wrapper<pxr::SdfPath const>
// std::reference_wrapper<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>> const>
// std::shared_ptr<std::map<pxr::SdfPath, int, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>>
// std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>
// std::shared_ptr<std::pair<pxr::SdfPath, pxr::SdfPath>>
// std::unique_ptr<pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>>>
// std::unique_ptr<pxr::VtArray<pxr::SdfPath>, std::default_delete<pxr::VtArray<pxr::SdfPath>>>
// std::unique_ptr<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, std::default_delete<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::vector<std::pair<pxr::PcpPrimIndex const *, pxr::SdfPath>, std::allocator<std::pair<pxr::PcpPrimIndex const *, pxr::SdfPath>>>
// std::vector<std::pair<pxr::SdfPath const, std::vector<pxr::SdfChangeList::Entry const *, std::allocator<pxr::SdfChangeList::Entry const *>>>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::SdfChangeList::Entry const *, std::allocator<pxr::SdfChangeList::Entry const *>>>>>
// std::pair<pxr::PcpCache *, std::map<pxr::SdfPath, pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::SdfPath>>>>
// std::pair<pxr::SdfPath *, std::back_insert_iterator<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::pair<pxr::PcpPrimIndex const *, pxr::SdfPath>
// std::pair<pxr::SdfPath const *, std::back_insert_iterator<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::pair<pxr::SdfPath const, pxr::HdInstancer *>
// std::pair<pxr::SdfPath const, pxr::TfDenseHashSet<pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::SdfPath>, 128U>>
// std::pair<pxr::SdfPath const, pxr::TfHashMap<pxr::TfToken, pxr::VtValue, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>>
// std::pair<pxr::SdfPath const, pxr::VtValue>
// std::pair<pxr::SdfPath const, std::map<pxr::TfToken, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>>>>>
// std::pair<pxr::SdfPath const, std::shared_ptr<std::map<pxr::SdfPath, int, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, int>>>>>
// std::pair<pxr::SdfPath const, std::vector<pxr::SdfChangeList::Entry const *, std::allocator<pxr::SdfChangeList::Entry const *>>>
// std::pair<pxr::SdfPath const, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>>
// std::pair<pxr::SdfPath const, pxr::UsdPhysicsArticulationDesc *>
// std::pair<pxr::SdfPath const, pxr::UsdPhysicsJointDesc *>
// std::pair<pxr::SdfPath const, pxr::UsdPhysicsRigidBodyDesc *>
// std::pair<pxr::TfToken const, std::map<pxr::TfToken, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>>>>
// std::pair<pxr::TfToken const, std::shared_ptr<std::set<pxr::SdfPath, std::less<pxr::SdfPath>, std::allocator<pxr::SdfPath>>>>
// pxr::TfHashMap<pxr::SdfPath, pxr::HdInstancer *, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::HdInstancer *>>>
// pxr::TfHashMap<pxr::SdfPath, pxr::TfHashMap<pxr::TfToken, pxr::VtValue, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfHashMap<pxr::TfToken, pxr::VtValue, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>>>>
// pxr::TfHashMap<pxr::SdfPath, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>>>>
// std::unique_ptr<pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>>>
// std::unique_ptr<std::unordered_map<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>, std::default_delete<std::unordered_map<pxr::SdfPath, unsigned long, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, unsigned long>>>>>
// std::unordered_map<pxr::SdfPath, pxr::HdInstancer *, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::HdInstancer *>>>
// std::unordered_map<pxr::SdfPath, pxr::TfHashMap<pxr::TfToken, pxr::VtValue, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfHashMap<pxr::TfToken, pxr::VtValue, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::VtValue>>>>>>
// std::unordered_map<pxr::SdfPath, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::UsdPhysicsJointDesc const *, std::allocator<pxr::UsdPhysicsJointDesc const *>>>>>
// pxr::TfHashMap<pxr::SdfUnregisteredValue, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfUnregisteredValue>, std::allocator<std::pair<pxr::SdfUnregisteredValue const, unsigned long>>>
// pxr::VtArray<pxr::SdfUnregisteredValue>
// std::list<pxr::SdfUnregisteredValue, std::allocator<pxr::SdfUnregisteredValue>>
// std::optional<pxr::SdfUnregisteredValue>
// std::unique_ptr<pxr::TfHashMap<pxr::SdfUnregisteredValue, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfUnregisteredValue>, std::allocator<std::pair<pxr::SdfUnregisteredValue const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::SdfUnregisteredValue, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfUnregisteredValue>, std::allocator<std::pair<pxr::SdfUnregisteredValue const, unsigned long>>>>>
// std::unordered_map<pxr::SdfUnregisteredValue, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfUnregisteredValue>, std::allocator<std::pair<pxr::SdfUnregisteredValue const, unsigned long>>>
// std::vector<pxr::SdfUnregisteredValue, std::allocator<pxr::SdfUnregisteredValue>>
// std::pair<pxr::SdfUnregisteredValue, unsigned long>
// pxr::TfSpan<pxr::SdfAssetPath>
// std::unique_ptr<pxr::SdfAssetPath, std::default_delete<pxr::SdfAssetPath>>
// std::unique_ptr<pxr::VtArray<pxr::SdfAssetPath>, std::default_delete<pxr::VtArray<pxr::SdfAssetPath>>>
// pxr::TfSpan<pxr::SdfOpaqueValue>
// std::unique_ptr<pxr::VtArray<pxr::SdfOpaqueValue>, std::default_delete<pxr::VtArray<pxr::SdfOpaqueValue>>>
// pxr::TfSpan<pxr::SdfPathExpression>
// pxr::VtArray<pxr::SdfPathExpression>
// std::optional<pxr::SdfPathExpression>
// std::unique_ptr<pxr::SdfPathExpression, std::default_delete<pxr::SdfPathExpression>>
// std::unique_ptr<pxr::VtArray<pxr::SdfPathExpression>, std::default_delete<pxr::VtArray<pxr::SdfPathExpression>>>
// std::unordered_map<pxr::TfToken, pxr::SdfPathExpression, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdfPathExpression>>>
// std::unordered_set<pxr::SdfPathExpression, pxr::TfHash, std::equal_to<pxr::SdfPathExpression>, std::allocator<pxr::SdfPathExpression>>
// std::vector<pxr::SdfPathExpression, std::allocator<pxr::SdfPathExpression>>
// std::vector<std::pair<pxr::SdfPathExpression, std::optional<std::pair<pxr::SdfPath, pxr::TfToken>>>, std::allocator<std::pair<pxr::SdfPathExpression, std::optional<std::pair<pxr::SdfPath, pxr::TfToken>>>>>
// std::pair<pxr::SdfPathExpression, std::optional<std::pair<pxr::SdfPath, pxr::TfToken>>>
// std::pair<pxr::TfToken const, pxr::SdfPathExpression>
// std::vector<pxr::SdfPathPattern, std::allocator<pxr::SdfPathPattern>>
// std::vector<pxr::SdfPredicateExpression, std::allocator<pxr::SdfPredicateExpression>>
// std::vector<pxr::SdfPredicateExpression::FnArg, std::allocator<pxr::SdfPredicateExpression::FnArg>>
// std::vector<pxr::SdfPredicateExpression::FnCall, std::allocator<pxr::SdfPredicateExpression::FnCall>>
// pxr::TfSpan<pxr::SdfTimeCode>
// std::unique_ptr<pxr::VtArray<pxr::SdfTimeCode>, std::default_delete<pxr::VtArray<pxr::SdfTimeCode>>>
// std::unordered_map<pxr::TfToken, pxr::SdfValueTypeName, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdfValueTypeName>>>
// std::vector<pxr::SdfValueTypeName, std::allocator<pxr::SdfValueTypeName>>
// std::pair<pxr::SdfValueTypeName const, class std::shared_ptr<class pxrInternal_v0_25_8__pxrReserved__::HdSampledDataSource> (const class pxrInternal_v0_25_8__pxrReserved__::UsdAttributeQuery &, const class pxrInternal_v0_25_8__pxrReserved__::UsdImagingDataSourceStageGlobals &, const class pxrInternal_v0_25_8__pxrReserved__::SdfPath &, const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocator &) *>
// std::pair<pxr::TfToken const, pxr::SdfValueTypeName>
// std::unordered_map<pxr::SdfValueTypeName, class std::shared_ptr<class pxrInternal_v0_25_8__pxrReserved__::HdSampledDataSource> (const class pxrInternal_v0_25_8__pxrReserved__::UsdAttributeQuery &, const class pxrInternal_v0_25_8__pxrReserved__::UsdImagingDataSourceStageGlobals &, const class pxrInternal_v0_25_8__pxrReserved__::SdfPath &, const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocator &) *, pxr::SdfValueTypeNameHash, std::equal_to<pxr::SdfValueTypeName>, std::allocator<std::pair<pxr::SdfValueTypeName const, class std::shared_ptr<class pxrInternal_v0_25_8__pxrReserved__::HdSampledDataSource> (const class pxrInternal_v0_25_8__pxrReserved__::UsdAttributeQuery &, const class pxrInternal_v0_25_8__pxrReserved__::UsdImagingDataSourceStageGlobals &, const class pxrInternal_v0_25_8__pxrReserved__::SdfPath &, const class pxrInternal_v0_25_8__pxrReserved__::HdDataSourceLocator &) *>>>
// std::insert_iterator<std::vector<pxr::SdfHandle<pxr::SdfPropertySpec>, std::allocator<pxr::SdfHandle<pxr::SdfPropertySpec>>>>
// std::reference_wrapper<pxr::SdfHandle<pxr::SdfPropertySpec> const>
// std::vector<pxr::SdfSpec, std::allocator<pxr::SdfSpec>>
// pxr::TfWeakPtr<pxr::SdfSchemaBase>
// pxr::TfHashMap<pxr::TfToken, pxr::SdfSchemaBase::FieldDefinition, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdfSchemaBase::FieldDefinition>>>
// std::unordered_map<pxr::TfToken, pxr::SdfSchemaBase::FieldDefinition, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::SdfSchemaBase::FieldDefinition>>>
// std::pair<pxr::TfToken, pxr::SdfSchemaBase::FieldDefinition>
// std::unique_ptr<pxr::SdfChangeBlock, std::default_delete<pxr::SdfChangeBlock>>
// pxr::SdfListProxy<pxr::SdfNameKeyPolicy>
// pxr::SdfListProxy<pxr::SdfPathKeyPolicy>
// pxr::SdfListProxy<pxr::SdfReferenceTypePolicy>
// std::pair<pxr::SdfPath, pxr::SdfChangeList::Entry>
// pxr::TfHashMap<std::string, pxr::TfRefPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfRefPtr<pxr::SdfLayer>>>>
// std::map<pxr::TfRefPtr<pxr::SdfLayer>, pxr::TfRefPtr<pxr::SdfLayer>, std::less<pxr::TfRefPtr<pxr::SdfLayer>>, std::allocator<std::pair<pxr::TfRefPtr<pxr::SdfLayer> const, pxr::TfRefPtr<pxr::SdfLayer>>>>
// std::map<pxr::TfWeakPtr<pxr::SdfLayer>, std::unordered_set<std::pair<pxr::SdfPath, pxr::SdfPath>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::SdfPath>>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>, std::less<pxr::TfWeakPtr<pxr::SdfLayer>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::unordered_set<std::pair<pxr::SdfPath, pxr::SdfPath>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::SdfPath>>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>>>>
// std::optional<pxr::TfWeakPtr<pxr::SdfLayer>>
// std::set<pxr::TfRefPtr<pxr::SdfLayer>, std::less<pxr::TfRefPtr<pxr::SdfLayer>>, std::allocator<pxr::TfRefPtr<pxr::SdfLayer>>>
// std::unordered_map<std::string, pxr::TfRefPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfRefPtr<pxr::SdfLayer>>>>
// std::unordered_map<std::string, pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfWeakPtr<pxr::SdfLayer>>>>
// std::unordered_multimap<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::UsdStage *, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::SdfLayer>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, pxr::UsdStage *>>>
// std::unordered_multimap<std::string, pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfWeakPtr<pxr::SdfLayer>>>>
// std::unordered_set<pxr::TfRefPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<pxr::TfRefPtr<pxr::SdfLayer>>, std::allocator<pxr::TfRefPtr<pxr::SdfLayer>>>
// std::unordered_set<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::SdfLayer>>, std::allocator<pxr::TfWeakPtr<pxr::SdfLayer>>>
// std::unordered_set<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, std::string>, pxr::TfHash, std::equal_to<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, std::string>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, std::string>>>
// std::vector<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, bool>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, bool>>>
// std::vector<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfNotice::Key>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfNotice::Key>>>
// std::pair<pxr::TfRefPtr<pxr::SdfLayer>, pxr::SdfChangeList>
// std::pair<pxr::TfRefPtr<pxr::SdfLayer>, pxr::TfRefPtr<pxr::SdfLayer>>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, bool>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::SdfChangeList>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, pxr::TfNotice::Key>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer>, std::string>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, pxr::UsdStage *>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::unordered_set<std::pair<pxr::SdfPath, pxr::SdfPath>, pxr::TfHash, std::equal_to<std::pair<pxr::SdfPath, pxr::SdfPath>>, std::allocator<std::pair<pxr::SdfPath, pxr::SdfPath>>>>
// std::pair<std::string const, pxr::TfRefPtr<pxr::SdfLayer>>
// std::pair<std::string const, pxr::TfWeakPtr<pxr::SdfLayer>>
// std::vector<std::pair<pxr::SdfHandle<pxr::SdfPropertySpec>, pxr::SdfLayerOffset>, std::allocator<std::pair<pxr::SdfHandle<pxr::SdfPropertySpec>, pxr::SdfLayerOffset>>>
// std::pair<pxr::SdfHandle<pxr::SdfPropertySpec>, pxr::SdfLayerOffset>
// std::vector<pxr::SdfPredicateParamNamesAndDefaults::Param, std::allocator<pxr::SdfPredicateParamNamesAndDefaults::Param>>
// std::vector<std::function<pxr::SdfPredicateFunctionResult, <const class pxrInternal_v0_25_8__pxrReserved__::UsdObject &>>, std::allocator<std::function<pxr::SdfPredicateFunctionResult, <const class pxrInternal_v0_25_8__pxrReserved__::UsdObject &>>>>
// std::vector<std::function<pxr::SdfPredicateFunctionResult, <const struct pxrInternal_v0_25_8__pxrReserved__::HdSceneIndexPrim &>>, std::allocator<std::function<pxr::SdfPredicateFunctionResult, <const struct pxrInternal_v0_25_8__pxrReserved__::HdSceneIndexPrim &>>>>
// std::vector<pxr::SdfPredicateProgram<pxr::HdSceneIndexPrim const &>, std::allocator<pxr::SdfPredicateProgram<pxr::HdSceneIndexPrim const &>>>
// pxr::SdfPathTable<bool>
// pxr::SdfPathTable<std::optional<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// pxr::SdfPathTable<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// pxr::SdfPathTable<bool>::NodeHandle
// pxr::SdfPathTable<pxr::PcpPrimIndex>::NodeHandle
// pxr::SdfPathTable<pxr::PcpPropertyIndex>::NodeHandle
// pxr::SdfPathTable<std::optional<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>::NodeHandle
// pxr::SdfPathTable<std::optional<pxr::HdSceneIndexPrim>>::NodeHandle
// pxr::SdfPathTable<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>::NodeHandle
// pxr::SdfPathTable<pxr::HdSceneIndexPrim>::NodeHandle
// std::unique_ptr<pxr::TfHashMap<pxr::SdfPayload, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPayload>, std::allocator<std::pair<pxr::SdfPayload const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::SdfPayload, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfPayload>, std::allocator<std::pair<pxr::SdfPayload const, unsigned long>>>>>
// std::deque<pxr::SdfHandle<pxr::SdfPrimSpec>, std::allocator<pxr::SdfHandle<pxr::SdfPrimSpec>>>
// std::stack<pxr::SdfHandle<pxr::SdfPrimSpec>, std::deque<pxr::SdfHandle<pxr::SdfPrimSpec>, std::allocator<pxr::SdfHandle<pxr::SdfPrimSpec>>>>
// std::vector<std::pair<pxr::SdfHandle<pxr::SdfPrimSpec>, pxr::SdfLayerOffset>, std::allocator<std::pair<pxr::SdfHandle<pxr::SdfPrimSpec>, pxr::SdfLayerOffset>>>
// std::pair<pxr::SdfHandle<pxr::SdfPrimSpec>, pxr::SdfLayerOffset>
// pxr::TfHashMap<pxr::SdfReference, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfReference>, std::allocator<std::pair<pxr::SdfReference const, unsigned long>>>
// std::list<pxr::SdfReference, std::allocator<pxr::SdfReference>>
// std::optional<pxr::SdfReference>
// std::set<pxr::SdfReference, std::less<pxr::SdfReference>, std::allocator<pxr::SdfReference>>
// std::unique_ptr<pxr::TfHashMap<pxr::SdfReference, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfReference>, std::allocator<std::pair<pxr::SdfReference const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::SdfReference, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfReference>, std::allocator<std::pair<pxr::SdfReference const, unsigned long>>>>>
// std::unordered_map<pxr::SdfReference, unsigned long, pxr::TfHash, std::equal_to<pxr::SdfReference>, std::allocator<std::pair<pxr::SdfReference const, unsigned long>>>
// std::pair<pxr::SdfReference, unsigned long>
// std::unique_ptr<pxr::SdfUsdaData, std::default_delete<pxr::SdfUsdaData>>
// std::pair<std::string const, pxr::SdfHandle<pxr::SdfVariantSetSpec>>
// std::pair<std::shared_ptr<pxr::ArAsset>, pxr::SdfZipFile>
// std::pair<std::string, std::pair<std::shared_ptr<pxr::ArAsset>, pxr::SdfZipFile>>
// std::unique_ptr<pxr::SdfZipFile::Iterator, std::default_delete<pxr::SdfZipFile::Iterator>>
// std::unordered_map<std::string, pxr::SdfZipFile::Iterator, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::SdfZipFile::Iterator>>>
// std::pair<std::string const, pxr::SdfZipFile::Iterator>
// std::unique_ptr<pxr::SdrParserPlugin, std::default_delete<pxr::SdrParserPlugin>>
// std::vector<std::unique_ptr<pxr::SdrParserPlugin, std::default_delete<pxr::SdrParserPlugin>>, std::allocator<std::unique_ptr<pxr::SdrParserPlugin, std::default_delete<pxr::SdrParserPlugin>>>>
// std::unordered_map<std::pair<pxr::TfToken, pxr::TfToken>, std::unique_ptr<pxr::SdrShaderNode, std::default_delete<pxr::SdrShaderNode>>, pxr::TfHash, std::equal_to<std::pair<pxr::TfToken, pxr::TfToken>>, std::allocator<std::pair<std::pair<pxr::TfToken, pxr::TfToken> const, std::unique_ptr<pxr::SdrShaderNode, std::default_delete<pxr::SdrShaderNode>>>>>
// std::pair<std::pair<pxr::TfToken, pxr::TfToken> const, std::unique_ptr<pxr::SdrShaderNode, std::default_delete<pxr::SdrShaderNode>>>
// std::map<pxr::SdfPath, std::unique_ptr<pxr::PcpMapExpression::Variable, std::default_delete<pxr::PcpMapExpression::Variable>>, pxr::SdfPath::FastLessThan, std::allocator<std::pair<pxr::SdfPath const, std::unique_ptr<pxr::PcpMapExpression::Variable, std::default_delete<pxr::PcpMapExpression::Variable>>>>>
// std::pair<pxr::SdfPath const, std::unique_ptr<pxr::PcpMapExpression::Variable, std::default_delete<pxr::PcpMapExpression::Variable>>>
// std::vector<pxr::PcpMapFunction, std::allocator<pxr::PcpMapFunction>>
// std::map<pxr::PcpNodeRef, std::vector<pxr::SdfSite, std::allocator<pxr::SdfSite>>, std::less<pxr::PcpNodeRef>, std::allocator<std::pair<pxr::PcpNodeRef const, std::vector<pxr::SdfSite, std::allocator<pxr::SdfSite>>>>>
// std::map<pxr::PcpNodeRef, int, std::less<pxr::PcpNodeRef>, std::allocator<std::pair<pxr::PcpNodeRef const, int>>>
// std::map<pxr::SdfPath, pxr::PcpNodeRef, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::PcpNodeRef>>>
// std::set<pxr::PcpNodeRef, std::less<pxr::PcpNodeRef>, std::allocator<pxr::PcpNodeRef>>
// std::set<std::pair<unsigned long, pxr::PcpNodeRef>, std::less<std::pair<unsigned long, pxr::PcpNodeRef>>, std::allocator<std::pair<unsigned long, pxr::PcpNodeRef>>>
// std::unordered_set<pxr::PcpNodeRef, pxr::TfHash, std::equal_to<pxr::PcpNodeRef>, std::allocator<pxr::PcpNodeRef>>
// std::pair<pxr::PcpNodeRef, pxr::PcpMapFunction>
// std::pair<pxr::PcpNodeRef, pxr::PcpNodeRef>
// std::pair<pxr::PcpNodeRef, pxr::SdfPath>
// std::pair<pxr::PcpNodeRef, unsigned long>
// std::pair<pxr::SdfPath, pxr::PcpNodeRef>
// std::pair<pxr::PcpNodeRef const, std::vector<pxr::SdfSite, std::allocator<pxr::SdfSite>>>
// std::pair<pxr::PcpNodeRef const, int>
// std::pair<unsigned long, pxr::PcpNodeRef>
// std::reference_wrapper<pxr::PcpSite const>
// std::map<pxr::PcpLayerStackSite, unsigned long, std::less<pxr::PcpLayerStackSite>, std::allocator<std::pair<pxr::PcpLayerStackSite const, unsigned long>>>
// std::set<pxr::PcpLayerStackSite, std::less<pxr::PcpLayerStackSite>, std::allocator<pxr::PcpLayerStackSite>>
// std::unordered_set<pxr::PcpLayerStackSite, pxr::TfHash, std::equal_to<pxr::PcpLayerStackSite>, std::allocator<pxr::PcpLayerStackSite>>
// std::pair<pxr::PcpLayerStackSite const, unsigned long>
// std::shared_ptr<pxr::PcpLayerStackIdentifier>
// std::unique_ptr<pxr::PcpLayerStackIdentifier, std::default_delete<pxr::PcpLayerStackIdentifier>>
// std::vector<pxr::PcpLayerStackIdentifier, std::allocator<pxr::PcpLayerStackIdentifier>>
// std::unique_ptr<pxr::PcpCache, std::default_delete<pxr::PcpCache>>
// std::unordered_map<pxr::SdfPath, std::vector<pxr::PcpCulledDependency, std::allocator<pxr::PcpCulledDependency>>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::vector<pxr::PcpCulledDependency, std::allocator<pxr::PcpCulledDependency>>>>>
// std::pair<pxr::SdfPath const, std::vector<pxr::PcpCulledDependency, std::allocator<pxr::PcpCulledDependency>>>
// std::unique_ptr<std::vector<std::shared_ptr<pxr::PcpErrorBase>, std::allocator<std::shared_ptr<pxr::PcpErrorBase>>>, std::default_delete<std::vector<std::shared_ptr<pxr::PcpErrorBase>, std::allocator<std::shared_ptr<pxr::PcpErrorBase>>>>>
// std::unique_ptr<pxr::PcpErrorArcCycle, std::default_delete<pxr::PcpErrorArcCycle>>
// std::unique_ptr<pxr::PcpErrorArcPermissionDenied, std::default_delete<pxr::PcpErrorArcPermissionDenied>>
// std::unique_ptr<pxr::PcpErrorArcToProhibitedChild, std::default_delete<pxr::PcpErrorArcToProhibitedChild>>
// std::unique_ptr<pxr::PcpErrorCapacityExceeded, std::default_delete<pxr::PcpErrorCapacityExceeded>>
// std::unique_ptr<pxr::PcpErrorInconsistentPropertyType, std::default_delete<pxr::PcpErrorInconsistentPropertyType>>
// std::unique_ptr<pxr::PcpErrorInconsistentAttributeType, std::default_delete<pxr::PcpErrorInconsistentAttributeType>>
// std::unique_ptr<pxr::PcpErrorInconsistentAttributeVariability, std::default_delete<pxr::PcpErrorInconsistentAttributeVariability>>
// std::unique_ptr<pxr::PcpErrorInvalidPrimPath, std::default_delete<pxr::PcpErrorInvalidPrimPath>>
// std::unique_ptr<pxr::PcpErrorInvalidAssetPath, std::default_delete<pxr::PcpErrorInvalidAssetPath>>
// std::unique_ptr<pxr::PcpErrorMutedAssetPath, std::default_delete<pxr::PcpErrorMutedAssetPath>>
// std::unique_ptr<pxr::PcpErrorInvalidInstanceTargetPath, std::default_delete<pxr::PcpErrorInvalidInstanceTargetPath>>
// std::unique_ptr<pxr::PcpErrorInvalidExternalTargetPath, std::default_delete<pxr::PcpErrorInvalidExternalTargetPath>>
// std::unique_ptr<pxr::PcpErrorInvalidTargetPath, std::default_delete<pxr::PcpErrorInvalidTargetPath>>
// std::unique_ptr<pxr::PcpErrorInvalidSublayerOffset, std::default_delete<pxr::PcpErrorInvalidSublayerOffset>>
// std::unique_ptr<pxr::PcpErrorInvalidReferenceOffset, std::default_delete<pxr::PcpErrorInvalidReferenceOffset>>
// std::unique_ptr<pxr::PcpErrorInvalidSublayerOwnership, std::default_delete<pxr::PcpErrorInvalidSublayerOwnership>>
// std::unique_ptr<pxr::PcpErrorInvalidSublayerPath, std::default_delete<pxr::PcpErrorInvalidSublayerPath>>
// std::shared_ptr<std::shared_ptr<pxr::PcpErrorRelocationBase>>
// std::unique_ptr<pxr::PcpErrorInvalidAuthoredRelocation, std::default_delete<pxr::PcpErrorInvalidAuthoredRelocation>>
// std::unique_ptr<pxr::PcpErrorInvalidConflictingRelocation, std::default_delete<pxr::PcpErrorInvalidConflictingRelocation>>
// std::vector<std::shared_ptr<pxr::PcpErrorInvalidConflictingRelocation>, std::allocator<std::shared_ptr<pxr::PcpErrorInvalidConflictingRelocation>>>
// std::map<pxr::SdfPath, std::shared_ptr<pxr::PcpErrorInvalidSameTargetRelocations>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<pxr::PcpErrorInvalidSameTargetRelocations>>>>
// std::unique_ptr<pxr::PcpErrorInvalidSameTargetRelocations, std::default_delete<pxr::PcpErrorInvalidSameTargetRelocations>>
// std::pair<pxr::SdfPath const, std::shared_ptr<pxr::PcpErrorInvalidSameTargetRelocations>>
// std::vector<pxr::PcpErrorInvalidSameTargetRelocations::RelocationSource, std::allocator<pxr::PcpErrorInvalidSameTargetRelocations::RelocationSource>>
// std::unique_ptr<pxr::PcpErrorOpinionAtRelocationSource, std::default_delete<pxr::PcpErrorOpinionAtRelocationSource>>
// std::unique_ptr<pxr::PcpErrorPrimPermissionDenied, std::default_delete<pxr::PcpErrorPrimPermissionDenied>>
// std::unique_ptr<pxr::PcpErrorPropertyPermissionDenied, std::default_delete<pxr::PcpErrorPropertyPermissionDenied>>
// std::unique_ptr<pxr::PcpErrorSublayerCycle, std::default_delete<pxr::PcpErrorSublayerCycle>>
// std::unique_ptr<pxr::PcpErrorTargetPermissionDenied, std::default_delete<pxr::PcpErrorTargetPermissionDenied>>
// std::unique_ptr<pxr::PcpErrorUnresolvedPrimPath, std::default_delete<pxr::PcpErrorUnresolvedPrimPath>>
// std::unique_ptr<pxr::PcpErrorVariableExpressionError, std::default_delete<pxr::PcpErrorVariableExpressionError>>
// pxr::SdfPathTable<pxr::PcpPrimIndex>
// std::shared_ptr<pxr::PcpPrimIndex>
// std::pair<pxr::SdfPath, pxr::PcpPrimIndex>
// std::pair<pxr::SdfPathTable<pxr::PcpPrimIndex>::NodeHandle, pxr::PcpPrimIndexOutputs>
// std::map<pxr::SdfPath, pxr::PcpArcInfo, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::PcpArcInfo>>>
// std::map<pxr::SdfPayload, pxr::PcpArcInfo, std::less<pxr::SdfPayload>, std::allocator<std::pair<pxr::SdfPayload const, pxr::PcpArcInfo>>>
// std::map<pxr::SdfReference, pxr::PcpArcInfo, std::less<pxr::SdfReference>, std::allocator<std::pair<pxr::SdfReference const, pxr::PcpArcInfo>>>
// std::map<std::string, pxr::PcpArcInfo, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::PcpArcInfo>>>
// std::pair<pxr::SdfPath const, pxr::PcpArcInfo>
// std::pair<pxr::SdfPayload const, pxr::PcpArcInfo>
// std::pair<pxr::SdfReference const, pxr::PcpArcInfo>
// std::pair<std::string const, pxr::PcpArcInfo>
// std::unordered_map<pxr::SdfPath, pxr::PcpDynamicFileFormatDependencyData, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::PcpDynamicFileFormatDependencyData>>>
// std::pair<pxr::SdfPath const, pxr::PcpDynamicFileFormatDependencyData>
// std::unordered_map<pxr::SdfPath, pxr::PcpExpressionVariablesDependencyData, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::PcpExpressionVariablesDependencyData>>>
// std::pair<pxr::SdfPath const, pxr::PcpExpressionVariablesDependencyData>
// pxr::SdfPathTable<pxr::PcpPropertyIndex>
// std::pair<pxr::SdfPath, pxr::PcpPropertyIndex>
// std::pair<pxr::PcpCache *, pxr::PcpCacheChanges>
// std::vector<pxr::PcpDependentNamespaceEdits::CompositionFieldEdit, std::allocator<pxr::PcpDependentNamespaceEdits::CompositionFieldEdit>>
// std::unordered_map<pxr::PcpCache const *, std::vector<pxr::PcpDependentNamespaceEdits::MoveEditDescription, std::allocator<pxr::PcpDependentNamespaceEdits::MoveEditDescription>>, std::hash<pxr::PcpCache const>, std::equal_to<pxr::PcpCache const *>, std::allocator<std::pair<pxr::PcpCache const *, std::vector<pxr::PcpDependentNamespaceEdits::MoveEditDescription, std::allocator<pxr::PcpDependentNamespaceEdits::MoveEditDescription>>>>>
// std::pair<pxr::PcpCache const *, std::vector<pxr::PcpDependentNamespaceEdits::MoveEditDescription, std::allocator<pxr::PcpDependentNamespaceEdits::MoveEditDescription>>>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::vector<pxr::PcpDependentNamespaceEdits::MoveEditDescription, std::allocator<pxr::PcpDependentNamespaceEdits::MoveEditDescription>>>
// std::shared_ptr<pxr::PcpExpressionVariables>
// std::unordered_map<pxr::PcpLayerStackIdentifier, pxr::PcpExpressionVariables, pxr::TfHash, std::equal_to<pxr::PcpLayerStackIdentifier>, std::allocator<std::pair<pxr::PcpLayerStackIdentifier const, pxr::PcpExpressionVariables>>>
// std::pair<pxr::PcpLayerStackIdentifier const, pxr::PcpExpressionVariables>
// std::deque<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>
// std::map<pxr::TfWeakPtr<pxr::PcpLayerStack>, int, std::less<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, int>>>
// std::set<pxr::TfRefPtr<pxr::PcpLayerStack>, std::less<pxr::TfRefPtr<pxr::PcpLayerStack>>, std::allocator<pxr::TfRefPtr<pxr::PcpLayerStack>>>
// std::set<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::less<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>
// std::unordered_map<pxr::PcpLayerStackIdentifier, pxr::TfWeakPtr<pxr::PcpLayerStack>, pxr::TfHash, std::equal_to<pxr::PcpLayerStackIdentifier>, std::allocator<std::pair<pxr::PcpLayerStackIdentifier const, pxr::TfWeakPtr<pxr::PcpLayerStack>>>>
// std::unordered_map<pxr::TfRefPtr<pxr::PcpLayerStack>, pxr::SdfPathTable<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>, pxr::TfHash, std::equal_to<pxr::TfRefPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfRefPtr<pxr::PcpLayerStack> const, pxr::SdfPathTable<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>>
// std::unordered_map<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::set<std::string, std::less<std::string>, std::allocator<std::string>>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::set<std::string, std::less<std::string>, std::allocator<std::string>>>>>
// std::unordered_map<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::unordered_set<std::string, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::string>>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::unordered_set<std::string, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::string>>>>>
// std::unordered_map<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::unordered_map<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::vector<pxr::TfWeakPtr<pxr::SdfLayer>, std::allocator<pxr::TfWeakPtr<pxr::SdfLayer>>>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::PcpLayerStack>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::vector<pxr::TfWeakPtr<pxr::SdfLayer>, std::allocator<pxr::TfWeakPtr<pxr::SdfLayer>>>>>>
// std::unordered_map<pxr::TfWeakPtr<pxr::SdfLayer>, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::SdfLayer>>, std::allocator<std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>>>>
// std::unordered_map<std::string, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>>>>
// std::pair<pxr::PcpLayerStackIdentifier const, pxr::TfWeakPtr<pxr::PcpLayerStack>>
// std::pair<pxr::TfRefPtr<pxr::PcpLayerStack> const, pxr::SdfPathTable<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, pxr::PcpLayerStackChanges>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::set<std::string, std::less<std::string>, std::allocator<std::string>>>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::unordered_set<std::string, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::string>>>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, std::vector<pxr::TfWeakPtr<pxr::SdfLayer>, std::allocator<pxr::TfWeakPtr<pxr::SdfLayer>>>>
// std::pair<pxr::TfWeakPtr<pxr::PcpLayerStack> const, int>
// std::pair<pxr::TfWeakPtr<pxr::SdfLayer> const, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>>
// std::pair<std::string const, std::vector<pxr::TfWeakPtr<pxr::PcpLayerStack>, std::allocator<pxr::TfWeakPtr<pxr::PcpLayerStack>>>>
// pxr::TfHashMap<pxr::UsdPrim, pxr::GfMatrix4d, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::GfMatrix4d>>>
// pxr::TfHashMap<pxr::UsdPrim, pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::SdfPath>>>
// pxr::TfHashMap<pxr::UsdPrim, pxr::TfToken, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::TfToken>>>
// pxr::TfHashMap<pxr::UsdPrim, pxr::VtArray<pxr::VtArray<int>>, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::VtArray<pxr::VtArray<int>>>>>
// pxr::TfHashMap<pxr::UsdPrim, int, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, int>>>
// std::unordered_map<pxr::UsdPrim, pxr::GfMatrix4d, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::GfMatrix4d>>>
// std::unordered_map<pxr::UsdPrim, pxr::SdfPath, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::SdfPath>>>
// std::unordered_map<pxr::UsdPrim, pxr::TfToken, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::TfToken>>>
// std::unordered_map<pxr::UsdPrim, pxr::VtArray<pxr::VtArray<int>>, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::VtArray<pxr::VtArray<int>>>>>
// std::unordered_map<pxr::UsdPrim, int, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, int>>>
// std::pair<bool, pxr::UsdPrim>
// std::pair<pxr::UsdPrim, bool>
// std::pair<pxr::UsdPrim, pxr::TfToken>
// std::pair<pxr::UsdPrim const, pxr::GfMatrix4d>
// std::pair<pxr::UsdPrim const, pxr::SdfPath>
// std::pair<pxr::UsdPrim const, pxr::VtArray<pxr::VtArray<int>>>
// std::pair<pxr::UsdPrim const, int>
// pxr::SdfPredicateProgram<pxr::UsdObject>
// std::set<pxr::UsdObject, std::less<pxr::UsdObject>, std::allocator<pxr::UsdObject>>
// std::vector<pxr::SdfPredicateProgram<pxr::UsdObject>, std::allocator<pxr::SdfPredicateProgram<pxr::UsdObject>>>
// std::unique_ptr<pxr::UsdPrimDefinition, std::default_delete<pxr::UsdPrimDefinition>>
// std::unordered_map<pxr::TfToken, std::unique_ptr<pxr::UsdPrimDefinition, std::default_delete<pxr::UsdPrimDefinition>> const, pxr::TfHash, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::unique_ptr<pxr::UsdPrimDefinition, std::default_delete<pxr::UsdPrimDefinition>> const>>>
// std::unordered_map<pxr::TfType, pxr::UsdSchemaRegistry::SchemaInfo, pxr::TfHash, std::equal_to<pxr::TfType>, std::allocator<std::pair<pxr::TfType const, pxr::UsdSchemaRegistry::SchemaInfo>>>
// std::pair<pxr::TfType const, pxr::UsdSchemaRegistry::SchemaInfo>
// std::unique_ptr<pxr::UsdPrimTypeInfo, std::default_delete<pxr::UsdPrimTypeInfo>>
// std::unordered_set<pxr::TfRefPtr<pxr::UsdStage>, pxr::TfHash, std::equal_to<pxr::TfRefPtr<pxr::UsdStage>>, std::allocator<pxr::TfRefPtr<pxr::UsdStage>>>
// std::pair<pxr::TfRefPtr<pxr::UsdStage>, bool>
// std::pair<pxr::TfWeakPtr<pxr::UsdStage>, pxr::UsdEditTarget>
// std::vector<pxr::UsdProperty, std::allocator<pxr::UsdProperty>>
// std::map<std::string, pxr::UsdCollectionAPI, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdCollectionAPI>>>
// std::vector<pxr::UsdCollectionAPI, std::allocator<pxr::UsdCollectionAPI>>
// std::pair<std::string const, pxr::UsdCollectionAPI>
// std::vector<pxr::UsdColorSpaceDefinitionAPI, std::allocator<pxr::UsdColorSpaceDefinitionAPI>>
// std::unique_ptr<pxr::UsdAttributeQuery, std::default_delete<pxr::UsdAttributeQuery>>
// std::vector<pxr::UsdAttributeQuery, std::allocator<pxr::UsdAttributeQuery>>
// std::unique_ptr<pxr::UsdResolveTarget, std::default_delete<pxr::UsdResolveTarget>>
// std::pair<pxr::UsdNotice::ObjectsChanged::PathRange::iterator, pxr::UsdNotice::ObjectsChanged::PathRange::iterator>
// std::vector<pxr::UsdPrimCompositionQueryArc, std::allocator<pxr::UsdPrimCompositionQueryArc>>
// std::vector<pxr::UsdPrimRange, std::allocator<pxr::UsdPrimRange>>
// std::unordered_map<pxr::UsdStage *, pxr::UsdStageCache::Id, pxr::TfHash, std::equal_to<pxr::UsdStage *>, std::allocator<std::pair<pxr::UsdStage *, pxr::UsdStageCache::Id>>>
// std::unordered_map<pxr::UsdStageCache::Id, pxr::TfRefPtr<pxr::UsdStage>, pxr::TfHash, std::equal_to<pxr::UsdStageCache::Id>, std::allocator<std::pair<pxr::UsdStageCache::Id const, pxr::TfRefPtr<pxr::UsdStage>>>>
// std::pair<pxr::UsdStage *, pxr::UsdStageCache::Id>
// std::pair<pxr::UsdStageCache::Id const, pxr::TfRefPtr<pxr::UsdStage>>
// pxr::TfHashMap<pxr::UsdPrim, pxr::UsdGeomImageable::PurposeInfo, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::UsdGeomImageable::PurposeInfo>>>
// std::unordered_map<pxr::UsdPrim, pxr::UsdGeomImageable::PurposeInfo, pxr::TfHash, std::equal_to<pxr::UsdPrim>, std::allocator<std::pair<pxr::UsdPrim const, pxr::UsdGeomImageable::PurposeInfo>>>
// std::pair<pxr::UsdPrim const, pxr::UsdGeomImageable::PurposeInfo>
// std::vector<pxr::UsdGeomPrimvar, std::allocator<pxr::UsdGeomPrimvar>>
// std::vector<pxr::UsdGeomXformOp, std::allocator<pxr::UsdGeomXformOp>>
// std::vector<pxr::UsdGeomConstraintTarget, std::allocator<pxr::UsdGeomConstraintTarget>>
// std::vector<pxr::UsdGeomSubset, std::allocator<pxr::UsdGeomSubset>>
// std::map<std::string, pxr::UsdShadeConnectableAPI, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeConnectableAPI>>>
// std::map<std::string, std::map<std::string, pxr::UsdShadeConnectableAPI, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeConnectableAPI>>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::map<std::string, pxr::UsdShadeConnectableAPI, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeConnectableAPI>>>>>>
// std::pair<std::string const, pxr::UsdShadeConnectableAPI>
// std::pair<std::string const, std::map<std::string, pxr::UsdShadeConnectableAPI, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeConnectableAPI>>>>
// std::vector<pxr::UsdShadeConnectionSourceInfo, std::allocator<pxr::UsdShadeConnectionSourceInfo>>
// std::map<std::string, pxr::UsdShadeInput, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeInput>>>
// std::vector<pxr::UsdShadeInput, std::allocator<pxr::UsdShadeInput>>
// std::pair<pxr::UsdShadeInput const, std::vector<pxr::UsdShadeInput, std::allocator<pxr::UsdShadeInput>>>
// std::pair<std::string const, pxr::UsdShadeInput>
// std::map<std::string, std::vector<pxr::UsdShadeOutput, std::allocator<pxr::UsdShadeOutput>>, std::less<std::string>, std::allocator<std::pair<std::string const, std::vector<pxr::UsdShadeOutput, std::allocator<pxr::UsdShadeOutput>>>>>
// std::vector<pxr::UsdShadeOutput, std::allocator<pxr::UsdShadeOutput>>
// std::pair<std::string, std::vector<pxr::UsdShadeOutput, std::allocator<pxr::UsdShadeOutput>>>
// std::vector<pxr::UsdShadeCoordSysAPI, std::allocator<pxr::UsdShadeCoordSysAPI>>
// std::map<std::string, pxr::UsdShadeMaterial, std::less<std::string>, std::allocator<std::pair<std::string const, pxr::UsdShadeMaterial>>>
// std::vector<pxr::UsdShadeMaterial, std::allocator<pxr::UsdShadeMaterial>>
// std::pair<std::string const, pxr::UsdShadeMaterial>
// std::pair<pxr::UsdShadeNodeGraph const, std::unordered_map<pxr::UsdShadeInput, std::vector<pxr::UsdShadeInput, std::allocator<pxr::UsdShadeInput>>, pxr::UsdShadeInput::Hash, std::equal_to<pxr::UsdShadeInput>, std::allocator<std::pair<pxr::UsdShadeInput const, std::vector<pxr::UsdShadeInput, std::allocator<pxr::UsdShadeInput>>>>>>
// std::shared_ptr<pxr::UsdShadeConnectableAPIBehavior>
// std::unique_ptr<pxr::UsdShadeConnectableAPIBehavior, std::default_delete<pxr::UsdShadeConnectableAPIBehavior>>
// std::unique_ptr<pxr::UsdShadeMaterialBindingAPI::BindingsAtPrim, std::default_delete<pxr::UsdShadeMaterialBindingAPI::BindingsAtPrim>>
// std::pair<pxr::SdfPath, std::unique_ptr<pxr::UsdShadeMaterialBindingAPI::BindingsAtPrim, std::default_delete<pxr::UsdShadeMaterialBindingAPI::BindingsAtPrim>>>
// std::vector<pxr::UsdRenderSpec::Product, std::allocator<pxr::UsdRenderSpec::Product>>
// std::vector<pxr::UsdRenderSpec::RenderVar, std::allocator<pxr::UsdRenderSpec::RenderVar>>
// pxr::TfRefPtr<pxr::UsdHydraDiscoveryPlugin>
// std::vector<pxr::UsdSemanticsLabelsAPI, std::allocator<pxr::UsdSemanticsLabelsAPI>>
// std::vector<pxr::UsdSkelSkeleton, std::allocator<pxr::UsdSkelSkeleton>>
// std::vector<pxr::UsdSkelInbetweenShape, std::allocator<pxr::UsdSkelInbetweenShape>>
// std::vector<pxr::UsdSkelRoot, std::allocator<pxr::UsdSkelRoot>>
// std::unordered_map<pxr::SdfPath, pxr::UsdSkelBinding, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::UsdSkelBinding>>>
// std::vector<pxr::UsdSkelBinding, std::allocator<pxr::UsdSkelBinding>>
// std::pair<pxr::SdfPath const, pxr::UsdSkelBinding>
// pxr::VtArray<pxr::UsdSkelSkinningQuery>
// std::pair<pxr::UsdPrim const, pxr::UsdSkelSkinningQuery>
// std::pair<pxr::UsdSkelSkeleton const, pxr::VtArray<pxr::UsdSkelSkinningQuery>>
// std::shared_ptr<pxr::UsdSkelBlendShapeQuery>
// std::unique_ptr<pxr::UsdSkelBlendShapeQuery, std::default_delete<pxr::UsdSkelBlendShapeQuery>>
// std::pair<pxr::UsdPrim const, pxr::UsdSkelSkeletonQuery>
// std::vector<pxr::UsdUIAccessibilityAPI, std::allocator<pxr::UsdUIAccessibilityAPI>>
// std::vector<pxr::UsdUtilsCoalescingDiagnosticDelegateUnsharedItem, std::allocator<pxr::UsdUtilsCoalescingDiagnosticDelegateUnsharedItem>>
// std::back_insert_iterator<std::vector<pxr::UsdUtilsSparseAttrValueWriter, std::allocator<pxr::UsdUtilsSparseAttrValueWriter>>>
// std::vector<pxr::UsdUtilsSparseAttrValueWriter, std::allocator<pxr::UsdUtilsSparseAttrValueWriter>>
// std::pair<pxr::UsdAttribute const, pxr::UsdUtilsSparseAttrValueWriter>
// std::reference_wrapper<std::function<pxr::UsdUtilsStitchValueStatus, <const class pxrInternal_v0_25_8__pxrReserved__::TfToken &, const class pxrInternal_v0_25_8__pxrReserved__::SdfPath &, const class pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr<class pxrInternal_v0_25_8__pxrReserved__::SdfLayer> &, _Bool, const class pxrInternal_v0_25_8__pxrReserved__::TfWeakPtr<class pxrInternal_v0_25_8__pxrReserved__::SdfLayer> &, _Bool, class pxrInternal_v0_25_8__pxrReserved__::VtValue *>> const>
// std::vector<pxr::UsdPhysicsCollisionGroup, std::allocator<pxr::UsdPhysicsCollisionGroup>>
// std::vector<pxr::UsdPhysicsDriveAPI, std::allocator<pxr::UsdPhysicsDriveAPI>>
// std::vector<pxr::UsdPhysicsLimitAPI, std::allocator<pxr::UsdPhysicsLimitAPI>>
// pxr::TfSpan<pxr::UsdPhysicsObjectDesc const>
// std::unordered_map<std::string, pxr::UsdMtlxUsdTypeInfo, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::UsdMtlxUsdTypeInfo>>>
// std::pair<std::string const, pxr::UsdMtlxUsdTypeInfo>
// std::unordered_set<pxr::VdfInput *, std::hash<pxr::VdfInput>, std::equal_to<pxr::VdfInput *>, std::allocator<pxr::VdfInput *>>
// pxr::TfHashMap<pxr::VdfOutput *, pxr::VdfMask, pxr::TfHash, std::equal_to<pxr::VdfOutput *>, std::allocator<std::pair<pxr::VdfOutput *, pxr::VdfMask>>>
// std::reference_wrapper<pxr::VdfMask const>
// std::unique_ptr<pxr::VdfMask, std::default_delete<pxr::VdfMask>>
// std::unordered_map<pxr::VdfOutput *, pxr::VdfMask, pxr::TfHash, std::equal_to<pxr::VdfOutput *>, std::allocator<std::pair<pxr::VdfOutput *, pxr::VdfMask>>>
// std::pair<pxr::VdfMask, pxr::TfBits>
// std::pair<pxr::VdfMask, pxr::VdfMask>
// std::pair<pxr::VdfMask, unsigned long>
// std::pair<pxr::VdfOutput *, pxr::VdfMask>
// std::pair<pxr::VdfOutput const *, pxr::VdfMask>
// std::pair<std::pair<pxr::VdfMask, pxr::VdfMask> const, pxr::VdfMask>
// std::pair<unsigned long long, pxr::VdfMask>
// pxr::TfHashMap<pxr::VdfMask, unsigned long, pxr::VdfMask::HashFunctor, std::equal_to<pxr::VdfMask>, std::allocator<std::pair<pxr::VdfMask const, unsigned long>>>
// std::unique_ptr<pxr::TfHashMap<pxr::VdfMask, unsigned long, pxr::VdfMask::HashFunctor, std::equal_to<pxr::VdfMask>, std::allocator<std::pair<pxr::VdfMask const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::VdfMask, unsigned long, pxr::VdfMask::HashFunctor, std::equal_to<pxr::VdfMask>, std::allocator<std::pair<pxr::VdfMask const, unsigned long>>>>>
// std::unordered_map<pxr::VdfMask, unsigned long, pxr::VdfMask::HashFunctor, std::equal_to<pxr::VdfMask>, std::allocator<std::pair<pxr::VdfMask const, unsigned long>>>
// pxr::TfSpan<pxr::VdfMaskedOutput const>
// std::shared_ptr<std::vector<pxr::VdfMaskedOutput, std::allocator<pxr::VdfMaskedOutput>>>
// std::unordered_map<pxr::VdfNode const *, std::vector<pxr::VdfMaskedOutput, std::allocator<pxr::VdfMaskedOutput>>, pxr::TfHash, std::equal_to<pxr::VdfNode const *>, std::allocator<std::pair<pxr::VdfNode const *, std::vector<pxr::VdfMaskedOutput, std::allocator<pxr::VdfMaskedOutput>>>>>
// std::vector<std::pair<pxr::VdfMaskedOutput, pxr::VdfVector *>, std::allocator<std::pair<pxr::VdfMaskedOutput, pxr::VdfVector *>>>
// std::pair<pxr::VdfMaskedOutput, pxr::VdfVector *>
// std::pair<pxr::VdfMaskedOutput, unsigned long>
// std::pair<pxr::VdfMaskedOutput const, unsigned int>
// std::pair<pxr::VdfNode const *, std::vector<pxr::VdfMaskedOutput, std::allocator<pxr::VdfMaskedOutput>>>
// pxr::TfHashMap<pxr::VdfMaskedOutput, unsigned long, pxr::VdfMaskedOutput::Hash, std::equal_to<pxr::VdfMaskedOutput>, std::allocator<std::pair<pxr::VdfMaskedOutput const, unsigned long>>>
// std::unique_ptr<pxr::TfHashMap<pxr::VdfMaskedOutput, unsigned long, pxr::VdfMaskedOutput::Hash, std::equal_to<pxr::VdfMaskedOutput>, std::allocator<std::pair<pxr::VdfMaskedOutput const, unsigned long>>>, std::default_delete<pxr::TfHashMap<pxr::VdfMaskedOutput, unsigned long, pxr::VdfMaskedOutput::Hash, std::equal_to<pxr::VdfMaskedOutput>, std::allocator<std::pair<pxr::VdfMaskedOutput const, unsigned long>>>>>
// std::unordered_map<pxr::VdfMaskedOutput, unsigned long, pxr::VdfMaskedOutput::Hash, std::equal_to<pxr::VdfMaskedOutput>, std::allocator<std::pair<pxr::VdfMaskedOutput const, unsigned long>>>
// std::unordered_set<pxr::VdfNode *, std::hash<pxr::VdfNode>, std::equal_to<pxr::VdfNode *>, std::allocator<pxr::VdfNode *>>
// pxr::VdfVector::ReadWriteAccessor<bool>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfMatrix2d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfMatrix3d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfMatrix4d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfQuatd>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfQuatf>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfQuath>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec2d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec2f>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec2h>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec2i>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec3d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec3f>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec3h>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec3i>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec4d>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec4f>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec4h>
// pxr::VdfVector::ReadWriteAccessor<pxr::GfVec4i>
// pxr::VdfVector::ReadWriteAccessor<pxr::SdfAssetPath>
// pxr::VdfVector::ReadWriteAccessor<pxr::SdfOpaqueValue>
// pxr::VdfVector::ReadWriteAccessor<pxr::SdfPath>
// pxr::VdfVector::ReadWriteAccessor<pxr::SdfPathExpression>
// pxr::VdfVector::ReadWriteAccessor<pxr::SdfTimeCode>
// pxr::VdfVector::ReadWriteAccessor<pxr::TfToken>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::pxr_half::half>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfMatrix2d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfMatrix3d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfMatrix4d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfQuatd>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfQuatf>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfQuath>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec2d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec2f>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec2h>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec2i>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec3d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec3f>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec3h>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec3i>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec4d>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec4f>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec4h>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::GfVec4i>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::TfToken>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<bool>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::SdfAssetPath>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::SdfOpaqueValue>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::SdfPath>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::SdfPathExpression>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<pxr::SdfTimeCode>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<double>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<float>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<long long>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<int>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<std::string>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<unsigned long long>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<unsigned char>>
// pxr::VdfVector::ReadWriteAccessor<pxr::VtArray<unsigned int>>
// pxr::VdfVector::ReadWriteAccessor<pxr::pxr_half::half>
// pxr::VdfVector::ReadWriteAccessor<double>
// pxr::VdfVector::ReadWriteAccessor<float>
// pxr::VdfVector::ReadWriteAccessor<int>
// pxr::VdfVector::ReadWriteAccessor<long long>
// pxr::VdfVector::ReadWriteAccessor<std::string>
// pxr::VdfVector::ReadWriteAccessor<unsigned char>
// pxr::VdfVector::ReadWriteAccessor<unsigned int>
// pxr::VdfVector::ReadWriteAccessor<unsigned long long>
// pxr::VdfVector::ReadAccessor<bool>
// pxr::VdfVector::ReadAccessor<pxr::GfMatrix2d>
// pxr::VdfVector::ReadAccessor<pxr::GfMatrix3d>
// pxr::VdfVector::ReadAccessor<pxr::GfMatrix4d>
// pxr::VdfVector::ReadAccessor<pxr::GfQuatd>
// pxr::VdfVector::ReadAccessor<pxr::GfQuatf>
// pxr::VdfVector::ReadAccessor<pxr::GfQuath>
// pxr::VdfVector::ReadAccessor<pxr::GfVec2d>
// pxr::VdfVector::ReadAccessor<pxr::GfVec2f>
// pxr::VdfVector::ReadAccessor<pxr::GfVec2h>
// pxr::VdfVector::ReadAccessor<pxr::GfVec2i>
// pxr::VdfVector::ReadAccessor<pxr::GfVec3d>
// pxr::VdfVector::ReadAccessor<pxr::GfVec3f>
// pxr::VdfVector::ReadAccessor<pxr::GfVec3h>
// pxr::VdfVector::ReadAccessor<pxr::GfVec3i>
// pxr::VdfVector::ReadAccessor<pxr::GfVec4d>
// pxr::VdfVector::ReadAccessor<pxr::GfVec4f>
// pxr::VdfVector::ReadAccessor<pxr::GfVec4h>
// pxr::VdfVector::ReadAccessor<pxr::GfVec4i>
// pxr::VdfVector::ReadAccessor<pxr::SdfAssetPath>
// pxr::VdfVector::ReadAccessor<pxr::SdfOpaqueValue>
// pxr::VdfVector::ReadAccessor<pxr::SdfPath>
// pxr::VdfVector::ReadAccessor<pxr::SdfPathExpression>
// pxr::VdfVector::ReadAccessor<pxr::SdfTimeCode>
// pxr::VdfVector::ReadAccessor<pxr::TfToken>
// pxr::VdfVector::ReadAccessor<pxr::pxr_half::half>
// pxr::VdfVector::ReadAccessor<double>
// pxr::VdfVector::ReadAccessor<float>
// pxr::VdfVector::ReadAccessor<int>
// pxr::VdfVector::ReadAccessor<long long>
// pxr::VdfVector::ReadAccessor<std::string>
// pxr::VdfVector::ReadAccessor<unsigned char>
// pxr::VdfVector::ReadAccessor<unsigned int>
// pxr::VdfVector::ReadAccessor<unsigned long long>
// pxr::VdfVector::ReadAccessor<pxr::VdfIndexedData<float>>
// std::unique_ptr<pxr::VdfIndexedData<float>, std::default_delete<pxr::VdfIndexedData<float>>>
// pxr::VdfIndexedDataIterator<int>
// std::pair<pxr::VdfIndexedDataIterator<int>, pxr::VdfIndexedDataIterator<int>>
// pxr::VdfLinearMap<pxr::TfToken, pxr::VdfInput *>
// pxr::VdfLinearMap<pxr::TfToken, pxr::VdfOutput *>
// std::unordered_multimap<pxr::VdfOutput const *, pxr::VdfOutput const *, std::hash<pxr::VdfOutput const>, std::equal_to<pxr::VdfOutput const *>, std::allocator<std::pair<pxr::VdfOutput const *, pxr::VdfOutput const *>>>
// std::unique_ptr<pxr::VdfRequest, std::default_delete<pxr::VdfRequest>>
// std::unique_ptr<pxr::VdfSMBLData, std::default_delete<pxr::VdfSMBLData>>
// std::map<pxr::VdfPoolChainIndex, pxr::VdfMaskedOutput, std::greater<pxr::VdfPoolChainIndex>, std::allocator<std::pair<pxr::VdfPoolChainIndex const, pxr::VdfMaskedOutput>>>
// std::map<pxr::VdfPoolChainIndex const, pxr::VdfMaskedOutput, std::less<pxr::VdfPoolChainIndex const>, std::allocator<std::pair<pxr::VdfPoolChainIndex const, pxr::VdfMaskedOutput>>>
// std::reference_wrapper<std::vector<std::pair<pxr::VdfPoolChainIndex, pxr::VdfOutput const *>, std::allocator<std::pair<pxr::VdfPoolChainIndex, pxr::VdfOutput const *>>> const>
// std::pair<pxr::VdfPoolChainIndex, pxr::VdfOutput const *>
// std::pair<pxr::VdfPoolChainIndex const, pxr::VdfMaskedOutput>
// std::unique_ptr<pxr::VdfExecutorInterface, std::default_delete<pxr::VdfExecutorInterface>>
// std::vector<pxr::VdfScheduleInputDependency, std::allocator<pxr::VdfScheduleInputDependency>>
// std::deque<pxr::VdfExecutionStats::Event, std::allocator<pxr::VdfExecutionStats::Event>>
// std::reference_wrapper<pxr::VdfSchedule const>
// std::unique_ptr<pxr::VdfSchedule, std::default_delete<pxr::VdfSchedule>>
// std::pair<pxr::VdfRequest const, std::unique_ptr<pxr::VdfSchedule, std::default_delete<pxr::VdfSchedule>>>
// std::vector<pxr::VdfScheduleOutput, std::allocator<pxr::VdfScheduleOutput>>
// std::vector<pxr::VdfScheduleInput, std::allocator<pxr::VdfScheduleInput>>
// std::vector<pxr::VdfScheduleNode, std::allocator<pxr::VdfScheduleNode>>
// std::unique_ptr<pxr::VdfSpeculationExecutorBase, std::default_delete<pxr::VdfSpeculationExecutorBase>>
// std::optional<pxr::VdfDataManagerFacade>
// pxr::VdfMaskMemoizer<pxrInternal_v0_25_8__pxrReserved__::TfHashMap>
// pxr::VdfMaskMemoizer<tbb::interface5::concurrent_unordered_map>
// pxr::VdfPullBasedExecutorEngine<pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>
// pxr::VdfSpeculationExecutorEngine<pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>
// pxr::VdfPullBasedExecutorEngine<pxr::VdfDataManagerHashTable>
// pxr::VdfSpeculationExecutorEngine<pxr::VdfDataManagerHashTable>
// std::unique_ptr<pxr::VdfExecutorInvalidator, std::default_delete<pxr::VdfExecutorInvalidator>>
// pxr::TfHashMap<pxr::VdfNode const *, pxr::VdfGrapherOptions::DisplayStyle, pxr::TfHash, std::equal_to<pxr::VdfNode const *>, std::allocator<std::pair<pxr::VdfNode const *, pxr::VdfGrapherOptions::DisplayStyle>>>
// std::unordered_map<pxr::VdfNode const *, pxr::VdfGrapherOptions::DisplayStyle, pxr::TfHash, std::equal_to<pxr::VdfNode const *>, std::allocator<std::pair<pxr::VdfNode const *, pxr::VdfGrapherOptions::DisplayStyle>>>
// std::pair<pxr::VdfNode const *, pxr::VdfGrapherOptions::DisplayStyle>
// std::shared_ptr<std::vector<pxr::VdfObjectPtr, std::allocator<pxr::VdfObjectPtr>>>
// std::pair<pxr::VdfObjectPtr const, pxr::TfToken>
// std::pair<pxr::VdfObjectPtr const, std::string>
// pxr::TfHashMap<pxr::VdfObjectPtr, pxr::TfToken, pxr::VdfObjectPtr::HashFunctor, std::equal_to<pxr::VdfObjectPtr>, std::allocator<std::pair<pxr::VdfObjectPtr const, pxr::TfToken>>>
// pxr::TfHashMap<pxr::VdfObjectPtr, std::string, pxr::VdfObjectPtr::HashFunctor, std::equal_to<pxr::VdfObjectPtr>, std::allocator<std::pair<pxr::VdfObjectPtr const, std::string>>>
// std::unordered_map<pxr::VdfObjectPtr, pxr::TfToken, pxr::VdfObjectPtr::HashFunctor, std::equal_to<pxr::VdfObjectPtr>, std::allocator<std::pair<pxr::VdfObjectPtr const, pxr::TfToken>>>
// std::unordered_map<pxr::VdfObjectPtr, std::string, pxr::VdfObjectPtr::HashFunctor, std::equal_to<pxr::VdfObjectPtr>, std::allocator<std::pair<pxr::VdfObjectPtr const, std::string>>>
// std::vector<pxr::VdfIndexedWeightsOperand, std::allocator<pxr::VdfIndexedWeightsOperand>>
// std::unique_ptr<pxr::VdfIsolatedSubnetwork, std::default_delete<pxr::VdfIsolatedSubnetwork>>
// pxr::TfHashMap<std::string, pxr::VdfTestUtils::Node, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::VdfTestUtils::Node>>>
// std::unordered_map<std::string, pxr::VdfTestUtils::Node, pxr::TfHash, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::VdfTestUtils::Node>>>
// std::pair<std::string const, pxr::VdfTestUtils::Node>
// std::unique_ptr<pxr::EfPageCacheStorage, std::default_delete<pxr::EfPageCacheStorage>>
// std::unique_ptr<pxr::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, pxr::VdfParallelDataManagerVector>, std::default_delete<pxr::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfParallelExecutorEngine, pxr::VdfParallelDataManagerVector>>>
// std::unique_ptr<pxr::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>, std::default_delete<pxr::EfPageCacheExecutor<pxrInternal_v0_25_8__pxrReserved__::VdfPullBasedExecutorEngine, pxr::VdfDataManagerVector<pxrInternal_v0_25_8__pxrReserved__::VdfDataManagerDeallocationMode::Background>>>>
// pxr::VdfVector::ReadAccessor<pxr::EfTime>
// pxr::VdfVector::ReadWriteAccessor<pxr::EfTime>
// pxr::exec_registration::NamespaceAncestor<pxr::GfMatrix4d>
// pxr::TfSpan<pxr::ExecValueKey const>
// std::vector<pxr::ExecUsdValueKey, std::allocator<pxr::ExecUsdValueKey>>
// std::map<pxr::GlfGLContext const *, pxr::GarchNSGLContextState, std::less<pxr::GlfGLContext const *>, std::allocator<std::pair<pxr::GlfGLContext const *, pxr::GarchNSGLContextState>>>
// std::pair<pxr::GlfGLContext const *, pxr::GarchNSGLContextState>
// std::vector<std::shared_ptr<pxr::HioImage>, std::allocator<std::shared_ptr<pxr::HioImage>>>
// std::unique_ptr<pxr::HioGlslfx, std::default_delete<pxr::HioGlslfx>>
// std::unique_ptr<pxr::HioGlslfxConfig, std::default_delete<pxr::HioGlslfxConfig>>
// std::unique_ptr<std::vector<pxr::PxOsdMeshTopologyValidation::Invalidation, std::allocator<pxr::PxOsdMeshTopologyValidation::Invalidation>>, std::default_delete<std::vector<pxr::PxOsdMeshTopologyValidation::Invalidation, std::allocator<pxr::PxOsdMeshTopologyValidation::Invalidation>>>>
// std::pair<std::string const, pxr::TfRefPtr<pxr::GlfDrawTarget::Attachment>>
// pxr::TfRefPtr<pxr::GlfDrawTarget::AttachmentsContainer>
// std::unordered_map<pxr::GarchNSGLContextState, std::weak_ptr<pxr::GlfGLContext>, std::hash<pxr::GarchNSGLContextState>, std::equal_to<pxr::GarchNSGLContextState>, std::allocator<std::pair<pxr::GarchNSGLContextState const, std::weak_ptr<pxr::GlfGLContext>>>>
// std::weak_ptr<pxr::GlfGLContext>
// std::pair<pxr::GarchNSGLContextState const, std::weak_ptr<pxr::GlfGLContext>>
// std::unique_ptr<pxr::GlfGLContextRegistrationInterface, std::default_delete<pxr::GlfGLContextRegistrationInterface>>
// std::vector<std::unique_ptr<pxr::GlfGLContextRegistrationInterface, std::default_delete<pxr::GlfGLContextRegistrationInterface>>, std::allocator<std::unique_ptr<pxr::GlfGLContextRegistrationInterface, std::default_delete<pxr::GlfGLContextRegistrationInterface>>>>
// std::unique_ptr<pxr::GlfGLRawContext, std::default_delete<pxr::GlfGLRawContext>>
// std::shared_ptr<pxr::GlfSimpleLight>
// std::unique_ptr<pxr::GlfTestGLContext, std::default_delete<pxr::GlfTestGLContext>>
// std::pair<pxr::HgiFormat, void (const void *, unsigned long, void *) *>
// std::vector<pxr::HgiBufferGpuToGpuOp, std::allocator<pxr::HgiBufferGpuToGpuOp>>
// std::unique_ptr<pxr::HgiGLCapabilities, std::default_delete<pxr::HgiGLCapabilities>>
// std::unique_ptr<pxr::HgiMetalCapabilities, std::default_delete<pxr::HgiMetalCapabilities>>
// std::unique_ptr<pxr::HgiMetalIndirectCommandEncoder, std::default_delete<pxr::HgiMetalIndirectCommandEncoder>>
// std::vector<pxr::HgiMetalIndirectCommandEncoder::FunctionState, std::allocator<pxr::HgiMetalIndirectCommandEncoder::FunctionState>>
// std::unordered_map<std::type_index, pxr::HdType, std::hash<std::type_index>, std::equal_to<std::type_index>, std::allocator<std::pair<std::type_index const, pxr::HdType>>>
// std::pair<std::type_index const, pxr::HdType>
// std::vector<std::shared_ptr<pxr::HdBufferArrayRange>, std::allocator<std::shared_ptr<pxr::HdBufferArrayRange>>>
// std::vector<std::weak_ptr<pxr::HdBufferArrayRange>, std::allocator<std::weak_ptr<pxr::HdBufferArrayRange>>>
// std::list<std::shared_ptr<pxr::HdBufferArray>, std::allocator<std::shared_ptr<pxr::HdBufferArray>>>
// std::weak_ptr<pxr::HdBufferArray>
// std::back_insert_iterator<std::vector<pxr::HdReprSelector, std::allocator<pxr::HdReprSelector>>>
// std::pair<pxr::HdReprSelector const *, std::back_insert_iterator<std::vector<pxr::HdReprSelector, std::allocator<pxr::HdReprSelector>>>>
// std::vector<std::pair<pxr::TfToken, std::shared_ptr<pxr::HdRepr>>, std::allocator<std::pair<pxr::TfToken, std::shared_ptr<pxr::HdRepr>>>>
// std::pair<pxr::TfToken, std::shared_ptr<pxr::HdRepr>>
// std::unique_ptr<pxr::HdDrawItem, std::default_delete<pxr::HdDrawItem>>
// std::vector<std::unique_ptr<pxr::HdDrawItem, std::default_delete<pxr::HdDrawItem>>, std::allocator<std::unique_ptr<pxr::HdDrawItem, std::default_delete<pxr::HdDrawItem>>>>
// std::shared_ptr<std::array<std::vector<pxr::HdPrimvarDescriptor, std::allocator<pxr::HdPrimvarDescriptor>>, 6UL>>
// std::shared_ptr<std::array<std::vector<pxr::HdExtComputationPrimvarDescriptor, std::allocator<pxr::HdExtComputationPrimvarDescriptor>>, 6UL>>
// std::shared_ptr<pxr::HdBasisCurvesTopology>
// std::unique_ptr<pxr::HdRenderIndex, std::default_delete<pxr::HdRenderIndex>>
// std::reference_wrapper<pxr::HdRprimCollection const>
// std::unique_ptr<pxr::HdResourceRegistry, std::default_delete<pxr::HdResourceRegistry>>
// std::pair<std::string const, std::unique_ptr<pxr::HdResourceRegistry, std::default_delete<pxr::HdResourceRegistry>>>
// pxr::SdfPathTable<std::optional<pxr::HdSceneIndexPrim>>
// pxr::SdfPathTable<pxr::HdSceneIndexPrim>
// std::optional<pxr::HdSceneIndexPrim>
// std::pair<pxr::SdfPath, std::optional<pxr::HdSceneIndexPrim>>
// std::pair<pxr::SdfPath, pxr::HdSceneIndexPrim>
// std::map<pxr::SdfPath, pxr::TfRefPtr<pxr::HdSceneIndexBase>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::TfRefPtr<pxr::HdSceneIndexBase>>>>
// std::unordered_map<std::string, pxr::TfWeakPtr<pxr::HdSceneIndexBase>, std::hash<std::allocator<char>>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, pxr::TfWeakPtr<pxr::HdSceneIndexBase>>>>
// std::unordered_set<pxr::TfWeakPtr<pxr::HdSceneIndexBase>, pxr::TfHash, std::equal_to<pxr::TfWeakPtr<pxr::HdSceneIndexBase>>, std::allocator<pxr::TfWeakPtr<pxr::HdSceneIndexBase>>>
// std::pair<pxr::SdfPath const, pxr::TfRefPtr<pxr::HdSceneIndexBase>>
// std::pair<std::string const, pxr::TfWeakPtr<pxr::HdSceneIndexBase>>
// std::map<pxr::TfToken, std::shared_ptr<pxr::HdDataSourceBase>, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdDataSourceBase>>>>
// std::vector<std::shared_ptr<pxr::HdDataSourceBase>, std::allocator<std::shared_ptr<pxr::HdDataSourceBase>>>
// std::pair<pxr::TfToken, std::shared_ptr<pxr::HdDataSourceBase>>
// std::pair<pxr::TfToken const, pxr::TfSmallVector<std::shared_ptr<pxr::HdDataSourceBase>, 8U>>
// std::optional<std::shared_ptr<pxr::HdContainerDataSource>>
// std::unordered_map<pxr::SdfPath, std::shared_ptr<pxr::HdContainerDataSource>, pxr::SdfPath::Hash, std::equal_to<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<pxr::HdContainerDataSource>>>>
// std::unordered_map<pxr::TfToken, std::shared_ptr<pxr::HdContainerDataSource>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSource>>>>
// std::vector<std::shared_ptr<pxr::HdContainerDataSource>, std::allocator<std::shared_ptr<pxr::HdContainerDataSource>>>
// std::pair<pxr::SdfPath const, std::shared_ptr<pxr::HdContainerDataSource>>
// std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSource>>
// std::vector<std::shared_ptr<pxr::HdSampledDataSource>, std::allocator<std::shared_ptr<pxr::HdSampledDataSource>>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<pxr::GlfSimpleLight>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<pxr::HdSceneDelegate *>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<unsigned int>>
// std::pair<std::shared_ptr<pxr::HdTypedSampledDataSource<int>>, std::shared_ptr<pxr::HdTypedSampledDataSource<int>>>
// std::unique_ptr<pxr::HdBlockDataSource, std::default_delete<pxr::HdBlockDataSource>>
// std::unordered_map<pxr::HdDataSourceLocator, std::shared_ptr<pxr::HdDataSourceBase>, pxr::TfHash, std::equal_to<pxr::HdDataSourceLocator>, std::allocator<std::pair<pxr::HdDataSourceLocator const, std::shared_ptr<pxr::HdDataSourceBase>>>>
// std::pair<pxr::HdDataSourceLocator const, std::shared_ptr<pxr::HdDataSourceBase>>
// std::pair<pxr::SdfPath const, pxr::HdDataSourceLocatorSet>
// std::pair<pxr::SdfPath const, pxr::TfDenseHashMap<pxr::SdfPath, pxr::HdDataSourceLocatorSet, pxr::TfHash, std::equal_to<pxr::SdfPath>, 128U>>
// std::back_insert_iterator<pxr::TfSmallVector<pxr::HdSceneIndexObserver::AddedPrimEntry, 16U>>
// std::vector<pxr::TfSmallVector<pxr::HdSceneIndexObserver::AddedPrimEntry, 16U>, std::allocator<pxr::TfSmallVector<pxr::HdSceneIndexObserver::AddedPrimEntry, 16U>>>
// std::pair<pxr::HdSceneIndexObserver::AddedPrimEntry, pxr::HdSceneIndexPrim>
// std::back_insert_iterator<pxr::TfSmallVector<pxr::HdSceneIndexObserver::RemovedPrimEntry, 16U>>
// std::back_insert_iterator<pxr::TfSmallVector<pxr::HdSceneIndexObserver::DirtiedPrimEntry, 16U>>
// std::vector<pxr::TfSmallVector<pxr::HdSceneIndexObserver::DirtiedPrimEntry, 16U>, std::allocator<pxr::TfSmallVector<pxr::HdSceneIndexObserver::DirtiedPrimEntry, 16U>>>
// std::vector<pxr::HdMergingSceneIndex::InputScene, std::allocator<pxr::HdMergingSceneIndex::InputScene>>
// pxr::HdTypedVectorSchema<pxr::HdTypedSampledDataSource<pxr::TfToken>>
// std::unordered_map<pxr::SdfPathExpression, std::pair<pxr::TfToken, pxr::HdCollectionExpressionEvaluator>, pxr::TfHash, std::equal_to<pxr::SdfPathExpression>, std::allocator<std::pair<pxr::SdfPathExpression const, std::pair<pxr::TfToken, pxr::HdCollectionExpressionEvaluator>>>>
// std::pair<pxr::TfToken, pxr::HdCollectionExpressionEvaluator>
// std::pair<pxr::SdfPathExpression const, std::pair<pxr::TfToken, pxr::HdCollectionExpressionEvaluator>>
// std::shared_ptr<pxr::HdContainerDataSourceEditor>
// std::unordered_map<pxr::TfToken, std::shared_ptr<pxr::HdContainerDataSourceEditor>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSourceEditor>>>>
// std::pair<pxr::TfToken const, std::shared_ptr<pxr::HdContainerDataSourceEditor>>
// std::unique_ptr<pxr::HdDataSourceLegacyPrim, std::default_delete<pxr::HdDataSourceLegacyPrim>>
// std::unique_ptr<pxr::HdDataSourceLegacyTaskPrim, std::default_delete<pxr::HdDataSourceLegacyTaskPrim>>
// std::unique_ptr<pxr::HdEngine, std::default_delete<pxr::HdEngine>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<std::shared_ptr<pxr::HdFlattenedDataSourceProvider>>>
// std::unique_ptr<pxr::HdRetainedSampledDataSource, std::default_delete<pxr::HdRetainedSampledDataSource>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<bool>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<char>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::ArResolverContext>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatd>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatf>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuath>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfFrustum>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfInterval>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMultiInterval>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatd>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuaternion>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatf>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuath>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRect2i>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2h>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2i>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3h>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3i>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4d>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4f>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4h>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4i>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GlfSimpleLight>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdDataSourceLocator>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdRprimCollection>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdSceneDelegate *>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfAssetPath>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPath>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPathExpression>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::TfToken>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatd>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatf>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuath>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::pxr_half::half>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfInterval>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatd>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuaternion>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatf>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuath>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRect2i>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2h>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2i>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3h>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3i>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4d>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4f>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4h>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4i>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::TfToken>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<bool>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<char>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfAssetPath>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfPath>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<double>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<float>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<long long>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<int>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<short>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<std::string>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned long long>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned char>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned int>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned short>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtDictionary>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtValue>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::pxr_half::half>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdExtComputationCpuCallback>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdFlattenedDataSourceProvider>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdLegacyTaskFactory>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<double>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::CameraUtilConformWindowPolicy>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdFormat>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<float>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<int>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<long long>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<short>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<std::string>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdTupleType>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned char>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned int>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned long long>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned long>>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned short>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<bool>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<bool>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<char>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<char>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::ArResolverContext>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::ArResolverContext>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatd>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatd>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatf>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuatf>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuath>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfDualQuath>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfFrustum>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfFrustum>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfInterval>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfInterval>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix2f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix3f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMatrix4f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfMultiInterval>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfMultiInterval>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatd>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatd>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuaternion>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuaternion>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatf>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuatf>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuath>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfQuath>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange1f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange2f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRange3f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfRect2i>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfRect2i>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2h>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2h>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2i>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec2i>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3h>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3h>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3i>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec3i>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4d>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4d>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4f>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4f>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4h>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4h>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4i>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GfVec4i>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::GlfSimpleLight>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::GlfSimpleLight>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdDataSourceLocator>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdDataSourceLocator>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdRprimCollection>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdRprimCollection>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdSceneDelegate *>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdSceneDelegate *>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfAssetPath>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::SdfAssetPath>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPath>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPath>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPathExpression>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::SdfPathExpression>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::TfToken>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::TfToken>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatd>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatd>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatf>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuatf>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuath>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfDualQuath>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::pxr_half::half>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::pxr_half::half>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfInterval>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfInterval>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix2f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix3f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfMatrix4f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatd>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatd>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuaternion>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuaternion>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatf>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuatf>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuath>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfQuath>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange1f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange2f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRange3f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRect2i>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfRect2i>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2h>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2h>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2i>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec2i>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3h>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3h>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3i>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec3i>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4d>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4d>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4f>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4f>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4h>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4h>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4i>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::GfVec4i>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::TfToken>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::TfToken>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<bool>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<bool>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<char>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<char>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfAssetPath>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfAssetPath>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfPath>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<pxr::SdfPath>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<double>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<double>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<float>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<float>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<long long>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<long long>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<int>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<int>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<short>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<short>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<std::string>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<std::string>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned long long>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned long long>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned char>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned char>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned int>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned int>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned short>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtArray<unsigned short>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtDictionary>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtDictionary>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::VtValue>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::VtValue>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::pxr_half::half>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::pxr_half::half>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdExtComputationCpuCallback>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdExtComputationCpuCallback>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdFlattenedDataSourceProvider>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdFlattenedDataSourceProvider>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdLegacyTaskFactory>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::shared_ptr<pxr::HdLegacyTaskFactory>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::SdfPath, std::allocator<pxr::SdfPath>>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::vector<pxr::TfToken, std::allocator<pxr::TfToken>>>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<double>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<double>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::CameraUtilConformWindowPolicy>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::CameraUtilConformWindowPolicy>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdFormat>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdFormat>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<float>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<float>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<int>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<int>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<long long>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<long long>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<short>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<short>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<std::string>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<std::string>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdTupleType>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdTupleType>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned char>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<unsigned char>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned int>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<unsigned int>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned long long>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<unsigned long long>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned long>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<unsigned long>>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<unsigned short>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<unsigned short>>>
// std::unique_ptr<pxr::HdRetainedSmallVectorDataSource, std::default_delete<pxr::HdRetainedSmallVectorDataSource>>
// std::shared_ptr<pxr::HdFlattenedOverlayDataSourceProvider>
// std::shared_ptr<pxr::HdFlattenedPrimvarsDataSourceProvider>
// std::shared_ptr<pxr::HdFlattenedPurposeDataSourceProvider>
// std::shared_ptr<pxr::HdFlattenedVisibilityDataSourceProvider>
// std::shared_ptr<pxr::HdFlattenedXformDataSourceProvider>
// std::vector<pxr::HdMaterialNode, std::allocator<pxr::HdMaterialNode>>
// std::map<pxr::TfToken, pxr::HdMaterialNetwork, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::HdMaterialNetwork>>>
// std::pair<pxr::TfToken const, pxr::HdMaterialNetwork>
// std::map<pxr::SdfPath, pxr::HdMaterialNode2, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, pxr::HdMaterialNode2>>>
// std::pair<pxr::SdfPath const, pxr::HdMaterialNode2>
// pxr::HdInstance<std::shared_ptr<pxr::HdBufferArrayRange>>
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiComputePipeline>>>
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiGraphicsPipeline>>>
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiResourceBindings>>>
// pxr::HdInstance<std::shared_ptr<pxr::HioGlslfx>>
// pxr::HdInstance<std::shared_ptr<pxr::HdBufferArrayRange>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HdStGLSLProgram>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HdStRenderPassShader>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HdStTextureObject>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiComputePipeline>>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiGraphicsPipeline>>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiResourceBindings>>>::ValueHolder
// pxr::HdInstance<std::shared_ptr<pxr::HioGlslfx>>::ValueHolder
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<MaterialX_v1_39_3::Shader>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HdBufferArrayRange>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HdStGLSLProgram>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HdStRenderPassShader>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HdStTextureObject>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiComputePipeline>>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiGraphicsPipeline>>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HgiHandle<pxr::HgiResourceBindings>>>::ValueHolder>
// std::pair<unsigned long long, pxr::HdInstance<std::shared_ptr<pxr::HioGlslfx>>::ValueHolder>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HdBufferArrayRange>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HgiHandle<pxr::HgiComputePipeline>>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HgiHandle<pxr::HgiGraphicsPipeline>>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HgiHandle<pxr::HgiResourceBindings>>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HioGlslfx>>
// std::pair<pxr::TfToken, pxr::HdInstanceRegistry<std::shared_ptr<pxr::HdBufferArrayRange>>>
// std::unique_ptr<pxr::HdLazyContainerDataSource, std::default_delete<pxr::HdLazyContainerDataSource>>
// std::unique_ptr<pxr::HdMapContainerDataSource, std::default_delete<pxr::HdMapContainerDataSource>>
// std::unique_ptr<pxr::HdMaterialNetwork2Interface, std::default_delete<pxr::HdMaterialNetwork2Interface>>
// std::unique_ptr<pxr::HdQuadInfo const, std::default_delete<pxr::HdQuadInfo const>>
// std::unique_ptr<pxr::HdOverlayContainerDataSource, std::default_delete<pxr::HdOverlayContainerDataSource>>
// std::shared_ptr<pxr::HdPrimDataSourceOverlayCache>
// std::weak_ptr<pxr::HdPrimDataSourceOverlayCache>
// std::shared_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdPrimOriginSchema::OriginPath>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<pxr::HdPrimOriginSchema::OriginPath>>
// std::unique_ptr<pxr::HdRetainedTypedSampledDataSource<pxr::HdPrimOriginSchema::OriginPath>, std::default_delete<pxr::HdRetainedTypedSampledDataSource<pxr::HdPrimOriginSchema::OriginPath>>>
// std::vector<pxr::HdRenderSettings::RenderProduct, std::allocator<pxr::HdRenderSettings::RenderProduct>>
// std::vector<pxr::HdRenderSettings::RenderProduct::RenderVar, std::allocator<pxr::HdRenderSettings::RenderProduct::RenderVar>>
// std::unique_ptr<pxr::HdSceneIndexAdapterSceneDelegate, std::default_delete<pxr::HdSceneIndexAdapterSceneDelegate>>
// pxr::HdSchemaBasedVectorSchema<pxr::HdSelectionSchema>
// std::shared_ptr<pxr::HdVtBufferSource>
// std::unique_ptr<pxr::HdVtBufferSource, std::default_delete<pxr::HdVtBufferSource>>
// std::shared_ptr<pxr::HdGpGenerativeProcedural>
// std::unique_ptr<pxr::HdGpGenerativeProcedural, std::default_delete<pxr::HdGpGenerativeProcedural>>
// std::map<pxr::SdfPath, std::shared_ptr<pxr::HdsiPrimManagingSceneIndexObserver::PrimBase>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<pxr::HdsiPrimManagingSceneIndexObserver::PrimBase>>>>
// std::pair<pxr::SdfPath const, std::shared_ptr<pxr::HdsiPrimManagingSceneIndexObserver::PrimBase>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<std::shared_ptr<pxr::HdsiPrimManagingSceneIndexObserver::PrimFactoryBase>>>
// std::shared_ptr<pxr::HdTypedSampledDataSource<std::shared_ptr<pxr::HdsiPrimTypeNoticeBatchingSceneIndex::PrimTypePriorityFunctor>>>
// std::map<pxr::SdfPath, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimDirtiedEntry, struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimAddedEntry>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimDirtiedEntry, struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimAddedEntry>>>>>
// std::pair<pxr::SdfPath const, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimDirtiedEntry, struct pxrInternal_v0_25_8__pxrReserved__::HdsiPrimTypeNoticeBatchingSceneIndex::_PrimAddedEntry>>>
// std::map<pxr::TfToken, pxr::HdStBindingRequest, std::less<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, pxr::HdStBindingRequest>>>
// std::pair<pxr::TfToken const, pxr::HdStBindingRequest>
// std::vector<std::shared_ptr<pxr::HdStBufferResource>, std::allocator<std::shared_ptr<pxr::HdStBufferResource>>>
// std::vector<std::shared_ptr<pxr::HdStBufferArrayRange>, std::allocator<std::shared_ptr<pxr::HdStBufferArrayRange>>>
// std::unique_ptr<pxr::HdStAggregationStrategy, std::default_delete<pxr::HdStAggregationStrategy>>
// std::vector<pxr::HdStDrawItemInstance, std::allocator<pxr::HdStDrawItemInstance>>
// std::unique_ptr<pxr::HdStDrawItem, std::default_delete<pxr::HdStDrawItem>>
// std::shared_ptr<pxr::HdStCopyComputationGPU>
// std::vector<std::shared_ptr<pxr::HdStDispatchBuffer>, std::allocator<std::shared_ptr<pxr::HdStDispatchBuffer>>>
// pxr::HdInstance<std::shared_ptr<pxr::HdStTextureObject>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HdStTextureObject>>
// std::set<std::shared_ptr<pxr::HdStTextureObject>, std::less<std::shared_ptr<pxr::HdStTextureObject>>, std::allocator<std::shared_ptr<pxr::HdStTextureObject>>>
// std::unordered_map<pxr::TfToken, std::vector<std::weak_ptr<pxr::HdStTextureObject>, std::allocator<std::weak_ptr<pxr::HdStTextureObject>>>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::vector<std::weak_ptr<pxr::HdStTextureObject>, std::allocator<std::weak_ptr<pxr::HdStTextureObject>>>>>>
// std::pair<pxr::TfToken const, std::vector<std::weak_ptr<pxr::HdStTextureObject>, std::allocator<std::weak_ptr<pxr::HdStTextureObject>>>>
// std::shared_ptr<pxr::HdStAssetUvTextureObject>
// std::shared_ptr<pxr::HdStFieldTextureObject>
// std::shared_ptr<pxr::HdStExtCompGpuComputation>
// std::shared_ptr<pxr::HdStExtCompGpuComputationResource>
// std::set<std::shared_ptr<pxr::HdStShaderCode>, std::less<std::shared_ptr<pxr::HdStShaderCode>>, std::allocator<std::shared_ptr<pxr::HdStShaderCode>>>
// std::vector<pxr::HdStShaderCode::NamedTextureHandle, std::allocator<pxr::HdStShaderCode::NamedTextureHandle>>
// std::pair<std::shared_ptr<pxr::HdStComputation>, pxr::HdStComputeQueue>
// std::unordered_map<pxr::Hgi *, std::weak_ptr<pxr::HdStResourceRegistry>, std::hash<pxr::Hgi>, std::equal_to<pxr::Hgi *>, std::allocator<std::pair<pxr::Hgi *, std::weak_ptr<pxr::HdStResourceRegistry>>>>
// std::weak_ptr<pxr::HdStResourceRegistry>
// std::pair<pxr::Hgi *, std::weak_ptr<pxr::HdStResourceRegistry>>
// std::shared_ptr<pxr::HdStExtCompGpuPrimvarBufferSource>
// std::shared_ptr<pxr::HdStExtCompPrimvarBufferSource>
// std::unique_ptr<pxr::HdStOpenVDBAssetSubtextureIdentifier, std::default_delete<pxr::HdStOpenVDBAssetSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStField3DAssetSubtextureIdentifier, std::default_delete<pxr::HdStField3DAssetSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStSubtextureIdentifier, std::default_delete<pxr::HdStSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStSubtextureIdentifier const, std::default_delete<pxr::HdStSubtextureIdentifier const>>
// std::unique_ptr<pxr::HdStAssetUvSubtextureIdentifier, std::default_delete<pxr::HdStAssetUvSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStDynamicUvSubtextureIdentifier, std::default_delete<pxr::HdStDynamicUvSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStPtexSubtextureIdentifier, std::default_delete<pxr::HdStPtexSubtextureIdentifier>>
// std::unique_ptr<pxr::HdStUdimSubtextureIdentifier, std::default_delete<pxr::HdStUdimSubtextureIdentifier>>
// std::shared_ptr<pxr::HdStGLSLFXShader>
// std::unique_ptr<pxr::HdStGLSLFXShader, std::default_delete<pxr::HdStGLSLFXShader>>
// pxr::HdInstance<std::shared_ptr<pxr::HdStGLSLProgram>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HdStGLSLProgram>>
// std::unique_ptr<pxr::HdStInterleavedUBOMemoryManager, std::default_delete<pxr::HdStInterleavedUBOMemoryManager>>
// std::unique_ptr<pxr::HdStInterleavedSSBOMemoryManager, std::default_delete<pxr::HdStInterleavedSSBOMemoryManager>>
// std::shared_ptr<pxr::HdStPtexTextureObject>
// std::unique_ptr<pxr::HdStRenderBuffer, std::default_delete<pxr::HdStRenderBuffer>>
// std::vector<std::unique_ptr<pxr::HdStRenderBuffer, std::default_delete<pxr::HdStRenderBuffer>>, std::allocator<std::unique_ptr<pxr::HdStRenderBuffer, std::default_delete<pxr::HdStRenderBuffer>>>>
// pxr::HdStTextureUtils::AlignedBuffer<float>
// pxr::HdStTextureUtils::AlignedBuffer<int>
// pxr::HdStTextureUtils::AlignedBuffer<unsigned char>
// std::unique_ptr<pxr::HdStRenderParam, std::default_delete<pxr::HdStRenderParam>>
// pxr::HdInstance<std::shared_ptr<pxr::HdStRenderPassShader>>
// pxr::HdInstanceRegistry<std::shared_ptr<pxr::HdStRenderPassShader>>
// std::vector<std::shared_ptr<pxr::HdStSamplerObject>, std::allocator<std::shared_ptr<pxr::HdStSamplerObject>>>
// std::shared_ptr<pxr::HdStUvSamplerObject>
// std::shared_ptr<pxr::HdStFieldSamplerObject>
// std::shared_ptr<pxr::HdStPtexSamplerObject>
// std::shared_ptr<pxr::HdStUdimSamplerObject>
// std::unique_ptr<pxr::HdStStagingBuffer, std::default_delete<pxr::HdStStagingBuffer>>
// std::unique_ptr<pxr::HdStTextureCpuData, std::default_delete<pxr::HdStTextureCpuData>>
// std::set<std::shared_ptr<pxr::HdStTextureHandle>, std::less<std::shared_ptr<pxr::HdStTextureHandle>>, std::allocator<std::shared_ptr<pxr::HdStTextureHandle>>>
// std::vector<std::shared_ptr<pxr::HdStTextureHandle>, std::allocator<std::shared_ptr<pxr::HdStTextureHandle>>>
// std::shared_ptr<pxr::HdStUdimTextureObject>
// std::unique_ptr<pxr::HdStVBOMemoryManager, std::default_delete<pxr::HdStVBOMemoryManager>>
// std::unique_ptr<pxr::HdStVBOSimpleMemoryManager, std::default_delete<pxr::HdStVBOSimpleMemoryManager>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxAovInputTask>>
// std::shared_ptr<pxr::HdxAovInputTask>
// std::shared_ptr<pxr::HdxTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxBoundingBoxTask>>
// std::shared_ptr<pxr::HdxBoundingBoxTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxColorizeSelectionTask>>
// std::shared_ptr<pxr::HdxColorizeSelectionTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxColorCorrectionTask>>
// std::shared_ptr<pxr::HdxColorCorrectionTask>
// std::vector<pxr::HdxColorCorrectionTask::TextureSamplerInfo, std::allocator<pxr::HdxColorCorrectionTask::TextureSamplerInfo>>
// std::vector<pxr::HdxColorCorrectionTask::BufferInfo, std::allocator<pxr::HdxColorCorrectionTask::BufferInfo>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxDrawTargetTask>>
// std::shared_ptr<pxr::HdxDrawTargetTask>
// std::unique_ptr<pxr::HdxFreeCameraSceneDelegate, std::default_delete<pxr::HdxFreeCameraSceneDelegate>>
// std::unique_ptr<pxr::HdxFreeCameraPrimDataSource, std::default_delete<pxr::HdxFreeCameraPrimDataSource>>
// std::unique_ptr<pxr::HdxFullscreenShader, std::default_delete<pxr::HdxFullscreenShader>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitRenderTask>>
// std::shared_ptr<pxr::HdxOitRenderTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxRenderTask>>
// std::shared_ptr<pxr::HdxRenderTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxRenderSetupTask>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitResolveTask>>
// std::shared_ptr<pxr::HdxOitResolveTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxOitVolumeRenderTask>>
// std::shared_ptr<pxr::HdxOitVolumeRenderTask>
// std::vector<pxr::HdxInstancerContext, std::allocator<pxr::HdxInstancerContext>>
// std::vector<pxr::HdxPrimOriginInfo, std::allocator<pxr::HdxPrimOriginInfo>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxPickTask>>
// std::shared_ptr<pxr::HdxPickTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxPickFromRenderBufferTask>>
// std::shared_ptr<pxr::HdxPickFromRenderBufferTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxPresentTask>>
// std::shared_ptr<pxr::HdxPresentTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxSelectionTask>>
// std::shared_ptr<pxr::HdxSelectionTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxShadowTask>>
// std::shared_ptr<pxr::HdxShadowTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxSimpleLightTask>>
// std::shared_ptr<pxr::HdxSimpleLightTask>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxSkydomeTask>>
// std::shared_ptr<pxr::HdxSkydomeTask>
// std::unique_ptr<pxr::HdxTaskController, std::default_delete<pxr::HdxTaskController>>
// std::shared_ptr<pxr::HdLegacyTaskFactory_Impl<pxr::HdxVisualizeAovTask>>
// std::shared_ptr<pxr::HdxVisualizeAovTask>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<bool>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix2d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix3d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix4d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatd>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatf>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuath>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2f>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2h>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2i>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3f>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3h>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3i>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4d>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4f>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4h>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4i>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::SdfPathExpression>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::TfToken>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::pxr_half::half>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix2d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix3d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix4d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatd>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatf>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuath>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2f>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2h>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2i>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3f>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3h>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3i>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4d>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4f>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4h>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4i>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::TfToken>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<bool>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::SdfAssetPath>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<double>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<float>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<long long>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<int>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<std::string>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned long long>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned char>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned int>>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<pxr::pxr_half::half>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<double>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<float>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<int>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<long long>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<std::string>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<unsigned char>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<unsigned int>>
// std::shared_ptr<pxr::UsdImagingDataSourceAttribute<unsigned long long>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<bool>, std::default_delete<pxr::UsdImagingDataSourceAttribute<bool>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix2d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix2d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix3d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix3d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix4d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfMatrix4d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatd>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatd>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatf>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfQuatf>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfQuath>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfQuath>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2f>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2f>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2h>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2h>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2i>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec2i>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3f>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3f>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3h>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3h>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3i>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec3i>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4d>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4d>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4f>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4f>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4h>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4h>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4i>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::GfVec4i>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::SdfPathExpression>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::SdfPathExpression>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::TfToken>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::TfToken>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::pxr_half::half>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::pxr_half::half>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix2d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix2d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix3d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix3d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix4d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfMatrix4d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatd>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatd>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatf>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuatf>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuath>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfQuath>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2f>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2f>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2h>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2h>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2i>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec2i>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3f>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3f>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3h>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3h>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3i>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec3i>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4d>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4d>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4f>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4f>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4h>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4h>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4i>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::GfVec4i>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::TfToken>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::TfToken>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<bool>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<bool>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::SdfAssetPath>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<pxr::SdfAssetPath>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<double>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<double>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<float>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<float>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<long long>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<long long>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<int>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<int>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<std::string>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<std::string>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned long long>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned long long>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned char>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned char>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned int>>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::VtArray<unsigned int>>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<pxr::pxr_half::half>, std::default_delete<pxr::UsdImagingDataSourceAttribute<pxr::pxr_half::half>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<double>, std::default_delete<pxr::UsdImagingDataSourceAttribute<double>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<float>, std::default_delete<pxr::UsdImagingDataSourceAttribute<float>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<int>, std::default_delete<pxr::UsdImagingDataSourceAttribute<int>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<long long>, std::default_delete<pxr::UsdImagingDataSourceAttribute<long long>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<std::string>, std::default_delete<pxr::UsdImagingDataSourceAttribute<std::string>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<unsigned char>, std::default_delete<pxr::UsdImagingDataSourceAttribute<unsigned char>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<unsigned int>, std::default_delete<pxr::UsdImagingDataSourceAttribute<unsigned int>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttribute<unsigned long long>, std::default_delete<pxr::UsdImagingDataSourceAttribute<unsigned long long>>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttributeColorSpace, std::default_delete<pxr::UsdImagingDataSourceAttributeColorSpace>>
// std::unique_ptr<pxr::UsdImagingDataSourceAttributeTypeName, std::default_delete<pxr::UsdImagingDataSourceAttributeTypeName>>
// std::unique_ptr<pxr::UsdImagingDataSourceBasisCurvesTopology, std::default_delete<pxr::UsdImagingDataSourceBasisCurvesTopology>>
// std::unique_ptr<pxr::UsdImagingDataSourceBasisCurves, std::default_delete<pxr::UsdImagingDataSourceBasisCurves>>
// std::unique_ptr<pxr::UsdImagingDataSourceBasisCurvesPrim, std::default_delete<pxr::UsdImagingDataSourceBasisCurvesPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceVisibility, std::default_delete<pxr::UsdImagingDataSourceVisibility>>
// std::unique_ptr<pxr::UsdImagingDataSourcePurpose, std::default_delete<pxr::UsdImagingDataSourcePurpose>>
// std::unique_ptr<pxr::UsdImagingDataSourceExtentCoordinate, std::default_delete<pxr::UsdImagingDataSourceExtentCoordinate>>
// std::unique_ptr<pxr::UsdImagingDataSourceExtent, std::default_delete<pxr::UsdImagingDataSourceExtent>>
// std::unique_ptr<pxr::UsdImagingDataSourceExtentsHint, std::default_delete<pxr::UsdImagingDataSourceExtentsHint>>
// std::unique_ptr<pxr::UsdImagingDataSourceXformResetXformStack, std::default_delete<pxr::UsdImagingDataSourceXformResetXformStack>>
// std::unique_ptr<pxr::UsdImagingDataSourceXformMatrix, std::default_delete<pxr::UsdImagingDataSourceXformMatrix>>
// std::unique_ptr<pxr::UsdImagingDataSourceXform, std::default_delete<pxr::UsdImagingDataSourceXform>>
// std::unique_ptr<pxr::UsdImagingDataSourcePrimOrigin, std::default_delete<pxr::UsdImagingDataSourcePrimOrigin>>
// std::unique_ptr<pxr::UsdImagingDataSourcePrim, std::default_delete<pxr::UsdImagingDataSourcePrim>>
// std::unique_ptr<pxr::UsdImagingDataSourcePrimvars, std::default_delete<pxr::UsdImagingDataSourcePrimvars>>
// std::unique_ptr<pxr::UsdImagingDataSourceCustomPrimvars, std::default_delete<pxr::UsdImagingDataSourceCustomPrimvars>>
// std::unique_ptr<pxr::UsdImagingDataSourcePrimvar, std::default_delete<pxr::UsdImagingDataSourcePrimvar>>
// std::unique_ptr<pxr::UsdImagingDataSourceCamera, std::default_delete<pxr::UsdImagingDataSourceCamera>>
// std::unique_ptr<pxr::UsdImagingDataSourceCameraPrim, std::default_delete<pxr::UsdImagingDataSourceCameraPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceMapped, std::default_delete<pxr::UsdImagingDataSourceMapped>>
// std::vector<pxr::UsdImagingDataSourceMapped::PropertyMappingBase, std::allocator<pxr::UsdImagingDataSourceMapped::PropertyMappingBase>>
// std::unique_ptr<pxr::UsdImagingDataSourceMaterial, std::default_delete<pxr::UsdImagingDataSourceMaterial>>
// std::unique_ptr<pxr::UsdImagingDataSourceMaterialPrim, std::default_delete<pxr::UsdImagingDataSourceMaterialPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceSubdivisionTags, std::default_delete<pxr::UsdImagingDataSourceSubdivisionTags>>
// std::unique_ptr<pxr::UsdImagingDataSourceMeshTopology, std::default_delete<pxr::UsdImagingDataSourceMeshTopology>>
// std::unique_ptr<pxr::UsdImagingDataSourceMesh, std::default_delete<pxr::UsdImagingDataSourceMesh>>
// std::unique_ptr<pxr::UsdImagingDataSourceMeshPrim, std::default_delete<pxr::UsdImagingDataSourceMeshPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceNurbsCurvesPrim, std::default_delete<pxr::UsdImagingDataSourceNurbsCurvesPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceNurbsPatchPrim, std::default_delete<pxr::UsdImagingDataSourceNurbsPatchPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourcePointInstancerMask, std::default_delete<pxr::UsdImagingDataSourcePointInstancerMask>>
// std::unique_ptr<pxr::UsdImagingDataSourcePointInstancerTopology, std::default_delete<pxr::UsdImagingDataSourcePointInstancerTopology>>
// std::unique_ptr<pxr::UsdImagingDataSourcePointInstancerPrim, std::default_delete<pxr::UsdImagingDataSourcePointInstancerPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourcePointsPrim, std::default_delete<pxr::UsdImagingDataSourcePointsPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceRelationship, std::default_delete<pxr::UsdImagingDataSourceRelationship>>
// std::unique_ptr<pxr::UsdImagingDataSourceRenderPassPrim, std::default_delete<pxr::UsdImagingDataSourceRenderPassPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceRenderSettingsPrim, std::default_delete<pxr::UsdImagingDataSourceRenderSettingsPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceRenderProductPrim, std::default_delete<pxr::UsdImagingDataSourceRenderProductPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceRenderVarPrim, std::default_delete<pxr::UsdImagingDataSourceRenderVarPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceStage, std::default_delete<pxr::UsdImagingDataSourceStage>>
// std::unique_ptr<pxr::UsdImagingDataSourceTetMeshTopology, std::default_delete<pxr::UsdImagingDataSourceTetMeshTopology>>
// std::unique_ptr<pxr::UsdImagingDataSourceTetMesh, std::default_delete<pxr::UsdImagingDataSourceTetMesh>>
// std::unique_ptr<pxr::UsdImagingDataSourceTetMeshPrim, std::default_delete<pxr::UsdImagingDataSourceTetMeshPrim>>
// std::unique_ptr<pxr::UsdImagingDataSourceUsdPrimInfo, std::default_delete<pxr::UsdImagingDataSourceUsdPrimInfo>>
// std::unique_ptr<pxr::UsdImagingDataSourceVolumeFieldBindings, std::default_delete<pxr::UsdImagingDataSourceVolumeFieldBindings>>
// std::unique_ptr<pxr::UsdImagingDataSourceVolumePrim, std::default_delete<pxr::UsdImagingDataSourceVolumePrim>>
// std::unique_ptr<pxr::UsdImagingDelegate, std::default_delete<pxr::UsdImagingDelegate>>
// std::shared_ptr<pxr::UsdImagingDrawModeAdapter>
// pxr::TfHashMap<pxr::TfToken, std::shared_ptr<pxr::UsdImagingPrimAdapter>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::UsdImagingPrimAdapter>>>>
// std::unordered_map<pxr::TfToken, std::shared_ptr<pxr::UsdImagingPrimAdapter>, pxr::TfToken::HashFunctor, std::equal_to<pxr::TfToken>, std::allocator<std::pair<pxr::TfToken const, std::shared_ptr<pxr::UsdImagingPrimAdapter>>>>
// std::vector<std::pair<pxr::UsdPrim, std::shared_ptr<pxr::UsdImagingPrimAdapter>>, std::allocator<std::pair<pxr::UsdPrim, std::shared_ptr<pxr::UsdImagingPrimAdapter>>>>
// std::weak_ptr<pxr::UsdImagingPrimAdapter>
// std::pair<pxr::TfToken, std::shared_ptr<pxr::UsdImagingPrimAdapter>>
// std::pair<pxr::UsdPrim, std::shared_ptr<pxr::UsdImagingPrimAdapter>>
// std::shared_ptr<pxr::UsdImagingGeomSubsetAdapter>
// pxr::TfWeakPtr<pxr::UsdImagingStageSceneIndex>
// std::weak_ptr<pxr::UsdImagingAPISchemaAdapter>
// std::pair<pxr::TfToken, std::shared_ptr<pxr::UsdImagingAPISchemaAdapter>>
// std::shared_ptr<pxr::UsdImagingBasisCurvesAdapter>
// std::shared_ptr<pxr::UsdImagingGprimAdapter>
// std::shared_ptr<pxr::UsdImagingCapsuleAdapter>
// std::shared_ptr<pxr::UsdImagingCameraAdapter>
// std::shared_ptr<pxr::UsdImagingCollectionAPIAdapter>
// std::shared_ptr<pxr::UsdImagingConeAdapter>
// std::shared_ptr<pxr::UsdImagingCoordSysAdapter>
// std::shared_ptr<pxr::UsdImagingCoordSysAPIAdapter>
// std::shared_ptr<pxr::UsdImagingCubeAdapter>
// std::shared_ptr<pxr::UsdImagingCylinderAdapter>
// std::shared_ptr<pxr::UsdImagingCylinderLightAdapter>
// std::shared_ptr<pxr::UsdImagingLightAdapter>
// std::shared_ptr<pxr::UsdImagingDiskLightAdapter>
// std::shared_ptr<pxr::UsdImagingDistantLightAdapter>
// std::shared_ptr<pxr::UsdImagingDomeLightAdapter>
// std::shared_ptr<pxr::UsdImagingDomeLight_1Adapter>
// std::shared_ptr<pxr::UsdImagingFlattenedGeomModelDataSourceProvider>
// std::shared_ptr<pxr::UsdImagingFlattenedMaterialBindingsDataSourceProvider>
// std::shared_ptr<pxr::UsdImagingGeometryLightAdapter>
// std::shared_ptr<pxr::UsdImagingGeomModelAPIAdapter>
// std::shared_ptr<pxr::UsdImagingHermiteCurvesAdapter>
// std::shared_ptr<pxr::UsdImagingInstanceAdapter>
// std::unique_ptr<pxr::UsdImagingInstanceAdapter, std::default_delete<pxr::UsdImagingInstanceAdapter>>
// std::shared_ptr<pxr::UsdImagingLightAPIAdapter>
// std::shared_ptr<pxr::UsdImagingLightFilterAdapter>
// std::shared_ptr<pxr::UsdImagingMaterialAdapter>
// std::shared_ptr<pxr::UsdImagingShaderAdapter>
// std::shared_ptr<pxr::UsdImagingNodeGraphAdapter>
// std::shared_ptr<pxr::UsdImagingMaterialBindingAPIAdapter>
// std::shared_ptr<pxr::UsdImagingMeshAdapter>
// std::shared_ptr<pxr::UsdImagingNurbsCurvesAdapter>
// std::shared_ptr<pxr::UsdImagingNurbsPatchAdapter>
// std::shared_ptr<pxr::UsdImagingPlaneAdapter>
// std::shared_ptr<pxr::UsdImagingPluginLightAdapter>
// std::shared_ptr<pxr::UsdImagingPluginLightFilterAdapter>
// std::shared_ptr<pxr::UsdImagingPointsAdapter>
// std::shared_ptr<pxr::UsdImagingPointInstancerAdapter>
// std::shared_ptr<pxr::UsdImagingPortalLightAdapter>
// std::shared_ptr<pxr::UsdImagingRectLightAdapter>
// std::shared_ptr<pxr::UsdImagingRenderPassAdapter>
// std::shared_ptr<pxr::UsdImagingRenderProductAdapter>
// std::shared_ptr<pxr::UsdImagingRenderSettingsAdapter>
// std::shared_ptr<pxr::UsdImagingRenderVarAdapter>
// std::unique_ptr<pxr::UsdImagingRerootingContainerDataSource, std::default_delete<pxr::UsdImagingRerootingContainerDataSource>>
// std::vector<std::unique_ptr<pxr::UsdImagingSceneIndexPlugin, std::default_delete<pxr::UsdImagingSceneIndexPlugin>>, std::allocator<std::unique_ptr<pxr::UsdImagingSceneIndexPlugin, std::default_delete<pxr::UsdImagingSceneIndexPlugin>>>>
// std::shared_ptr<pxr::UsdImagingSphereAdapter>
// std::shared_ptr<pxr::UsdImagingSphereLightAdapter>
// std::shared_ptr<pxr::UsdImagingTetMeshAdapter>
// std::shared_ptr<pxr::UsdImagingVolumeAdapter>
// std::shared_ptr<pxr::UsdProcImagingGenerativeProceduralAdapter>
// std::shared_ptr<pxr::UsdRiPxrImagingAovLightAdapter>
// std::shared_ptr<pxr::UsdRiPxrImagingCameraAPIAdapter>
// std::shared_ptr<pxr::UsdRiPxrImagingDisplayFilterAdapter>
// std::shared_ptr<pxr::UsdRiPxrImagingIntegratorAdapter>
// std::shared_ptr<pxr::UsdRiPxrImagingSampleFilterAdapter>
// std::shared_ptr<pxr::UsdSkelImagingAnimationAdapter>
// std::shared_ptr<pxr::UsdSkelImagingBindingAPIAdapter>
// std::shared_ptr<pxr::UsdSkelImagingBlendShapeAdapter>
// std::shared_ptr<pxr::UsdSkelImagingBlendShapeData>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceAnimationPrim, std::default_delete<pxr::UsdSkelImagingDataSourceAnimationPrim>>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceBindingAPI, std::default_delete<pxr::UsdSkelImagingDataSourceBindingAPI>>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceBlendShapePrim, std::default_delete<pxr::UsdSkelImagingDataSourceBlendShapePrim>>
// std::map<pxr::SdfPath, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim>>>>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim, std::default_delete<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim>>
// std::weak_ptr<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim>
// std::pair<pxr::SdfPath const, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedPointsBasedPrim>>
// pxr::UsdSkelImagingSharedPtrThunk<pxr::VtArray<pxr::GfMatrix4f>>
// pxr::UsdSkelImagingSharedPtrThunk<pxr::UsdSkelImagingBlendShapeData>
// std::map<pxr::SdfPath, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim>>>>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim, std::default_delete<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim>>
// std::weak_ptr<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim>
// std::pair<pxr::SdfPath const, std::shared_ptr<pxr::UsdSkelImagingDataSourceResolvedSkeletonPrim>>
// std::unique_ptr<pxr::UsdSkelImagingDataSourceSkeletonPrim, std::default_delete<pxr::UsdSkelImagingDataSourceSkeletonPrim>>
// pxr::UsdSkelImagingSharedPtrThunk<pxr::UsdSkelImagingJointInfluencesData>
// std::shared_ptr<pxr::UsdSkelImagingJointInfluencesData>
// std::unique_ptr<pxr::UsdSkelImagingResolvingSceneIndexPlugin, std::default_delete<pxr::UsdSkelImagingResolvingSceneIndexPlugin>>
// pxr::UsdSkelImagingSharedPtrThunk<pxr::UsdSkelImagingSkelData>
// std::shared_ptr<pxr::UsdSkelImagingSkelData>
// std::shared_ptr<pxr::UsdSkelImagingSkeletonAdapter>
// pxr::UsdSkelImagingSharedPtrThunk<pxr::UsdSkelImagingSkelGuideData>
// std::shared_ptr<pxr::UsdSkelImagingSkelGuideData>
// std::shared_ptr<pxr::UsdSkelImagingSkelRootAdapter>
// std::unique_ptr<pxr::UsdImagingDataSourceFieldAsset, std::default_delete<pxr::UsdImagingDataSourceFieldAsset>>
// std::unique_ptr<pxr::UsdImagingDataSourceFieldAssetPrim, std::default_delete<pxr::UsdImagingDataSourceFieldAssetPrim>>
// std::shared_ptr<pxr::UsdImagingOpenVDBAssetAdapter>
// std::shared_ptr<pxr::UsdImagingField3DAssetAdapter>
// std::map<pxr::SdfPath, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_DirtyPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_AddPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_RemovePrim>>, std::less<pxr::SdfPath>, std::allocator<std::pair<pxr::SdfPath const, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_DirtyPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_AddPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_RemovePrim>>>>>
// std::pair<pxr::SdfPath const, std::variant<<struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_DirtyPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_AddPrim, struct pxrInternal_v0_25_8__pxrReserved__::UsdImaging_NiInstanceAggregationSceneIndex_Impl::_RetainedSceneIndexOperations::_RemovePrim>>>


// Conformance available:

// MARK: Available

extension pxr.ArchMemAdvice: @unchecked Sendable {}
extension pxr.ArchFileAdvice: @unchecked Sendable {}
extension pxr.ArchIntervalTimer: @unchecked Sendable {}
extension pxr.ArchMemoryProtection: @unchecked Sendable {}
extension pxr.ArchBuildMode: @unchecked Sendable {}
extension pxr.TfType.FactoryBase: @unchecked Sendable {}
extension pxr.TfType.LegacyFlags: @unchecked Sendable {}
extension pxr.TfNullPtrType: @unchecked Sendable {}
extension pxr.TfDiagnosticType: @unchecked Sendable {}
extension pxr.TfHash: @unchecked Sendable {}
extension pxr.TfHashCharPtr: @unchecked Sendable {}
extension pxr.TfHashCString: @unchecked Sendable {}
extension pxr.TfEqualCString: @unchecked Sendable {}
extension pxr.TfDeleter: @unchecked Sendable {}
extension pxr.TfWeakPtrFacadeAccess: @unchecked Sendable {}
extension pxr.TfWeakPtrFacadeBase: @unchecked Sendable {}
extension pxr.TfPyObjWrapperStub: @unchecked Sendable {}
extension pxr.TfPyObjWrapper: @unchecked Sendable {}
extension pxr.TfBits.Mode: @unchecked Sendable {}
extension pxr.TfBits.Hash: @unchecked Sendable {}
extension pxr.TfBits.FastHash: @unchecked Sendable {}
extension pxr.TfCompressedBits.Mode: @unchecked Sendable {}
extension pxr.TfCompressedBits.Hash: @unchecked Sendable {}
extension pxr.TfCompressedBits.FastHash: @unchecked Sendable {}
extension pxr.TfCompressedBits.ComplementTagType: @unchecked Sendable {}
extension pxr.TfDebug: @unchecked Sendable {}
extension pxr.TfDebug.Helper: @unchecked Sendable {}
extension pxr.TfStopwatch: @unchecked Sendable {}
extension pxr.TfDebugSymbolsChangedNotice: @unchecked Sendable {}
extension pxr.TfDebugSymbolEnableChangedNotice: @unchecked Sendable {}
extension pxr.TfNotice: @unchecked Sendable {}
extension pxr.TfNotice.Block: @unchecked Sendable {}
extension pxr.TfDictionaryLessThan: @unchecked Sendable {}
extension pxr.TfStreamFloat: @unchecked Sendable {}
extension pxr.TfStreamDouble: @unchecked Sendable {}
extension pxr.TfDiagnosticMgr.Delegate: @unchecked Sendable {}
extension pxr.TfSkipCallerFrames: @unchecked Sendable {}
extension pxr.TfFastCompression: @unchecked Sendable {}
extension pxr.TfMallocTag: @unchecked Sendable {}
extension pxr.TfMallocTag.CallTree: @unchecked Sendable {}
extension pxr.TfMallocTag.CallTree.PathNode: @unchecked Sendable {}
extension pxr.TfMallocTag.CallTree.CallSite: @unchecked Sendable {}
extension pxr.TfMallocTag.CallTree.PrintSetting: @unchecked Sendable {}
extension pxr.TfMallocTag.CallStackInfo: @unchecked Sendable {}
extension pxr.TfSmallVectorBase: @unchecked Sendable {}
extension pxr.TfRefPtrTracker.TraceType: @unchecked Sendable {}
extension pxr.TfStackedAccess: @unchecked Sendable {}
extension pxr.TfToken: @unchecked Sendable {}
extension pxr.TraceAggregateTree.EventTimes: @unchecked Sendable {}
extension pxr.UsdSchemaRegistry.TokenToTokenVectorMap: @unchecked Sendable {}
extension pxr.TfTokenVector: @unchecked Sendable {}
extension pxr.SdrOptionVec: @unchecked Sendable {}
extension pxr.UsdGeomBasisCurves.ComputeInterpolationInfo: @unchecked Sendable {}
extension pxr.SdrOption: @unchecked Sendable {}
extension pxr.TraceAggregateTree.CounterMap: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.GlfBindingMap.BindingMap: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.TfToken.HashSet: @unchecked Sendable {}
extension pxr.SdrShaderNode.ComplianceResults: @unchecked Sendable {}
extension pxr.TraceCounterAccumulator.CounterValuesMap: @unchecked Sendable {}
extension pxr.TraceCounterAccumulator.CounterMap: @unchecked Sendable {}
extension pxr.SdrTokenMap: @unchecked Sendable {}
extension pxr.SdrIdentifierSet: @unchecked Sendable {}
extension pxr.TfToken.HashFunctor: @unchecked Sendable {}
extension pxr.TfToken.Set: @unchecked Sendable {}
extension pxr.TfTokenFastArbitraryLessThan: @unchecked Sendable {}
extension pxr.TfUtf8CodePoint: @unchecked Sendable {}
extension pxr.TfUtf8CodePointIterator.PastTheEndSentinel: @unchecked Sendable {}
extension pxr.TfDelegatedCountIncrementTagType: @unchecked Sendable {}
extension pxr.TfDelegatedCountDoNotIncrementTagType: @unchecked Sendable {}
extension pxr.GfBBox3d: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.HdxBoundingBoxTaskParams.BBoxVector: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.GfMatrix4d: @unchecked Sendable {}
extension pxr.GfVec4d: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.HdCamera.ClipPlanesVector: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.GfVec4f: @unchecked Sendable {}
extension pxr.GfVec4h: @unchecked Sendable {}
extension pxr.pxr_half.half: @unchecked Sendable {}
extension pxr.pxr_half.half.uif: @unchecked Sendable {}
extension pxr.GfVec4i: @unchecked Sendable {}
extension pxr.GfVec3d: @unchecked Sendable {}
extension pxr.GfVec3f: @unchecked Sendable {}
extension pxr.GfVec3h: @unchecked Sendable {}
extension pxr.GfVec3i: @unchecked Sendable {}
extension pxr.GfRange3d: @unchecked Sendable {}
extension pxr.GfRange3f: @unchecked Sendable {}
extension pxr.GfCamera: @unchecked Sendable {}
extension pxr.GfCamera.Projection: @unchecked Sendable {}
extension pxr.GfCamera.FOVDirection: @unchecked Sendable {}
extension pxr.GfRange1f: @unchecked Sendable {}
extension pxr.GfRange1d: @unchecked Sendable {}
extension pxr.GfColorSpaceNames_StaticTokenType: @unchecked Sendable {}
extension pxr.GfVec2f: @unchecked Sendable {}
extension pxr.GfVec2d: @unchecked Sendable {}
extension pxr.GfVec2h: @unchecked Sendable {}
extension pxr.GfVec2i: @unchecked Sendable {}
extension pxr.GfMatrix3f: @unchecked Sendable {}
extension pxr.GfDualQuatd: @unchecked Sendable {}
extension pxr.GfQuatd: @unchecked Sendable {}
extension pxr.GfDualQuatf: @unchecked Sendable {}
extension pxr.GfQuatf: @unchecked Sendable {}
extension pxr.GfDualQuath: @unchecked Sendable {}
extension pxr.GfQuath: @unchecked Sendable {}
extension pxr.GfFrustum: @unchecked Sendable {}
extension pxr.GfFrustum.ProjectionType: @unchecked Sendable {}
extension pxr.GfPlane: @unchecked Sendable {}
extension pxr.GfRay: @unchecked Sendable {}
extension pxr.GfRange2d: @unchecked Sendable {}
extension pxr.GfRange2f: @unchecked Sendable {}
extension pxr.GfRotation: @unchecked Sendable {}
extension pxr.GfQuaternion: @unchecked Sendable {}
extension pxr.GfInterval: @unchecked Sendable {}
extension pxr.GfMultiInterval.Set: @unchecked Sendable {}
extension pxr.GfLine: @unchecked Sendable {}
extension pxr.GfLine2d: @unchecked Sendable {}
extension pxr.GfLineSeg: @unchecked Sendable {}
extension pxr.GfLineSeg2d: @unchecked Sendable {}
extension pxr.GfMatrix2d: @unchecked Sendable {}
extension pxr.GfMatrix2f: @unchecked Sendable {}
extension pxr.GfMatrix3d: @unchecked Sendable {}
extension pxr.GfMatrix4f: @unchecked Sendable {}
extension pxr.GfMultiInterval: @unchecked Sendable {}
extension pxr.GfRect2i: @unchecked Sendable {}
extension pxr.GfSize2: @unchecked Sendable {}
extension pxr.GfSize3: @unchecked Sendable {}
extension pxr.GfTransform: @unchecked Sendable {}
extension pxr.GfNumericCastFailureType: @unchecked Sendable {}
extension pxr.JsParseError: @unchecked Sendable {}
extension pxr.JsValue.`Type`: @unchecked Sendable {}
extension pxr.TraceAggregateNode.Id: @unchecked Sendable {}
extension pxr.TraceEvent.BeginTag: @unchecked Sendable {}
extension pxr.TraceEvent.EndTag: @unchecked Sendable {}
extension pxr.TraceEvent.TimespanTag: @unchecked Sendable {}
extension pxr.TraceEvent.MarkerTag: @unchecked Sendable {}
extension pxr.TraceEvent.CounterDeltaTag: @unchecked Sendable {}
extension pxr.TraceEvent.CounterValueTag: @unchecked Sendable {}
extension pxr.TraceEvent.DataTag: @unchecked Sendable {}
extension pxr.TraceEvent.EventType: @unchecked Sendable {}
extension pxr.TraceEvent.DataType: @unchecked Sendable {}
extension pxr.TraceCategory: @unchecked Sendable {}
extension pxr.TraceStringHash: @unchecked Sendable {}
extension pxr.TraceKey.HashFunctor: @unchecked Sendable {}
extension pxr.TraceThreadId: @unchecked Sendable {}
extension pxr.TraceEventTree.MarkerValuesMap: @unchecked Sendable {}
extension pxr.TraceEventTree.MarkerValues: @unchecked Sendable {}
extension pxr.TraceCollection.Visitor: @unchecked Sendable {}
extension pxr.TraceDynamicKey.HashFunctor: @unchecked Sendable {}
extension pxr.TraceCollector.DefaultCategory: @unchecked Sendable {}
extension pxr.TraceCounterAccumulator: @unchecked Sendable {}
extension pxr.TraceEventData: @unchecked Sendable {}
extension pxr.TraceEventNode.AttributeMap: @unchecked Sendable {}
extension pxr.TraceReporterTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.TraceReporterDataSourceBase: @unchecked Sendable {}
extension pxr.TraceSerialization: @unchecked Sendable {}
extension pxr.PlugNotice: @unchecked Sendable {}
extension pxr.PlugNotice.Base: @unchecked Sendable {}
extension pxr.VtDualQuatdArray: @unchecked Sendable {}
extension pxr.VtDualQuatfArray: @unchecked Sendable {}
extension pxr.VtDualQuathArray: @unchecked Sendable {}
extension pxr.VtHalfArray: @unchecked Sendable {}
extension pxr.VtIntervalArray: @unchecked Sendable {}
extension pxr.VtMatrix2dArray: @unchecked Sendable {}
extension pxr.VtMatrix2fArray: @unchecked Sendable {}
extension pxr.VtMatrix3dArray: @unchecked Sendable {}
extension pxr.VtMatrix3fArray: @unchecked Sendable {}
extension pxr.VtMatrix4dArray: @unchecked Sendable {}
extension pxr.VtMatrix4fArray: @unchecked Sendable {}
extension pxr.VtQuatdArray: @unchecked Sendable {}
extension pxr.VtQuaternionArray: @unchecked Sendable {}
extension pxr.VtQuatfArray: @unchecked Sendable {}
extension pxr.VtQuathArray: @unchecked Sendable {}
extension pxr.VtRange1dArray: @unchecked Sendable {}
extension pxr.VtRange1fArray: @unchecked Sendable {}
extension pxr.VtRange2dArray: @unchecked Sendable {}
extension pxr.VtRange2fArray: @unchecked Sendable {}
extension pxr.VtRange3dArray: @unchecked Sendable {}
extension pxr.VtRange3fArray: @unchecked Sendable {}
extension pxr.VtRect2iArray: @unchecked Sendable {}
extension pxr.VtVec2dArray: @unchecked Sendable {}
extension pxr.VtVec2fArray: @unchecked Sendable {}
extension pxr.VtVec2hArray: @unchecked Sendable {}
extension pxr.VtVec2iArray: @unchecked Sendable {}
extension pxr.VtVec3dArray: @unchecked Sendable {}
extension pxr.VtVec3fArray: @unchecked Sendable {}
extension pxr.VtVec3hArray: @unchecked Sendable {}
extension pxr.VtVec3iArray: @unchecked Sendable {}
extension pxr.VtVec4dArray: @unchecked Sendable {}
extension pxr.VtVec4fArray: @unchecked Sendable {}
extension pxr.VtVec4hArray: @unchecked Sendable {}
extension pxr.VtVec4iArray: @unchecked Sendable {}
extension pxr.VtTokenArray: @unchecked Sendable {}
extension pxr.VtBoolArray: @unchecked Sendable {}
extension pxr.VtCharArray: @unchecked Sendable {}
extension pxr.VtDoubleArray: @unchecked Sendable {}
extension pxr.VtFloatArray: @unchecked Sendable {}
extension pxr.VtInt64Array: @unchecked Sendable {}
extension pxr.VtIntArray: @unchecked Sendable {}
extension pxr.VtShortArray: @unchecked Sendable {}
extension pxr.VtStringArray: @unchecked Sendable {}
extension pxr.VtUInt64Array: @unchecked Sendable {}
extension pxr.VtUCharArray: @unchecked Sendable {}
extension pxr.VtUIntArray: @unchecked Sendable {}
extension pxr.VtUShortArray: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.TopologyToPrimvarVector: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.VtTypedValueProxyBase: @unchecked Sendable {}
extension pxr.VtErasedValueProxyBase: @unchecked Sendable {}
extension pxr.VtDualQuatdArrayEdit: @unchecked Sendable {}
extension pxr.VtDualQuatfArrayEdit: @unchecked Sendable {}
extension pxr.VtDualQuathArrayEdit: @unchecked Sendable {}
extension pxr.VtHalfArrayEdit: @unchecked Sendable {}
extension pxr.VtIntervalArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix2dArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix2fArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix3dArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix3fArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix4dArrayEdit: @unchecked Sendable {}
extension pxr.VtMatrix4fArrayEdit: @unchecked Sendable {}
extension pxr.VtQuatdArrayEdit: @unchecked Sendable {}
extension pxr.VtQuaternionArrayEdit: @unchecked Sendable {}
extension pxr.VtQuatfArrayEdit: @unchecked Sendable {}
extension pxr.VtQuathArrayEdit: @unchecked Sendable {}
extension pxr.VtRange1dArrayEdit: @unchecked Sendable {}
extension pxr.VtRange1fArrayEdit: @unchecked Sendable {}
extension pxr.VtRange2dArrayEdit: @unchecked Sendable {}
extension pxr.VtRange2fArrayEdit: @unchecked Sendable {}
extension pxr.VtRange3dArrayEdit: @unchecked Sendable {}
extension pxr.VtRange3fArrayEdit: @unchecked Sendable {}
extension pxr.VtRect2iArrayEdit: @unchecked Sendable {}
extension pxr.VtVec2dArrayEdit: @unchecked Sendable {}
extension pxr.VtVec2fArrayEdit: @unchecked Sendable {}
extension pxr.VtVec2hArrayEdit: @unchecked Sendable {}
extension pxr.VtVec2iArrayEdit: @unchecked Sendable {}
extension pxr.VtVec3dArrayEdit: @unchecked Sendable {}
extension pxr.VtVec3fArrayEdit: @unchecked Sendable {}
extension pxr.VtVec3hArrayEdit: @unchecked Sendable {}
extension pxr.VtVec3iArrayEdit: @unchecked Sendable {}
extension pxr.VtVec4dArrayEdit: @unchecked Sendable {}
extension pxr.VtVec4fArrayEdit: @unchecked Sendable {}
extension pxr.VtVec4hArrayEdit: @unchecked Sendable {}
extension pxr.VtVec4iArrayEdit: @unchecked Sendable {}
extension pxr.VtTokenArrayEdit: @unchecked Sendable {}
extension pxr.VtBoolArrayEdit: @unchecked Sendable {}
extension pxr.VtCharArrayEdit: @unchecked Sendable {}
extension pxr.VtDoubleArrayEdit: @unchecked Sendable {}
extension pxr.VtFloatArrayEdit: @unchecked Sendable {}
extension pxr.VtInt64ArrayEdit: @unchecked Sendable {}
extension pxr.VtIntArrayEdit: @unchecked Sendable {}
extension pxr.VtShortArrayEdit: @unchecked Sendable {}
extension pxr.VtStringArrayEdit: @unchecked Sendable {}
extension pxr.VtUInt64ArrayEdit: @unchecked Sendable {}
extension pxr.VtUCharArrayEdit: @unchecked Sendable {}
extension pxr.VtUIntArrayEdit: @unchecked Sendable {}
extension pxr.VtUShortArrayEdit: @unchecked Sendable {}
extension pxr.VtDictionaryHash: @unchecked Sendable {}
extension pxr.TsInterpMode: @unchecked Sendable {}
extension pxr.TsCurveType: @unchecked Sendable {}
extension pxr.TsExtrapMode: @unchecked Sendable {}
extension pxr.TsSplineSampleSource: @unchecked Sendable {}
extension pxr.TsTangentAlgorithm: @unchecked Sendable {}
extension pxr.TsLoopParams: @unchecked Sendable {}
extension pxr.TsExtrapolation: @unchecked Sendable {}
extension pxr.TsAntiRegressionMode: @unchecked Sendable {}
extension pxr.TsRegressionPreventer.InteractiveMode: @unchecked Sendable {}
extension pxr.TsRegressionPreventer.SetResult: @unchecked Sendable {}
extension pxr.ArDefaultResolverContext: @unchecked Sendable {}
extension pxr.ArResolvedPath: @unchecked Sendable {}
extension pxr.ArTimestamp: @unchecked Sendable {}
extension pxr.ArNotice: @unchecked Sendable {}
extension pxr.ArNotice.ResolverNotice: @unchecked Sendable {}
extension pxr.KindTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfDataTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfAbstractDataSpecVisitor: @unchecked Sendable {}
extension pxr.SdfPath: @unchecked Sendable {}
extension pxr.SdfRelocatesMap: @unchecked Sendable {}
extension pxr.UsdVolVolume.FieldMap: @unchecked Sendable {}
extension pxr.SdfPathSet: @unchecked Sendable {}
extension pxr.SdfPathVector: @unchecked Sendable {}
extension pxr.SdfRelocates: @unchecked Sendable {}
extension pxr.UsdNotice.ObjectsChanged.RenamedProperties: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.HdInstancerContext: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.SdfRelocate: @unchecked Sendable {}
extension pxr.UsdUtilsPathHashSet: @unchecked Sendable {}
extension pxr.PcpPrimIndexInputs.PayloadSet: @unchecked Sendable {}
extension pxr.SdfPath.Hash: @unchecked Sendable {}
extension pxr.PcpMapFunction.PathMap: @unchecked Sendable {}
extension pxr.SdfPath.FastLessThan: @unchecked Sendable {}
extension pxr.SdfPathAncestorsRange: @unchecked Sendable {}
extension pxr.SdfPathAncestorsRange.iterator: @unchecked Sendable {}
extension pxr.SdfTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfPathTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfMetadataDisplayGroupTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfSpecType: @unchecked Sendable {}
extension pxr.SdfSpecifier: @unchecked Sendable {}
extension pxr.SdfPermission: @unchecked Sendable {}
extension pxr.SdfVariability: @unchecked Sendable {}
extension pxr.SdfAuthoringError: @unchecked Sendable {}
extension pxr.SdfAngularUnit: @unchecked Sendable {}
extension pxr.SdfDimensionlessUnit: @unchecked Sendable {}
extension pxr.SdfLengthUnit: @unchecked Sendable {}
extension pxr.SdfValueRoleNames_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfValueBlock: @unchecked Sendable {}
extension pxr.SdfAnimationBlock: @unchecked Sendable {}
extension pxr.SdfHumanReadableValue: @unchecked Sendable {}
extension pxr.SdfAssetPathParams: @unchecked Sendable {}
extension pxr.SdfAssetPath: @unchecked Sendable {}
extension pxr.SdfAssetPath.Hash: @unchecked Sendable {}
extension pxr.SdfListOpType: @unchecked Sendable {}
extension pxr.SdfOpaqueValue: @unchecked Sendable {}
extension pxr.SdfPathExpression.ExpressionReference: @unchecked Sendable {}
extension pxr.SdfPathExpression.Op: @unchecked Sendable {}
extension pxr.SdfPathPattern.Component: @unchecked Sendable {}
extension pxr.SdfPredicateExpression.FnCall.Kind: @unchecked Sendable {}
extension pxr.SdfPredicateExpression.Op: @unchecked Sendable {}
extension pxr.SdfTimeCode: @unchecked Sendable {}
extension pxr.SdfTimeCode.Hash: @unchecked Sendable {}
extension pxr.SdfTupleDimensions: @unchecked Sendable {}
extension pxr.SdfValueTypeNameHash: @unchecked Sendable {}
extension pxr.SdfAllowed: @unchecked Sendable {}
extension pxr.SdfSpecTypeRegistration: @unchecked Sendable {}
extension pxr.SdfFieldKeys_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfChildrenKeys_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfNameKeyPolicy: @unchecked Sendable {}
extension pxr.SdfNameTokenKeyPolicy: @unchecked Sendable {}
extension pxr.SdfPayloadTypePolicy: @unchecked Sendable {}
extension pxr.SdfReferenceTypePolicy: @unchecked Sendable {}
extension pxr.SdfSubLayerTypePolicy: @unchecked Sendable {}
extension pxr.SdfRelocatesMapProxyValuePolicy: @unchecked Sendable {}
extension pxr.SdfGenericSpecViewPredicate: @unchecked Sendable {}
extension pxr.SdfAttributeViewPredicate: @unchecked Sendable {}
extension pxr.SdfRelationshipViewPredicate: @unchecked Sendable {}
extension pxr.SdfChangeList.SubLayerChangeType: @unchecked Sendable {}
extension pxr.SdfChangeList.Entry.SubLayerChange: @unchecked Sendable {}
extension pxr.SdfCrateInfo.Section: @unchecked Sendable {}
extension pxr.SdfCrateInfo.SummaryStats: @unchecked Sendable {}
extension pxr.SdfFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfFileVersion: @unchecked Sendable {}
extension pxr.SdfLayer.DetachedLayerRules: @unchecked Sendable {}
extension pxr.SdfLayerHints: @unchecked Sendable {}
extension pxr.SdfLayerOffset: @unchecked Sendable {}
extension pxr.SdfLayerOffsetVector: @unchecked Sendable {}
extension pxr.SdfLayerOffset.Hash: @unchecked Sendable {}
extension pxr.SdfNamespaceEditVector: @unchecked Sendable {}
extension pxr.SdfNamespaceEdit: @unchecked Sendable {}
extension pxr.SdfNamespaceEditDetailVector: @unchecked Sendable {}
extension pxr.SdfNamespaceEditDetail: @unchecked Sendable {}
extension pxr.SdfNamespaceEditDetail.Result: @unchecked Sendable {}
extension pxr.SdfBatchNamespaceEdit: @unchecked Sendable {}
extension pxr.SdfNotice: @unchecked Sendable {}
extension pxr.SdfNotice.Base: @unchecked Sendable {}
extension pxr.SdfNotice.LayerInfoDidChange: @unchecked Sendable {}
extension pxr.SdfNotice.LayerIdentifierDidChange: @unchecked Sendable {}
extension pxr.SdfNotice.LayerDidReplaceContent: @unchecked Sendable {}
extension pxr.SdfNotice.LayerDidReloadContent: @unchecked Sendable {}
extension pxr.SdfNotice.LayerDidSaveLayerToFile: @unchecked Sendable {}
extension pxr.SdfNotice.LayerDirtinessChanged: @unchecked Sendable {}
extension pxr.SdfNotice.LayerMutenessChanged: @unchecked Sendable {}
extension pxr.SdfPredicateFunctionResult: @unchecked Sendable {}
extension pxr.SdfPredicateFunctionResult.Constancy: @unchecked Sendable {}
extension pxr.SdfPayload: @unchecked Sendable {}
extension pxr.SdfPayloadVector: @unchecked Sendable {}
extension pxr.SdfReference.IdentityEqual: @unchecked Sendable {}
extension pxr.SdfReference.IdentityLessThan: @unchecked Sendable {}
extension pxr.SdfTextFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfUsdFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfUsdaFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfUsdcFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfUsdzFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdfVariableExpression.EmptyList: @unchecked Sendable {}
extension pxr.SdfZipFile.FileInfo: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PathPatStretch: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PathPatSep: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.BracedPredExpr: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PrimPathWildCard: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PropPathWildCard: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PrimPathPatternElemText: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PropPathPatternElemText: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PrimPathPatternElem: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PropPathPatternElem: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PathPatternElems: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.AbsPathPattern: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.DotDot: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.DotDots: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.ReflexiveRelative: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.AbsoluteStart: @unchecked Sendable {}
extension pxr.SdfPathPatternParser.PathPattern: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.NotKW: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.AndKW: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.OrKW: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.Inf: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.True: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.False: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.ImpliedAnd: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.ReservedWord: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.Digits: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.Exp: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.Frac: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredArgFloat: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredArgInt: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredArgBool: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.QuotedString: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.UnquotedStringChar: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.UnquotedString: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredArgString: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredArgVal: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredKWArgName: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredKWArgPrefix: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredKWArg: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredParenPosArg: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredFuncName: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredParenArgs: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredColonArgs: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredColonCall: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredParenCall: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredBareCall: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredOpenGroup: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredCloseGroup: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredAtom: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredFactor: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredOperator: @unchecked Sendable {}
extension pxr.SdfPredicateExpressionParser.PredExpr: @unchecked Sendable {}
extension pxr.SdrShaderNodeDiscoveryResultVec: @unchecked Sendable {}
extension pxr.SdrShaderNodeDiscoveryResult: @unchecked Sendable {}
extension pxr.SdrVersion: @unchecked Sendable {}
extension pxr.SdrVersionFilter: @unchecked Sendable {}
extension pxr.SdrDiscoveryPluginFactoryBase: @unchecked Sendable {}
extension pxr.SdrDiscoveryUriVec: @unchecked Sendable {}
extension pxr.SdrDiscoveryUri: @unchecked Sendable {}
extension pxr.SdrParserPluginFactoryBase: @unchecked Sendable {}
extension pxr.SdrPropertyTypes_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrPropertyMetadata_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrPropertyRole_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrPropertyTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrNodeMetadata_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrNodeContext_StaticTokenType: @unchecked Sendable {}
extension pxr.SdrNodeRole_StaticTokenType: @unchecked Sendable {}
extension pxr.PcpNodeRef.Hash: @unchecked Sendable {}
extension pxr.PcpArcType: @unchecked Sendable {}
extension pxr.PcpRangeType: @unchecked Sendable {}
extension pxr.PcpSite.Hash: @unchecked Sendable {}
extension pxr.PcpLayerStackSite.Hash: @unchecked Sendable {}
extension pxr.PcpLayerStackIdentifier.Hash: @unchecked Sendable {}
extension pxr.PcpDependencyType: @unchecked Sendable {}
extension pxr.PcpErrorType: @unchecked Sendable {}
extension pxr.PcpErrorInvalidConflictingRelocation.ConflictReason: @unchecked Sendable {}
extension pxr.PcpPrimIndexOutputs.PayloadState: @unchecked Sendable {}
extension pxr.PcpCacheChanges.TargetType: @unchecked Sendable {}
extension pxr.PcpChanges.ChangeSpecsType: @unchecked Sendable {}
extension pxr.PcpDependentNamespaceEdits.MoveEditDescriptionVector: @unchecked Sendable {}
extension pxr.PcpDependentNamespaceEdits.MoveEditDescription: @unchecked Sendable {}
extension pxr.PcpDynamicFileFormatInterface: @unchecked Sendable {}
extension pxr.PcpInstanceKey.Hash: @unchecked Sendable {}
extension pxr.PcpNamespaceEdits.EditType: @unchecked Sendable {}
extension pxr.PcpNamespaceEdits.CacheSites: @unchecked Sendable {}
extension pxr.PcpNamespaceEdits.CacheSite: @unchecked Sendable {}
extension pxr.UsdListPosition: @unchecked Sendable {}
extension pxr.UsdLoadPolicy: @unchecked Sendable {}
extension pxr.UsdSchemaKind: @unchecked Sendable {}
extension pxr.UsdTimeCodeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdTimeCode: @unchecked Sendable {}
extension pxr.UsdObjType: @unchecked Sendable {}
extension pxr.UsdSchemaRegistry.VersionPolicy: @unchecked Sendable {}
extension pxr.UsdStage.InitialLoadSet: @unchecked Sendable {}
extension pxr.UsdInterpolationType: @unchecked Sendable {}
extension pxr.UsdStageLoadRules: @unchecked Sendable {}
extension pxr.UsdStageLoadRules.Rule: @unchecked Sendable {}
extension pxr.UsdStagePopulationMask: @unchecked Sendable {}
extension pxr.UsdResolveInfoSource: @unchecked Sendable {}
extension pxr.UsdClipsAPIInfoKeys_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdClipsAPISetNames_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdTokensType: @unchecked Sendable {}
extension pxr.UsdCollectionMembershipQueryTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdColorSpaceAPI.ColorSpaceCache: @unchecked Sendable {}
extension pxr.UsdModelAPI.KindValidation: @unchecked Sendable {}
extension pxr.UsdModelAPIAssetInfoKeys_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdNamespaceEditor.EditOptions: @unchecked Sendable {}
extension pxr.UsdNotice: @unchecked Sendable {}
extension pxr.UsdNotice.ObjectsChanged.PrimResyncType: @unchecked Sendable {}
extension pxr.UsdPrimCompositionQuery.ArcTypeFilter: @unchecked Sendable {}
extension pxr.UsdPrimCompositionQuery.DependencyTypeFilter: @unchecked Sendable {}
extension pxr.UsdPrimCompositionQuery.ArcIntroducedFilter: @unchecked Sendable {}
extension pxr.UsdPrimCompositionQuery.HasSpecsFilter: @unchecked Sendable {}
extension pxr.UsdPrimCompositionQuery.Filter: @unchecked Sendable {}
extension pxr.UsdStageCache.Id: @unchecked Sendable {}
extension pxr.UsdStageCacheContextBlockType: @unchecked Sendable {}
extension pxr.UsdUsdFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdUsdaFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdUsdcFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdUsdzFileFormatTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdGeomImageable.PurposeInfo: @unchecked Sendable {}
extension pxr.UsdGeomTokensType: @unchecked Sendable {}
extension pxr.UsdGeomXformOpTypes_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdGeomXformOp.`Type`: @unchecked Sendable {}
extension pxr.UsdGeomXformOp.Precision: @unchecked Sendable {}
extension pxr.UsdGeomHermiteCurves.PointAndTangentArrays: @unchecked Sendable {}
extension pxr.UsdGeomPointInstancer.ProtoXformInclusion: @unchecked Sendable {}
extension pxr.UsdGeomPointInstancer.MaskApplication: @unchecked Sendable {}
extension pxr.UsdGeomXformCommonAPI.RotationOrder: @unchecked Sendable {}
extension pxr.UsdGeomXformCommonAPI.OpFlags: @unchecked Sendable {}
extension pxr.UsdGeomLinearUnits: @unchecked Sendable {}
extension pxr.UsdVolTokensType: @unchecked Sendable {}
extension pxr.UsdMediaAssetPreviewsAPI.Thumbnails: @unchecked Sendable {}
extension pxr.UsdMediaTokensType: @unchecked Sendable {}
extension pxr.UsdShadeInput.Hash: @unchecked Sendable {}
extension pxr.UsdShadeAttributeType: @unchecked Sendable {}
extension pxr.UsdShadeConnectionModification: @unchecked Sendable {}
extension pxr.UsdShadeUtils: @unchecked Sendable {}
extension pxr.UsdShadeTokensType: @unchecked Sendable {}
extension pxr.UsdShadeNodeGraph.NodeGraphHasher: @unchecked Sendable {}
extension pxr.UsdShadeNodeGraph.NodeGraphEqualFn: @unchecked Sendable {}
extension pxr.UsdShadeConnectableAPIBehavior: @unchecked Sendable {}
extension pxr.UsdShadeConnectableAPIBehavior.ConnectableNodeTypes: @unchecked Sendable {}
extension pxr.UsdShadeShaderDefUtils: @unchecked Sendable {}
extension pxr.UsdShadeUdimUtils: @unchecked Sendable {}
extension pxr.UsdLuxTokensType: @unchecked Sendable {}
extension pxr.UsdLuxLightListAPI.ComputeMode: @unchecked Sendable {}
extension pxr.UsdLuxListAPI.ComputeMode: @unchecked Sendable {}
extension pxr.UsdProcTokensType: @unchecked Sendable {}
extension pxr.UsdRenderTokensType: @unchecked Sendable {}
extension pxr.UsdHydraTokensType: @unchecked Sendable {}
extension pxr.UsdRiTokensType: @unchecked Sendable {}
extension pxr.UsdSemanticsTokensType: @unchecked Sendable {}
extension pxr.UsdSkelTokensType: @unchecked Sendable {}
extension pxr.UsdSkelTopology: @unchecked Sendable {}
extension pxr.UsdSkelAnimMapper: @unchecked Sendable {}
extension pxr.UsdSkelBakeSkinningParms.DeformationFlags: @unchecked Sendable {}
extension pxr.UsdUITokensType: @unchecked Sendable {}
extension pxr.UsdUtilsCoalescingDiagnosticDelegateSharedItem: @unchecked Sendable {}
extension pxr.UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters: @unchecked Sendable {}
extension pxr.UsdUtilsExtractExternalReferencesParams: @unchecked Sendable {}
extension pxr.UsdUtilsDependencyInfo: @unchecked Sendable {}
extension pxr.UsdUtilsUsdStageStatsKeys_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdUtilsRegisteredVariantSet: @unchecked Sendable {}
extension pxr.UsdUtilsRegisteredVariantSet.SelectionExportPolicy: @unchecked Sendable {}
extension pxr.UsdUtilsStageCache: @unchecked Sendable {}
extension pxr.UsdUtilsStitchValueStatus: @unchecked Sendable {}
extension pxr.UsdUtilsTimeCodeRangeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdUtilsTimeCodeRange: @unchecked Sendable {}
extension pxr.UsdPhysicsTokensType: @unchecked Sendable {}
extension pxr.UsdPhysicsCollisionGroup.CollisionGroupTable: @unchecked Sendable {}
extension pxr.UsdPhysicsRigidBodyAPI.MassInformation: @unchecked Sendable {}
extension pxr.UsdPhysicsMassUnits: @unchecked Sendable {}
extension pxr.CustomUsdPhysicsTokens: @unchecked Sendable {}
extension pxr.UsdPhysicsObjectType: @unchecked Sendable {}
extension pxr.UsdPhysicsAxis: @unchecked Sendable {}
extension pxr.UsdPhysicsJointDOF: @unchecked Sendable {}
extension pxr.UsdPhysicsObjectDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsRigidBodyMaterialDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsSceneDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCollisionGroupDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsSphereShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCapsuleShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCapsule1ShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCylinderShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCylinder1ShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsConeShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsPlaneShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCustomShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCubeShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsMeshShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsSpherePoint: @unchecked Sendable {}
extension pxr.UsdPhysicsSpherePointsShapeDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsRigidBodyDesc: @unchecked Sendable {}
extension pxr.JointLimits: @unchecked Sendable {}
extension pxr.UsdPhysicsJointLimit: @unchecked Sendable {}
extension pxr.JointDrives: @unchecked Sendable {}
extension pxr.UsdPhysicsJointDrive: @unchecked Sendable {}
extension pxr.UsdPhysicsArticulationDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsCustomJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsFixedJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsD6JointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsPrismaticJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsSphericalJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsRevoluteJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsDistanceJointDesc: @unchecked Sendable {}
extension pxr.UsdPhysicsMassProperties: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
extension pxr.UsdMtlxTokensType: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
extension pxr.VdfInputSpec.Access: @unchecked Sendable {}
extension pxr.VdfMask.ArbitraryLessThan: @unchecked Sendable {}
extension pxr.VdfMask.HashFunctor: @unchecked Sendable {}
extension pxr.VdfMaskedOutput.Hash: @unchecked Sendable {}
extension pxr.VdfVector: @unchecked Sendable {}
extension pxr.VdfVector.ConstructBoxedCopyTag: @unchecked Sendable {}
extension pxr.VdfIndexedWeights: @unchecked Sendable {}
extension pxr.VdfTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.VdfRequest.Hash: @unchecked Sendable {}
extension pxr.VdfMaskedOutputVector_Hash: @unchecked Sendable {}
extension pxr.VdfPoolChainIndex: @unchecked Sendable {}
extension pxr.VdfScheduleNodeTasks: @unchecked Sendable {}
extension pxr.VdfScheduleComputeTaskFlags: @unchecked Sendable {}
extension pxr.VdfScheduleComputeTask: @unchecked Sendable {}
extension pxr.VdfScheduleInputsTask: @unchecked Sendable {}
extension pxr.VdfExecutionStats.EventType: @unchecked Sendable {}
extension pxr.VdfExecutionStats.Event: @unchecked Sendable {}
extension pxr.VdfMaskedIteratorMode: @unchecked Sendable {}
extension pxr.VdfDataManagerDeallocationMode: @unchecked Sendable {}
extension pxr.VdfExecutorObserver: @unchecked Sendable {}
extension pxr.VdfGrapher: @unchecked Sendable {}
extension pxr.VdfGrapherOptions.DisplayStyle: @unchecked Sendable {}
extension pxr.VdfObjectPtr.`Type`: @unchecked Sendable {}
extension pxr.VdfObjectPtr.HashFunctor: @unchecked Sendable {}
extension pxr.VdfIndexedWeightsOperand.SetOperation: @unchecked Sendable {}
extension pxr.VdfNetworkStats: @unchecked Sendable {}
extension pxr.VdfNetworkStats.NodeTypeStats: @unchecked Sendable {}
extension pxr.VdfScheduler: @unchecked Sendable {}
extension pxr.VdfSparseInputTraverser: @unchecked Sendable {}
extension pxr.VdfSparseInputTraverser.CallbackMode: @unchecked Sendable {}
extension pxr.VdfSparseVectorizedInputTraverser.CallbackMode: @unchecked Sendable {}
extension pxr.VdfTestUtils.NodeType: @unchecked Sendable {}
extension pxr.EfLeafTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.EfTime: @unchecked Sendable {}
extension pxr.EfTimeInterval: @unchecked Sendable {}
extension pxr.EsfEditReason: @unchecked Sendable {}
extension pxr.EsfJournal.value_type: @unchecked Sendable {}
extension pxr.EsfAttributeInterface: @unchecked Sendable {}
extension pxr.EsfAttribute: @unchecked Sendable {}
extension pxr.EsfAttributeQueryInterface: @unchecked Sendable {}
extension pxr.EsfAttributeQuery: @unchecked Sendable {}
extension pxr.EsfFixedSizePolymorphicBase: @unchecked Sendable {}
extension pxr.EsfPropertyInterface: @unchecked Sendable {}
extension pxr.EsfProperty: @unchecked Sendable {}
extension pxr.EsfObjectInterface: @unchecked Sendable {}
extension pxr.EsfObject: @unchecked Sendable {}
extension pxr.EsfStageInterface: @unchecked Sendable {}
extension pxr.EsfStage: @unchecked Sendable {}
extension pxr.EsfPrimInterface: @unchecked Sendable {}
extension pxr.EsfPrim: @unchecked Sendable {}
extension pxr.EsfRelationshipInterface: @unchecked Sendable {}
extension pxr.EsfRelationship: @unchecked Sendable {}
extension pxr.EsfUsdSceneAdapter: @unchecked Sendable {}
extension pxr.ExecProviderResolution: @unchecked Sendable {}
extension pxr.ExecProviderResolution.DynamicTraversal: @unchecked Sendable {}
extension pxr.ExecDefinitionRegistryTag: @unchecked Sendable {}
extension pxr.exec_registration.Attribute: @unchecked Sendable {}
extension pxr.exec_registration.Relationship: @unchecked Sendable {}
extension pxr.exec_registration.Stage: @unchecked Sendable {}
extension pxr.ExecValueKey: @unchecked Sendable {}
extension pxr.ExecGeomXformableTokens_StaticTokenType: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.GarchGLDebugWindow.Buttons: @unchecked Sendable {}
extension pxr.GarchGLDebugWindow.ModifierKeys: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Darwin)
extension pxr.GarchNSGLContextState.NullState: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Darwin)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.HfPluginDescVector: @unchecked Sendable {}
extension pxr.HfPluginDesc: @unchecked Sendable {}
extension pxr.HioFieldTextureDataFactoryBase: @unchecked Sendable {}
extension pxr.HioImageFactoryBase: @unchecked Sendable {}
extension pxr.HioFormat: @unchecked Sendable {}
extension pxr.HioAddressDimension: @unchecked Sendable {}
extension pxr.HioAddressMode: @unchecked Sendable {}
extension pxr.HioType: @unchecked Sendable {}
extension pxr.HioGlslfxTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HioGlslfxConfig.Role: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayoutTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.InOut: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.Kind: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.MemberVector: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.Member: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.ElementVector: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.Element: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.TextureType: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.TextureElementVector: @unchecked Sendable {}
extension pxr.HioGlslfxResourceLayout.TextureElement: @unchecked Sendable {}
extension pxr.CameraUtilConformWindowPolicy: @unchecked Sendable {}
extension pxr.CameraUtilFraming: @unchecked Sendable {}
extension pxr.CameraUtilScreenWindowParameters: @unchecked Sendable {}
extension pxr.PxOsdMeshTopology: @unchecked Sendable {}
extension pxr.PxOsdSubdivTags: @unchecked Sendable {}
extension pxr.PxOsdMeshTopologyValidation.Code: @unchecked Sendable {}
extension pxr.PxOsdMeshTopologyValidation.Invalidation: @unchecked Sendable {}
extension pxr.PxOsdOpenSubdivTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.PxOsdRefinerFactory: @unchecked Sendable {}
extension pxr.GeomUtilCapsuleMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilMeshGeneratorBase: @unchecked Sendable {}
extension pxr.GeomUtilInterpolationTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.GeomUtilConeMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilCuboidMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilCylinderMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilDiskMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilPlaneMeshGenerator: @unchecked Sendable {}
extension pxr.GeomUtilSphereMeshGenerator: @unchecked Sendable {}
extension pxr.GlfTextureTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.GlfTexture.BindingVector: @unchecked Sendable {}
extension pxr.GlfTexture.Binding: @unchecked Sendable {}
extension pxr.GlfTextureFactoryBase: @unchecked Sendable {}
extension pxr.GlfSimpleLight: @unchecked Sendable {}
extension pxr.GlfSimpleLightVector: @unchecked Sendable {}
extension pxr.GlfSimpleMaterial: @unchecked Sendable {}
extension pxr.HgiAttachmentDescVector: @unchecked Sendable {}
extension pxr.HgiAttachmentDesc: @unchecked Sendable {}
extension pxr.HgiDeviceCapabilitiesBits: @unchecked Sendable {}
extension pxr.HgiTextureType: @unchecked Sendable {}
extension pxr.HgiTextureUsageBits: @unchecked Sendable {}
extension pxr.HgiSamplerAddressMode: @unchecked Sendable {}
extension pxr.HgiSamplerFilter: @unchecked Sendable {}
extension pxr.HgiMipFilter: @unchecked Sendable {}
extension pxr.HgiBorderColor: @unchecked Sendable {}
extension pxr.HgiSampleCount: @unchecked Sendable {}
extension pxr.HgiAttachmentLoadOp: @unchecked Sendable {}
extension pxr.HgiAttachmentStoreOp: @unchecked Sendable {}
extension pxr.HgiBufferUsageBits: @unchecked Sendable {}
extension pxr.HgiShaderStageBits: @unchecked Sendable {}
extension pxr.HgiBindResourceType: @unchecked Sendable {}
extension pxr.HgiPolygonMode: @unchecked Sendable {}
extension pxr.HgiCullMode: @unchecked Sendable {}
extension pxr.HgiWinding: @unchecked Sendable {}
extension pxr.HgiBlendOp: @unchecked Sendable {}
extension pxr.HgiBlendFactor: @unchecked Sendable {}
extension pxr.HgiColorMaskBits: @unchecked Sendable {}
extension pxr.HgiCompareFunction: @unchecked Sendable {}
extension pxr.HgiStencilOp: @unchecked Sendable {}
extension pxr.HgiComponentSwizzle: @unchecked Sendable {}
extension pxr.HgiPrimitiveType: @unchecked Sendable {}
extension pxr.HgiVertexBufferStepFunction: @unchecked Sendable {}
extension pxr.HgiSubmitWaitType: @unchecked Sendable {}
extension pxr.HgiMemoryBarrierBits: @unchecked Sendable {}
extension pxr.HgiBindingType: @unchecked Sendable {}
extension pxr.HgiInterpolationType: @unchecked Sendable {}
extension pxr.HgiSamplingType: @unchecked Sendable {}
extension pxr.HgiStorageType: @unchecked Sendable {}
extension pxr.HgiShaderTextureType: @unchecked Sendable {}
extension pxr.HgiComputeDispatch: @unchecked Sendable {}
extension pxr.HgiFormat: @unchecked Sendable {}
extension pxr.HgiMipInfo: @unchecked Sendable {}
extension pxr.HgiComponentMapping: @unchecked Sendable {}
extension pxr.HgiComputeShaderConstantsDesc: @unchecked Sendable {}
extension pxr.HgiSamplerDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTextureDescVector: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTextureDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionBufferDescVector: @unchecked Sendable {}
extension pxr.HgiShaderFunctionBufferDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamDescVector: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamBlockDescVector: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamBlockDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamBlockDesc.MemberVector: @unchecked Sendable {}
extension pxr.HgiShaderFunctionParamBlockDesc.Member: @unchecked Sendable {}
extension pxr.HgiShaderFunctionComputeDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTessellationDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTessellationDesc.PatchType: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTessellationDesc.Spacing: @unchecked Sendable {}
extension pxr.HgiShaderFunctionTessellationDesc.Ordering: @unchecked Sendable {}
extension pxr.HgiShaderFunctionGeometryDesc: @unchecked Sendable {}
extension pxr.HgiShaderFunctionGeometryDesc.InPrimitiveType: @unchecked Sendable {}
extension pxr.HgiShaderFunctionGeometryDesc.OutPrimitiveType: @unchecked Sendable {}
extension pxr.HgiShaderFunctionFragmentDesc: @unchecked Sendable {}
extension pxr.HgiComputeCmdsDesc: @unchecked Sendable {}
extension pxr.HgiVertexAttributeDescVector: @unchecked Sendable {}
extension pxr.HgiVertexAttributeDesc: @unchecked Sendable {}
extension pxr.HgiVertexBufferDescVector: @unchecked Sendable {}
extension pxr.HgiVertexBufferDesc: @unchecked Sendable {}
extension pxr.HgiMultiSampleState: @unchecked Sendable {}
extension pxr.HgiRasterizationState: @unchecked Sendable {}
extension pxr.HgiStencilState: @unchecked Sendable {}
extension pxr.HgiDepthStencilState: @unchecked Sendable {}
extension pxr.HgiGraphicsShaderConstantsDesc: @unchecked Sendable {}
extension pxr.HgiTessellationLevel: @unchecked Sendable {}
extension pxr.HgiTessellationState: @unchecked Sendable {}
extension pxr.HgiTessellationState.PatchType: @unchecked Sendable {}
extension pxr.HgiTessellationState.TessFactorMode: @unchecked Sendable {}
extension pxr.HgiFactoryBase: @unchecked Sendable {}
extension pxr.HgiShaderSectionAttributeVector: @unchecked Sendable {}
extension pxr.HgiShaderSectionAttribute: @unchecked Sendable {}
extension pxr.HgiShaderSection: @unchecked Sendable {}
extension pxr.HgiTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HgiShaderKeywordTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HgiGLOps: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Metal)
extension pxr.HgiMetalStepFunctionDescVector: @unchecked Sendable {}
extension pxr.HgiMetalStepFunctionDesc: @unchecked Sendable {}
extension pxr.HgiMetalStepFunctions: @unchecked Sendable {}
extension pxr.HgiMetalArgumentIndex: @unchecked Sendable {}
extension pxr.HgiMetalArgumentOffset: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Metal)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
extension pxr.HdRenderBufferDescriptor: @unchecked Sendable {}
extension pxr.HdParsedAovToken: @unchecked Sendable {}
extension pxr.HdWrap: @unchecked Sendable {}
extension pxr.HdMinFilter: @unchecked Sendable {}
extension pxr.HdMagFilter: @unchecked Sendable {}
extension pxr.HdBorderColor: @unchecked Sendable {}
extension pxr.HdSamplerParameters: @unchecked Sendable {}
extension pxr.HdVec4f_2_10_10_10_REV: @unchecked Sendable {}
extension pxr.HdType: @unchecked Sendable {}
extension pxr.HdTupleType: @unchecked Sendable {}
extension pxr.HdFormat: @unchecked Sendable {}
extension pxr.HdCompareFunction: @unchecked Sendable {}
extension pxr.HdStencilOp: @unchecked Sendable {}
extension pxr.HdBlendOp: @unchecked Sendable {}
extension pxr.HdBlendFactor: @unchecked Sendable {}
extension pxr.HdCullStyle: @unchecked Sendable {}
extension pxr.HdPolygonMode: @unchecked Sendable {}
extension pxr.HdMeshGeomStyle: @unchecked Sendable {}
extension pxr.HdBasisCurvesGeomStyle: @unchecked Sendable {}
extension pxr.HdPointsGeomStyle: @unchecked Sendable {}
extension pxr.HdInterpolation: @unchecked Sendable {}
extension pxr.HdDepthPriority: @unchecked Sendable {}
extension pxr.HdBasisCurvesReprDescTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdBasisCurvesReprDesc: @unchecked Sendable {}
extension pxr.HdBufferArrayUsageHintBits: @unchecked Sendable {}
extension pxr.HdBufferSpecVector: @unchecked Sendable {}
extension pxr.HdBufferSpec: @unchecked Sendable {}
extension pxr.HdBufferSpec.HashFunctor: @unchecked Sendable {}
extension pxr.HdTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstancerTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdReprTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCullStyleTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdModelDrawModeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPerfTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdShaderTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialTagTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialTerminalTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderTagTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderContextTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdOptionTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLightTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLightFilterTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRprimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSprimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdBprimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPrimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPrimvarRoleTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdAovTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderSettingsTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderSettingsPrimTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdAspectRatioConformPolicyTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdResourceTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSceneIndexEmulationTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCollectionEmulationTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdReprSelector: @unchecked Sendable {}
extension pxr.HdReprSelectorVector: @unchecked Sendable {}
extension pxr.HdDrawingCoord: @unchecked Sendable {}
extension pxr.HdSyncRequestVector: @unchecked Sendable {}
extension pxr.HdDisplayStyle: @unchecked Sendable {}
extension pxr.HdPrimvarDescriptorVector: @unchecked Sendable {}
extension pxr.HdPrimvarDescriptor: @unchecked Sendable {}
extension pxr.HdModelDrawMode: @unchecked Sendable {}
extension pxr.HdExtComputationPrimvarDescriptorVector: @unchecked Sendable {}
extension pxr.HdExtComputationPrimvarDescriptor: @unchecked Sendable {}
extension pxr.HdExtComputationInputDescriptorVector: @unchecked Sendable {}
extension pxr.HdExtComputationInputDescriptor: @unchecked Sendable {}
extension pxr.HdExtComputationOutputDescriptorVector: @unchecked Sendable {}
extension pxr.HdExtComputationOutputDescriptor: @unchecked Sendable {}
extension pxr.HdVolumeFieldDescriptorVector: @unchecked Sendable {}
extension pxr.HdVolumeFieldDescriptor: @unchecked Sendable {}
extension pxr.HdBasisCurvesTopology: @unchecked Sendable {}
extension pxr.HdTopology: @unchecked Sendable {}
extension pxr.HdGeomSubsets: @unchecked Sendable {}
extension pxr.HdGeomSubset: @unchecked Sendable {}
extension pxr.HdGeomSubset.`Type`: @unchecked Sendable {}
extension pxr.HdRprimCollection: @unchecked Sendable {}
extension pxr.HdRprimCollectionVector: @unchecked Sendable {}
extension pxr.HdRprimCollection.Hash: @unchecked Sendable {}
extension pxr.HdDataSourceBase: @unchecked Sendable {}
extension pxr.HdContainerDataSource: @unchecked Sendable {}
extension pxr.HdVectorDataSource: @unchecked Sendable {}
extension pxr.HdSampledDataSource: @unchecked Sendable {}
extension pxr.HdBlockDataSource: @unchecked Sendable {}
extension pxr.HdSceneIndexObserver.AddedPrimEntry: @unchecked Sendable {}
extension pxr.HdSceneIndexObserver.RemovedPrimEntry: @unchecked Sendable {}
extension pxr.HdSceneIndexObserver.RenamedPrimEntry: @unchecked Sendable {}
extension pxr.HdEncapsulatingSceneIndexBase: @unchecked Sendable {}
extension pxr.HdLegacyTaskFactory: @unchecked Sendable {}
extension pxr.HdBasisCurvesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdBasisCurvesTopologySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdBprim: @unchecked Sendable {}
extension pxr.HdCameraTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCamera: @unchecked Sendable {}
extension pxr.HdCamera.DirtyBits: @unchecked Sendable {}
extension pxr.HdCamera.Projection: @unchecked Sendable {}
extension pxr.HdSprim: @unchecked Sendable {}
extension pxr.HdCameraSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSplitDiopterSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLensDistortionSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCapsuleSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCategoriesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCollectionExpressionEvaluator.MatchKind: @unchecked Sendable {}
extension pxr.HdCollectionSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCollectionsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdConeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCoordSys: @unchecked Sendable {}
extension pxr.HdCoordSys.DirtyBits: @unchecked Sendable {}
extension pxr.HdCoordSysSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCoordSysBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCubeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdCylinderSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLegacyPrimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLegacyFlagTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialNetworkInterface: @unchecked Sendable {}
extension pxr.HdMaterialNetworkInterface.InputConnection: @unchecked Sendable {}
extension pxr.HdMaterialNetworkInterface.InputConnectionResult: @unchecked Sendable {}
extension pxr.HdMaterialNetworkSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialNodeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdDependenciesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdDependencySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdDirtyBitsTranslator: @unchecked Sendable {}
extension pxr.HdDisplayFilterSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationCpuCallback: @unchecked Sendable {}
extension pxr.HdExtComputationInputComputationSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationOutputSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationPrimvarSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPrimvarSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationPrimvarsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdExtComputationUtils: @unchecked Sendable {}
extension pxr.HdExtentSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdFieldTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdField: @unchecked Sendable {}
extension pxr.HdField.DirtyBits: @unchecked Sendable {}
extension pxr.HdFlattenedDataSourceProvider: @unchecked Sendable {}
extension pxr.HdRetainedContainerDataSource: @unchecked Sendable {}
extension pxr.HdFlattenedOverlayDataSourceProvider: @unchecked Sendable {}
extension pxr.HdFlattenedPrimvarsDataSourceProvider: @unchecked Sendable {}
extension pxr.HdFlattenedPurposeDataSourceProvider: @unchecked Sendable {}
extension pxr.HdFlattenedVisibilityDataSourceProvider: @unchecked Sendable {}
extension pxr.HdFlattenedXformDataSourceProvider: @unchecked Sendable {}
extension pxr.HdGeomSubsetSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdImageShaderTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialRelationship: @unchecked Sendable {}
extension pxr.HdMaterialConnection2: @unchecked Sendable {}
extension pxr.HdImageShaderSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstanceCategoriesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstancedBySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstanceIndicesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstancerTopologySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInstanceSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdIntegratorSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLegacyDisplayStyleSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLegacyTaskSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLightTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdLight: @unchecked Sendable {}
extension pxr.HdLight.DirtyBits: @unchecked Sendable {}
extension pxr.HdLightSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialBindingsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialConnectionSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialInterfaceMappingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialNodeParameterSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialOverrideSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMaterialSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMeshReprDescTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMeshReprDesc: @unchecked Sendable {}
extension pxr.HdMeshSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMeshTopologySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSubdivisionTagsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdQuadInfo: @unchecked Sendable {}
extension pxr.HdNurbsCurvesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdNurbsPatchSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdNurbsPatchTrimCurveSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPlaneSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPointsReprDesc: @unchecked Sendable {}
extension pxr.HdPrimOriginSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPrimOriginSchema.OriginPath: @unchecked Sendable {}
extension pxr.HdPrimvarsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdPurposeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderBuffer: @unchecked Sendable {}
extension pxr.HdRenderBuffer.DirtyBits: @unchecked Sendable {}
extension pxr.HdRenderBufferSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderCapabilitiesSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderPassSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderPassState.ColorMask: @unchecked Sendable {}
extension pxr.HdRenderProductSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderSettingsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdRenderVarSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSampleFilterSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSceneGlobalsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSceneIndexPluginRegistryTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSceneIndexPluginRegistry.InsertionOrder: @unchecked Sendable {}
extension pxr.HdSelection: @unchecked Sendable {}
extension pxr.HdSelection.HighlightMode: @unchecked Sendable {}
extension pxr.HdSelection.PrimSelectionState: @unchecked Sendable {}
extension pxr.HdSelectionSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSelectionsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSphereSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSystemMessageTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdSystemSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdTetMeshSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdTetMeshTopologySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdVisibilitySchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdVolumeFieldBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdVolumeFieldSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdXformSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdInvalidatableContainerDataSource: @unchecked Sendable {}
extension pxr.HdarSystemSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdGpGenerativeProceduralTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdGpGenerativeProcedural: @unchecked Sendable {}
extension pxr.HdGpGenerativeProcedural.AsyncState: @unchecked Sendable {}
extension pxr.HdsiDomeLightCameraVisibilitySceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiImplicitSurfaceSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiLegacyDisplayStyleOverrideSceneIndex.OptionalInt: @unchecked Sendable {}
extension pxr.HdsiLightLinkingSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiPrefixPathPruningSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiPrimManagingSceneIndexObserverTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiPrimManagingSceneIndexObserver.PrimBase: @unchecked Sendable {}
extension pxr.HdsiPrimManagingSceneIndexObserver.PrimFactoryBase: @unchecked Sendable {}
extension pxr.HdsiPrimTypeAndPathPruningSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiPrimTypeNoticeBatchingSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiPrimTypeNoticeBatchingSceneIndex.PrimTypePriorityFunctor: @unchecked Sendable {}
extension pxr.HdsiPrimTypePruningSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiRenderSettingsFilteringSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiUnboundMaterialPruningSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdsiVelocityMotionResolvingSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdMtlxTexturePrimvarData: @unchecked Sendable {}
extension pxr.HdStBinding: @unchecked Sendable {}
extension pxr.HdStBinding.`Type`: @unchecked Sendable {}
extension pxr.HdStBinding.Location: @unchecked Sendable {}
extension pxr.HdStAggregationStrategy: @unchecked Sendable {}
extension pxr.HdStComputation: @unchecked Sendable {}
extension pxr.HdStDrawTargetTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStTextureType: @unchecked Sendable {}
extension pxr.HdStComputeQueue: @unchecked Sendable {}
extension pxr.HdStOpenVDBAssetSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStField3DAssetSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStFieldBaseSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStAssetUvSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStDynamicUvSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStPtexSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStUdimSubtextureIdentifier: @unchecked Sendable {}
extension pxr.HdStGLConversions: @unchecked Sendable {}
extension pxr.HdStHgiConversions: @unchecked Sendable {}
extension pxr.HdStHioConversions: @unchecked Sendable {}
extension pxr.HdStTextureUtils: @unchecked Sendable {}
extension pxr.HdStTextureCpuData: @unchecked Sendable {}
extension pxr.HdStGLSLProgramTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStTextureTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStRenderBufferTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStRenderSettingsTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStMaterialTagTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStSdrMetadataTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStPerfTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdStDynamicUvTextureImplementation: @unchecked Sendable {}
extension pxr.HdxAovInputTaskParams: @unchecked Sendable {}
extension pxr.HdxBoundingBoxTaskParams: @unchecked Sendable {}
extension pxr.HdxTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxPrimitiveTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxRenderTagTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxColorCorrectionTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxColorChannelTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxAovTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxSimpleLightTaskTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxColorizeSelectionTaskParams: @unchecked Sendable {}
extension pxr.HdxColorChannelTaskParams: @unchecked Sendable {}
extension pxr.HdxColorCorrectionTaskParams: @unchecked Sendable {}
extension pxr.HdxDrawTargetTaskParams: @unchecked Sendable {}
extension pxr.HdxHgiConversions: @unchecked Sendable {}
extension pxr.HdxOitResolveTaskParams: @unchecked Sendable {}
extension pxr.HdxPickTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.HdxPickTaskParams: @unchecked Sendable {}
extension pxr.HdxPickHitVector: @unchecked Sendable {}
extension pxr.HdxPickHit: @unchecked Sendable {}
extension pxr.HdxPickFromRenderBufferTaskParams: @unchecked Sendable {}
extension pxr.HdxSelectionTaskParams: @unchecked Sendable {}
extension pxr.HdxShadowTaskParams: @unchecked Sendable {}
extension pxr.HdxSimpleLightTaskParams: @unchecked Sendable {}
extension pxr.HdxVisualizeAovTaskParams: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
extension pxr.UsdImagingAdapterKeyTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingCollectionMaterialBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingDirectMaterialBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingDataSourceStageGlobals: @unchecked Sendable {}
extension pxr.UsdImagingDataSourceCustomPrimvars.Mappings: @unchecked Sendable {}
extension pxr.UsdImagingDataSourceCustomPrimvars.Mapping: @unchecked Sendable {}
extension pxr.UsdImagingPropertyInvalidationType: @unchecked Sendable {}
extension pxr.UsdImagingPrimAdapter.PopulationMode: @unchecked Sendable {}
extension pxr.UsdImagingExtentResolvingSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingExtentsHintSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingGeomModelSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingModelSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingStageSceneIndexTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingAPISchemaAdapterFactoryBase: @unchecked Sendable {}
extension pxr.UsdImagingFlattenedGeomModelDataSourceProvider: @unchecked Sendable {}
extension pxr.UsdImagingFlattenedMaterialBindingsDataSourceProvider: @unchecked Sendable {}
extension pxr.UsdImagingMaterialBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingMaterialBindingsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingUsdPrimInfoSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingUsdRenderProductSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingUsdRenderSettingsSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingUsdRenderVarSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdImagingSceneIndexPlugin: @unchecked Sendable {}
extension pxr.UsdImagingSceneIndexPlugin.FactoryBase: @unchecked Sendable {}
extension pxr.UsdImagingGLDrawMode: @unchecked Sendable {}
extension pxr.UsdImagingGLCullStyle: @unchecked Sendable {}
extension pxr.UsdImagingGLRenderParams: @unchecked Sendable {}
extension pxr.UsdImagingGLRendererSetting.`Type`: @unchecked Sendable {}
extension pxr.UsdRiPxrImagingTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingAnimationSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingBindingSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingWeightsAndSubShapeIndices: @unchecked Sendable {}
extension pxr.UsdSkelImagingWeightAndSubShapeIndex: @unchecked Sendable {}
extension pxr.UsdSkelImagingBlendShapeData: @unchecked Sendable {}
extension pxr.UsdSkelImagingBlendShapeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingResolvedSkeletonSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingSkeletonSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingInbetweenShapeSchemaTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingJointInfluencesData: @unchecked Sendable {}
extension pxr.UsdSkelImagingResolvingSceneIndexPlugin: @unchecked Sendable {}
extension pxr.UsdSkelImagingSkelData: @unchecked Sendable {}
extension pxr.UsdSkelImagingSkelGuideData: @unchecked Sendable {}
extension pxr.UsdSkelImagingPrimTypeTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingExtComputationNameTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingExtAggregatorComputationInputNameTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingExtComputationInputNameTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdSkelImagingExtComputationOutputNameTokens_StaticTokenType: @unchecked Sendable {}
extension pxr.UsdVolImagingTokens_StaticTokenType: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)

// MARK: Unavailable

@available(*, unavailable) extension pxr.ArchMallocHook: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ArchRegex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfAnyUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfAnyWeakPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfType: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PlugRegistry.TypeVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfCallContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfCStrHashWrapper: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefBase.UniqueChangedListener: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfSimpleRefBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfBits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfCompressedBits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfEnum: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfNotice.Probe: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfNotice.WeakProbePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfNotice.Key: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfNotice.Keys: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefPtrTracker.WatchedCounts: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfNodeToInputPtrVectorMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr.ErrorHelper: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr.WarningHelper: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr.StatusHelper: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr.FatalHelper: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfError: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfDiagnosticMgr.ErrorList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfStatus: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfWarning: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfErrorTransport: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfBaseException: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfPatternMatcher: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefPtrTracker: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefPtrTracker.OwnerTraces: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRefPtrTracker.Trace: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfRegTest: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfSafeOutputFile: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfNodePtrSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfOutputPtrSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfTemplateString: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrPropertyMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfTypeWasDeclaredNotice: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfUtf8CodePointIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TfUtf8CodePointView: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GfColor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GfColorSpace: @unchecked Sendable {}
@available(*, unavailable) extension pxr.JsValue: @unchecked Sendable {}
@available(*, unavailable) extension pxr.JsObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.JsOptionalValue: @unchecked Sendable {}
@available(*, unavailable) extension pxr.JsArray: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateTreeRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateTree: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateNodeRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateNodePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateNodeRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceAggregateNodePtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEvent: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceKey: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceStaticKeyData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceStaticKeyData.StringLiteral: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceCollection: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterBase.CollectionPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceCollection.EventListPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceDataBuffer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceDynamicKey: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventContainer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventContainer.const_iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceCollectionAvailable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceCollector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventNodeRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventNodeRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventTreeRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceEventTree: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporter.ParsedTree: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterBase.DataSourcePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterDataSourceCollection: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterDataSourceCollection.ThisRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterDataSourceCollectorPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterDataSourceCollector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceReporterDataSourceCollector.ThisRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceScopeAuto: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TraceCounterHolder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PlugNotice.DidRegisterPlugins: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PlugPluginPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PlugPluginPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PlugRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VtDictionary: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.HdAovSettingsMap: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.VtValue: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdMetadataValueMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfTimeSampleMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfMapperParametersMap: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.HdTaskContext: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.PcpDynamicFileFormatContext.VtValueVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfChangeList.Entry.InfoChange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TsSpline: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TsKnotMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TsKnot: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TsKnotMap.KnotVec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.TsRegressionPreventer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ArAssetInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ArResolverContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ArNotice.ResolverChanged: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ArResolverContextBinder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.KindRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAbstractData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAbstractDataRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAbstractDataPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAbstractDataValue: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAbstractDataConstValue: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.HdIdVectorSharedPtr: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.SdfUnregisteredValue: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPathExpression: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPathPattern: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateExpression: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateExpression.FnArg: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateExpression.FnCall: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfValueTypeName: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAttributeSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAttributeSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfAttributeSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPropertySpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPropertySpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPropertySpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfChangeBlock: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPathKeyPolicy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfNameEditorProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfConnectionsProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPayloadEditorProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfReferenceEditorProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfNameChildrenOrderProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSubLayerProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfDictionaryProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfRelocatesMapProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSelectionProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfChangeList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfChangeList.Entry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfCopySpecsValueEdit: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfCrateInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfDataRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerHandleSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependentNamespaceEdits.LayerRelocatesEdits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerChangeListVec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerRelocatesEditBuilder.LayerRelocatesEdits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerRelocatesEditBuilder.LayerRelocatesEdit: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerStateDelegateBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerStateDelegateBaseRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerStateDelegateBasePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSimpleLayerStateDelegate: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSimpleLayerStateDelegateRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerTree: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerTreeHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfLayerTreeHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfNotice.BaseLayersDidChange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfNotice.LayersDidChangeSentPerLayer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfNotice.LayersDidChange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateParamNamesAndDefaults: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateParamNamesAndDefaults.Param: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPrimSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPrimSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPrimSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPseudoRootSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfReference: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfReferenceVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfRelationshipSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfRelationshipSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfRelationshipSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSite: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfSiteVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfTextFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfTextFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdaData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdaDataRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdaFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdaFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdcFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdcFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdzFileFormat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfUsdzFileFormatRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariableExpression: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariableExpression.Result: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSetSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSetSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSetSpecHandleMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSetSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSpecHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfVariantSpecHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfZipFile: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfZipFile.pxrIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfZipFileWriter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPathPatternActions.PatternBuilder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdfPredicateExprBuilder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrDiscoveryPluginContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrDiscoveryPlugin: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrDiscoveryPluginRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrDiscoveryPluginRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrParserPlugin: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrShaderProperty: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrShaderPropertyUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrShaderPropertyUniquePtrVec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrSdfTypeIndicator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrShaderNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrShaderNodeUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.SdrRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpArc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpMapExpression: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpMapExpression.VariableUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpMapFunction: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRefVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef_PtrProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef_ChildrenIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef.child_const_range: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef_ChildrenReverseIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRef.child_const_reverse_range: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpSiteTracker: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpSiteTrackerSegment: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpSite: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackSite: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackIdentifier: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpExpressionVariablesSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependencyVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependency: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpCulledDependencyVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpCulledDependency: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorBasePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcCycle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcCyclePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcPermissionDenied: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcPermissionDeniedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcToProhibitedChild: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorArcToProhibitedChildPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorCapacityExceeded: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorCapacityExceededPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentPropertyBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentPropertyType: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentPropertyTypePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentAttributeType: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentAttributeTypePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentAttributeVariability: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInconsistentAttributeVariabilityPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidPrimPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidPrimPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidAssetPathBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidAssetPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidAssetPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorMutedAssetPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorMutedAssetPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorTargetPathBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidInstanceTargetPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidInstanceTargetPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidExternalTargetPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidExternalTargetPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidTargetPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidTargetPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerOffset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerOffsetPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidReferenceOffset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidReferenceOffsetPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerOwnership: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerOwnershipPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSublayerPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorRelocationBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorRelocationBasePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidAuthoredRelocation: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidAuthoredRelocationPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidConflictingRelocation: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidConflictingRelocationPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSameTargetRelocations: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSameTargetRelocationsPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorInvalidSameTargetRelocations.RelocationSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorOpinionAtRelocationSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorOpinionAtRelocationSourcePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorPrimPermissionDenied: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorPrimPermissionDeniedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorPropertyPermissionDenied: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorPropertyPermissionDeniedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorSublayerCycle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorSublayerCyclePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorTargetPermissionDenied: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorTargetPermissionDeniedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorUnresolvedPrimPath: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorUnresolvedPrimPathPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorVariableExpressionError: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpErrorVariableExpressionErrorPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimIndexOutputs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimIndexInputs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpArcInfoVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpArcInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDynamicFileFormatDependencyData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpExpressionVariablesDependencyData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNodeReverseIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPrimReverseIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPropertyIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPropertyRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPropertyReverseIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpPropertyIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackChanges: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpCacheChanges: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpChanges.CacheChanges: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLifeboat: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpChanges: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependentNamespaceEdits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependentNamespaceEdits.CompositionFieldEdit: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDependentNamespaceEdits.LayerSpecMoveEdits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpDynamicFileFormatContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpExpressionVariables: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpExpressionVariableCachingComposer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpInstanceKey: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerRelocatesEditBuilder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStack: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpChanges.LayerStackChanges: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpLayerStackPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNamespaceEdits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNamespaceEdits.LayerStackSites: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpNamespaceEdits.LayerStackSite: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PcpTargetIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdAPISchemaBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSchemaBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrim: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.UsdPrimVector: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.UsdPrimSiblingIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimSiblingRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimSubtreeIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimSubtreeRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdObjectCollectionExpressionEvaluator.PathExprEval: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdObjectPredicateLibrary: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSchemaRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSchemaRegistry.SchemaInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdStageRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdStagePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdStage: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdStageRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdEditTarget: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdAttribute: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdAttributeVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdProperty: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdResolveInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRelationship: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRelationshipVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdReferences: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdClipsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdCollectionAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdObjectCollectionExpressionEvaluator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdObjectCollectionExpressionEvaluator.IncrementalSearcher: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdColorSpaceAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdColorSpaceDefinitionAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdModelAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdTyped: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdAttributeQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdResolveTarget: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdExpiredPrimAccessError: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdFlattenResolveAssetPathContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdInherits: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNamespaceEditor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.StageNotice: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.StageContentsChanged: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.ObjectsChanged: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.ObjectsChanged.PathRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.ObjectsChanged.PathRange.iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.StageEditTargetChanged: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdNotice.LayerMutingChanged: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPayloads: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimCompositionQueryArc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimCompositionQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimRange: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimRange.EndSentinel: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPrimRange.iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSpecializes: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdStageCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVariantSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVariantSets: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomBasisCurves: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCurves: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPointBased: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomGprim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomBoundable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformable.XformQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomImageable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPrimvar: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCamera: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCapsule: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCapsule_1: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCone: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCube: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCylinder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomCylinder_1: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomHermiteCurves: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomMesh: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomModelAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomBBoxCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPointInstancer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomConstraintTarget: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomMotionAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomNurbsCurves: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomNurbsPatch: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPlane: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPoints: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomPrimvarsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomScope: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomSphere: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomSubset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomTetMesh: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomVisibilityAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXform: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformCommonAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdGeomXformCommonAPI.Ops: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVolField3DAsset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVolFieldAsset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVolFieldBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVolOpenVDBAsset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdVolVolume: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdMediaAssetPreviewsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdMediaSpatialAudio: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeConnectableAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeConnectionSourceInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeInput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeNodeGraph.InterfaceInputConsumersMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeOutput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeCoordSysAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterial: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeNodeGraph: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeNodeGraph.NodeGraphInputConsumersMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeShader: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI.DirectBinding: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI.DirectBindingPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI.CollectionBinding: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI.CollectionBindingVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeMaterialBindingAPI.BindingsAtPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeNodeDefAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdShadeShaderDefParserPlugin: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxBoundableLightBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxLightAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxCylinderLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxDiskLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxDistantLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxNonboundableLightBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxDomeLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxDomeLight_1: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxGeometryLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxLightFilter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxLightListAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxListAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxMeshLightAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxPluginLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxPluginLightFilter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxPortalLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxRectLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxShadowAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxShapingAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxSphereLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdLuxVolumeLightAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdProcGenerativeProcedural: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderPass: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderProduct: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderSettingsBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderSettings: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderVar: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderSpec.Product: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRenderSpec.RenderVar: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdHydraGenerativeProceduralAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdHydraDiscoveryPlugin: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiMaterialAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiSplineAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiStatementsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSemanticsLabelsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelAnimation: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelBindingAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelSkeleton: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelBlendShape: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelInbetweenShape: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelRoot: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelAnimMapperRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelAnimQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelBakeSkinningParms: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelBinding: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelSkinningQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelBlendShapeQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelSkeletonQuery: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUIAccessibilityAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUIBackdrop: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUINodeGraphNodeAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUISceneGraphPrimAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsCoalescingDiagnosticDelegateUnsharedItem: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsCoalescingDiagnosticDelegateVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsCoalescingDiagnosticDelegateItem: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsCoalescingDiagnosticDelegate: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsSparseAttrValueWriter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsSparseValueWriter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdUtilsTimeCodeRange.const_iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsArticulationRootAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsCollisionAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsCollisionGroup: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsDistanceJoint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsJoint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsDriveAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsFilteredPairsAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsFixedJoint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsLimitAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsMassAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsMaterialAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsMeshCollisionAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsPrismaticJoint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsRevoluteJoint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsRigidBodyAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsScene: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdPhysicsSphericalJoint: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
@available(*, unavailable) extension pxr.UsdMtlxMaterialXConfigAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdMtlxUsdTypeInfo: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_MATERIALX_SUPPORT)
@available(*, unavailable) extension pxr.VdfConnection: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfInput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfInputSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfMask: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfOutputToMaskMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfConnectionAndMaskVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfConnectionAndMask: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfMask.iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduler.NodeToRequestMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfMaskedOutput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfMaskedOutputVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfInputSpecs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfOutputSpecs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfOutputSpec: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfVector.DebugPrintable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfInputAndOutputSpecs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfRequest: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfRequest.const_iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfRequest.IndexedView: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduler.PoolPriorityVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfEvaluationState: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfExecutionTypeRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduleNodeInvocation: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduleInputDependency: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfExecutionStats: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfExecutionStats.ScopedEvent: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfExecutionStats.ScopedMallocEvent: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfRequiredInputsPredicate: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduleOutput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduleInput: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfScheduleNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfDataManagerFacade: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfDataManagerHashTable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfExecutionStatsProcessor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfGrapherOptions: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfGrapherOptions.NodeLimitVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfGrapherOptions.NodeLimit: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfObjectPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfObjectPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfIndexedWeightsOperand: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfNodeSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfParallelDataManagerVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfRawValueAccessor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfSparseInputPathFinder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfSparseOutputTraverser: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfSparseVectorizedInputTraverser: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfSparseVectorizedOutputTraverser: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfTestUtils.OutputAccessor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfTestUtils.DependencyCallbackNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfTestUtils.CallbackNodeType: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfTestUtils.Node: @unchecked Sendable {}
@available(*, unavailable) extension pxr.VdfTestUtils.ExecutionStatsProcessor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.EfPageCacheCommitRequest: @unchecked Sendable {}
@available(*, unavailable) extension pxr.EfInputValueBlock: @unchecked Sendable {}
@available(*, unavailable) extension pxr.EfDependencyCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.EsfJournal: @unchecked Sendable {}
@available(*, unavailable) extension pxr.EsfSchemaConfigKey: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ExecTypeRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ExecUsdCacheView: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ExecUsdRequest: @unchecked Sendable {}
@available(*, unavailable) extension pxr.ExecUsdValueKey: @unchecked Sendable {}
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.GarchGLDebugWindow: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GarchGLPlatformDebugContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GarchGLPlatformDebugContextRefPtr: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Darwin)
@available(*, unavailable) extension pxr.GarchNSGLContextState: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && canImport(Darwin)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.HioFieldTextureDataSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioImageSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfx: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Parameter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Parameters: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Texture: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Textures: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Attribute: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioGlslfxConfig.Attributes: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HioImageRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.PxOsdMeshTopologyValidation: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfBindingMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfBindingMapPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfContextCaps: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfDrawTarget: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfDrawTargetRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfDrawTargetPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfDrawTarget.AttachmentRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfDrawTarget.AttachmentsMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfTexture: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfGLContextSharedPtr: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && !os(Linux)
@available(*, unavailable) extension pxr.GlfGLRawContextSharedPtr: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT) && !os(Linux)
#if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.GlfSimpleLightingContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfSimpleLightingContextRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfSimpleLightingContextPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfSimpleShadowArray: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfSimpleShadowArrayRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfTestGLContextSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfUniformBlock: @unchecked Sendable {}
@available(*, unavailable) extension pxr.GlfUniformBlockRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBlitCmdsUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureViewDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureViewHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiComputeCmdsUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiComputePipelineDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiComputePipelineHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiComputePipelineSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiComputePipelineHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferBindDescVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferBindDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureBindDescVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureBindDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiResourceBindingsDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiResourceBindingsHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiResourceBindingsSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiResourceBindingsHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiVertexBufferBindingVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiVertexBufferBinding: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiSamplerHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiSamplerHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderProgramDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderProgramHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderProgramHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderFunctionHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderFunctionHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiShaderFunctionDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsCmdsUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsCmdsDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsPipelineDesc: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsPipelineHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsPipelineSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGraphicsPipelineHandleVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiIndirectCommandsUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiIndirectCommands: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureGpuToCpuOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureCpuToGpuOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferGpuToGpuOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferCpuToGpuOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferGpuToCpuOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiTextureToBufferOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiBufferToTextureOp: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGLContextArenaHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HgiGLTextureConstPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdAovDescriptorList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdAovDescriptor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassAovBindingVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassAovBinding: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRprim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRprimSharedData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferArrayRangeSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferArrayRangePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferArrayRangeContainer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferArraySharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdReprSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDrawItem: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPerfLog: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshTopologySharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDirtyList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdResourceRegistrySharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexBaseRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexBasePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexBaseRefPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexNameRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceBaseAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdContainerDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVectorDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSampledDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBoolDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdResolverContextDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMatrixDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec2dDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec2fDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec2iDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3dDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3fDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3iDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec4fDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRprimCollectionDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdAssetPathDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPathDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPathExpressionDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTokenDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMatrixArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMatrix4fArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdQuatfArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec2dArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3dArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3fArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3hArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec3iArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec4dArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec4fArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVec4iArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTokenArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBoolArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPathArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDoubleArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFloatArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdIntArrayDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTokenVectorDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDoubleDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFormatDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFloatDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdIntDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStringDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTupleTypeDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSizetDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBlockDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLocator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLocatorDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLocatorSet: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLocatorSet.IntersectionIterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLocatorSet.IntersectionView: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexObserver: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexObserverPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexObserverPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexObserver.DirtiedPrimEntry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMergingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMergingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMergingSceneIndex.InputScene: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFilteringSceneIndexBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFilteringSceneIndexBasePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSingleInputFilteringSceneIndexBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyPrimSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyPrimSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSceneIndex.AddedPrimEntries: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSceneIndex.AddedPrimEntry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyTaskFactorySharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyTaskFactoryDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNoticeBatchingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNoticeBatchingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBasisCurvesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBasisCurvesSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBasisCurvesTopologySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBasisCurvesTopologySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferSourceSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferSourceSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdBufferSourceWeakPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCachingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCachingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCameraSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCameraSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSampledDataSourceContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSampledDataSourceContainerContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdIntArrayVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSplitDiopterSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSplitDiopterSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLensDistortionSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLensDistortionSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCapsuleSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCapsuleSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCategoriesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCollectionExpressionEvaluator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCollectionSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCollectionSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCollectionsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCommandArgDescriptors: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCommandArgDescriptor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCommandDescriptors: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCommandDescriptor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdConeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdConeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdContainerDataSourceEditor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCoordSysSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCoordSysSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCoordSysBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCubeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCubeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCylinderSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdCylinderSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLegacyPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLegacyTaskPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceLegacyTaskPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDataSourceMaterialNetworkInterface: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetworkInterfaceUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetworkInterface.NodeParamData: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetworkSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetworkSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependenciesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependencySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependenciesSchema.EntryPair: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependencySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependencyForwardingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDependencyForwardingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDisplayFilterSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDisplayFilterSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdEngine: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTaskSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTaskSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdDriver: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationUtils.ComputationDependencyMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationCpuCallbackSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationCpuCallbackDataSourceHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationInputComputationSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationInputComputationContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationInputComputationSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationOutputSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationOutputContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationOutputSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationPrimvarSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationPrimvarSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrimvarSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrimvarSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationPrimvarsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtComputationSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtentSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdExtentSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFlattenedDataSourceProviderSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFlattenedDataSourceProviderSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFlattenedDataSourceProvider.Context: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedContainerDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSampledDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSampledDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSmallVectorDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRetainedSmallVectorDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFlatteningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdFlatteningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGeomSubsetSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGeomSubsetSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNode: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetwork: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetworkMap: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNode2: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetwork2: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdImageShaderSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdImageShaderSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceCategoriesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceCategoriesSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstancedBySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstancedBySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceIndicesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceIndicesVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceIndicesSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstancerTopologySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstancerTopologySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInstanceSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdIntegratorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdIntegratorSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLazyContainerDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLazyContainerDataSource.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyDisplayStyleSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyDisplayStyleSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyGeomSubsetSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyGeomSubsetSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyTaskSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLegacyTaskSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdLightSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMapContainerDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMapContainerDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialBindingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialBindingsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialConnectionSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialConnectionContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialConnectionVectorContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialConnectionVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialConnectionSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialFilteringSceneIndexBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialInterfaceMappingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialInterfaceMappingsContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialInterfaceMappingVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialInterfaceMappingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNetwork2Interface: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeParameterSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeParameterContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialNodeParameterSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialOverrideSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialOverrideSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMaterialSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshTopologySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshTopologySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSubdivisionTagsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSubdivisionTagsSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshUtil: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshEdgeIndexTable: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdMeshTriQuadBuilder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsCurvesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsCurvesSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsPatchSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsPatchSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsPatchTrimCurveSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdNurbsPatchTrimCurveSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdOverlayContainerDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdOverlayContainerDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPlaneSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPlaneSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPluginRenderDelegateUniqueHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRendererPluginHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderSettingDescriptorList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderSettingDescriptor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrefixingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrefixingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrimDataSourceOverlayCache: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrimOriginSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPrimvarsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPurposeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdPurposeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderBufferSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderBufferSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderCapabilitiesSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderCapabilitiesSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRendererPluginRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassState: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderPassStateSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderProductSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderProductVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderProductSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderSettingsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderSettingsSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderVarSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderVarVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdRenderVarSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSampleFilterSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSampleFilterSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneGlobalsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneGlobalsSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexPluginRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexPrimView: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSceneIndexPrimView.const_iterator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSelectionSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSelectionSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSelectionSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSelectionsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSphereSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSphereSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSystemSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTetMeshSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTetMeshSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTetMeshTopologySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdTetMeshTopologySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVisibilitySchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVisibilitySchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVolume: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVolumeFieldBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVolumeFieldSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdVolumeFieldSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdXformSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdXformSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdInvalidatableContainerDataSourceAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdarSystemSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdarSystemSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGpGenerativeProceduralPluginRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGpGenerativeProceduralFilteringSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGpGenerativeProceduralFilteringSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGpGenerativeProceduralResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdGpGenerativeProceduralResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiCoordSysPrimSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiCoordSysPrimSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiDebuggingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiDebuggingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiDomeLightCameraVisibilitySceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiDomeLightCameraVisibilitySceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiExtComputationDependencySceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiExtComputationDependencySceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSiExtComputationPrimvarPruningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSiExtComputationPrimvarPruningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiImplicitSurfaceSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiImplicitSurfaceSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiLegacyDisplayStyleOverrideSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiLightLinkingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiLightLinkingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialBindingResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialBindingResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialOverrideResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialOverrideResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialPrimvarTransferSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiMaterialPrimvarTransferSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSiNodeIdentifierResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdSiNodeIdentifierResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiNurbsApproximatingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiNurbsApproximatingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrefixPathPruningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrefixPathPruningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPinnedCurveExpandingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPinnedCurveExpandingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimManagingSceneIndexObserver: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimManagingSceneIndexObserverRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimManagingSceneIndexObserver.PrimBaseHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimManagingSceneIndexObserver.PrimFactoryBaseHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypeAndPathPruningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypeAndPathPruningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypeNoticeBatchingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypeNoticeBatchingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypeNoticeBatchingSceneIndex.PrimTypePriorityFunctorHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypePruningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiPrimTypePruningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiRenderSettingsFilteringSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiRenderSettingsFilteringSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiSceneGlobalsSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiSceneGlobalsSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiSwitchingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiSwitchingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiTetMeshConversionSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiTetMeshConversionSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiUnboundMaterialPruningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiUnboundMaterialPruningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiVelocityMotionResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdsiVelocityMotionResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBindingRequest: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBindingRequestVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferResourceSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferResourceNamedList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferResourceNamedPair: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferArrayRangeSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferArrayRangeContainer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStCommandBuffer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStDrawItemInstance: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStDrawItem: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStComputationSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStCopyComputationGPU: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStDispatchBufferSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStDynamicUvTextureObjectSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureObjectSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureObjectPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureObjectPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureIdentifier: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStExtCompCpuComputationSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStShaderCodeSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStShaderCodeSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStShaderCodePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStComputationComputeQueuePairVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStResourceRegistrySharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStLightingShaderSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStField: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStGLSLProgram: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStGLSLProgramSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStBufferRelocator: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStInterleavedMemoryManager: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStInterleavedUBOMemoryManager: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStInterleavedSSBOMemoryManager: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStLight: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStMaterialNetwork: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStMaterialNetwork.TextureDescriptorVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStMaterialNetwork.TextureDescriptor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStRenderPassShaderSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStRenderPassState: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStRenderPassStateSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStRenderPassStateSharedPtrVector: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStSamplerObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStSamplerObjectSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStUvSamplerObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStFieldSamplerObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStPtexSamplerObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStUdimSamplerObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStSimpleLightingShaderSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStSimpleLightingShaderPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStStagingBuffer: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureHandleSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStTextureHandlePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStUdimTextureObject: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStVBOMemoryManager: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStVBOSimpleMemoryManager: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdStVolume: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxFreeCameraPrimDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxFreeCameraPrimDataSource.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxOitBufferAccessor: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxRenderSetupTaskSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxRenderTaskParams: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxInstancerContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxPrimOriginInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxPickTaskContextParams: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxPickResult: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxPresentTaskParams: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxSelectionSceneIndexObserver: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxSelectionTrackerSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxShadowParams: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxTaskControllerSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxTaskControllerSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxShaderInputs: @unchecked Sendable {}
@available(*, unavailable) extension pxr.HdxShadowMatrixComputationSharedPtr: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_IMAGING_SUPPORT)
#if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
@available(*, unavailable) extension pxr.UsdImagingAdapterRegistry: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCollectionMaterialBindingVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCollectionMaterialBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCollectionMaterialBindingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDirectMaterialBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDirectMaterialBindingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceAttributeColorSpace.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceAttributeTypeName.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurvesTopology: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurvesTopologyAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurves: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurvesAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurvesPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceBasisCurvesPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceGprim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceGprimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVisibility: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVisibilityAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePurpose: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePurposeAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtentCoordinate: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtentCoordinate.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtent: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtentAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtentsHint: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceExtentsHint.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXformResetXformStack: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXformResetXformStackAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXformMatrix: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXformMatrixAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXform: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceXformAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimOrigin: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimOriginAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimvars: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimvarsAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCustomPrimvars: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCustomPrimvarsAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimvar: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePrimvarAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCamera: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCameraAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCameraPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceCameraPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped.PropertyMappingBase: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped.AttributeMapping: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped.RelationshipMapping: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMapped.PropertyMappings: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMaterial: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMaterialAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMaterialPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMaterialPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceSubdivisionTags: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceSubdivisionTagsAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMeshTopology: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMeshTopologyAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMesh: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMeshAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMeshPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceMeshPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceNurbsCurvesPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceNurbsCurvesPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceNurbsPatchPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceNurbsPatchPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerMask: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerMaskAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerTopology: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerTopologyAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointInstancerPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointsPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourcePointsPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRelationship: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRelationshipAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderPassPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderPassPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderSettingsPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderSettingsPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderProductPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderProductPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderVarPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceRenderVarPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceStage: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceStageAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMeshTopology: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMeshTopologyAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMesh: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMeshAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMeshPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceTetMeshPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceUsdPrimInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceUsdPrimInfoAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVolumeFieldBindings: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVolumeFieldBindingsAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVolumePrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceVolumePrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDelegatePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingInstancerContext: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDrawModeAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingInstanceablePrimAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPrimAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPrimAdapterSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDrawModeSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDrawModeSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingExtentResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingExtentResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingExtentsHintSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGeomModelSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGeomModelSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGeomSubsetAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingIndexProxy: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingModelSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingModelSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingStageSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingStageSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSelectionSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSelectionSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingAPISchemaAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingAPISchemaAdapterSharedPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingAdapterRegistry.ApiSchemaAdapters: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingBasisCurvesAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGprimAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCapsuleAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCameraAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCollectionAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingConeAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCoordSysAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCoordSysAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCubeAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCylinderAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCylinderLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDiskLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDistantLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDomeLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDomeLight_1Adapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingFieldAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGeometryLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGeomModelAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingHermiteCurvesAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingInstanceAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingLightAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingLightFilterAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingShaderAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingNodeGraphAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRepresentedByAncestorPrimAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingVectorSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingsResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMaterialBindingsResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingMeshAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingNiPrototypePropagatingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingNiPrototypePropagatingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingNurbsCurvesAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingNurbsPatchAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPiPrototypePropagatingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPiPrototypePropagatingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPlaneAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPluginLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPluginLightFilterAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPointsAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPointInstancerAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingPortalLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRootOverridesSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRootOverridesSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUnloadedDrawModeSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUnloadedDrawModeSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdPrimInfoSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdPrimInfoSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderProductSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderProductSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderSettingsSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderSettingsSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderVarSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingUsdRenderVarSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRectLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderPassAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderProductAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderSettingsAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderSettingsFlatteningSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderSettingsFlatteningSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRenderVarAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRerootingContainerDataSource: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRerootingContainerDataSource.AtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRerootingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingRerootingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSceneIndexPluginUniquePtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSceneIndexPrimAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingCreateSceneIndicesInfo: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSceneIndices: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSphereAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingSphereLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingTetMeshAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingVolumeAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGLRendererSettingsList: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingGLRendererSetting: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdProcImagingGenerativeProceduralAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiPxrImagingAovLightAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiPxrImagingCameraAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiPxrImagingDisplayFilterAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiPxrImagingIntegratorAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdRiPxrImagingSampleFilterAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingAnimationAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingAnimationSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingAnimationSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBindingAPIAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBindingSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBindingSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBlendShapeAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBlendShapeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingBlendShapeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceAnimationPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceAnimationPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceBindingAPI: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceBindingAPIAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceBlendShapePrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceBlendShapePrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceResolvedPointsBasedPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceResolvedPointsBasedPrimHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingResolvedSkeletonSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingResolvedSkeletonSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceResolvedSkeletonPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceResolvedSkeletonPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkeletonSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkeletonSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceSkeletonPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingDataSourceSkeletonPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingInbetweenShapeContainerSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingInbetweenShapeSchema: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingInbetweenShapeSchema.Builder: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingPointsResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingPointsResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkeletonResolvingSceneIndexRefPtr: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkeletonResolvingSceneIndex: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkeletonAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdSkelImagingSkelRootAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceFieldAsset: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceFieldAssetAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceFieldAssetPrim: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingDataSourceFieldAssetPrimAtomicHandle: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingOpenVDBAssetAdapter: @unchecked Sendable {}
@available(*, unavailable) extension pxr.UsdImagingField3DAssetAdapter: @unchecked Sendable {}
#endif // #if canImport(SwiftUsd_PXR_ENABLE_USD_IMAGING_SUPPORT)
