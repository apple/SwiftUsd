//
//  TfNoticeProtocolConformances.swift
//  swiftUsd
//
//  Created by Maddy Adams on 4/17/24.
//

// This file was generated by ast-answerer. Do not edit!


fileprivate func _convertCallback(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> (__SwiftUsd.TfNotice.PointerHolder) -> () {
    { (p: __SwiftUsd.TfNotice.PointerHolder) in
        callback(.init(p.notice))
    }
}
fileprivate func _convertCallback(_ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> (pxr.TfAnyWeakPtr, __SwiftUsd.TfNotice.PointerHolder) -> () {
    { (s: pxr.TfAnyWeakPtr, p: __SwiftUsd.TfNotice.PointerHolder) in
        callback(s, .init(p.notice))
    }
}
extension pxr.TfDebugSymbolsChangedNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.TfDebugSymbolEnableChangedNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.TfNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.TfTypeWasDeclaredNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.TraceCollectionAvailable: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.PlugNotice.Base: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.PlugNotice.DidRegisterPlugins: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.ArNotice.ResolverNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.ArNotice.ResolverChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.Base: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayersDidChangeSentPerLayer: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayersDidChange: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerInfoDidChange: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerIdentifierDidChange: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerDidReplaceContent: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerDidReloadContent: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerDidSaveLayerToFile: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerDirtinessChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.SdfNotice.LayerMutenessChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.UsdNotice.StageNotice: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.UsdNotice.StageContentsChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.UsdNotice.ObjectsChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.UsdNotice.StageEditTargetChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
extension pxr.UsdNotice.LayerMutingChanged: SwiftUsd.TfNoticeProtocol {
    public static func _Register(_ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }
    public static func _Register(_ sender: pxr.TfAnyWeakPtr, _ callback: @escaping (pxr.TfAnyWeakPtr, borrowing pxr.TfNotice.NoticeCaster) -> ()) -> pxr.TfNotice.SwiftKey {
        var key = pxr.TfNotice.SwiftKey()
        __SwiftUsd.TfNotice.Register(_convertCallback(callback), sender, &key, Notice: Self.self)
        return key
    }

    public static func _dynamic_cast(_ p: UnsafePointer<pxr.TfNotice>) -> UnsafePointer<Self>? {
        var result: UnsafePointer<Self>?
        __SwiftUsd.TfNotice.dyn_cast(p, &result)
        return result
    }
}
